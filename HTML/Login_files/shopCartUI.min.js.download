/** shop Cart User Interface **/
var shopCartUI =
    {
        searchWindows: {

            'searchedResults': 'innerSearchedScroll',      // Past (Saved )Search Results
            'searchResults': 'searchResultsScroll',        // Present Search Results
            'searchedSkus': 'innerViewScroll'          // Viewed Items
        },
        loadOnList: {},
        loadOffList: {},
        loadingClass: '.loadingPane',
        activeviewport: '',
        baseURL: '',
        lastScrollY: 0,
        values: {},
        apppathsuffix: 'hfctablet',
        lastSearch: '',
        currentSearch: '',
        clickEventToUse: 'click',
        skuPageSize: 0,
        activeSession: '',
        calHeading: '',
        engagedCustomer: 'n',
        nextSearchSeq: [],
        idleTimer: 0,
        logOutTimeInMinutes: 120,
        watchdogTimer: null,
        personalizedLivingItemShow: true,
        personalizedLivingAllItemsSelected: true,
        plWarning: true,
        plTimeOut: null,

        //properties etc
        monthSelect: "<option value='01'>01</option>" +
        "<option value='02'>02</option>" +
        "<option value='03'>03</option>" +
        "<option value='04'>04</option>" +
        "<option value='05'>05</option>" +
        "<option value='06'>06</option>" +
        "<option value='07'>07</option>" +
        "<option value='08'>08</option>" +
        "<option value='09'>09</option>" +
        "<option value='10'>10</option>" +
        "<option value='11'>11</option>" +
        "<option value='12'>12</option>",

        newDate: 0,
        yearSelect: '',

        //constructor
        initialize: function (baseurl, pathsuffix, clickeventtouse) {
            window.ShopCartNumKeyPad = null;
            $(document).add('*').off();
            shopCartUI.activeSession = $.cookie('PHPSESSID');
            window.CalcAnswer = null;
            $(document).ready(
                function () {
                    $('#loadNotify').removeClass('showing');
                    window.CalcAnswer = $('#CalcAnswer')[0];
                    $("#simpleCalculator input[type=button]").each(function () {
                        $(this).nodoubletapzoom();
                    });

                    FastClick.attach(document.body);

                    // Init ShopData
                    PW.Bind(clickeventtouse);
                    LoginWindow.Bind(clickeventtouse);
                    CustomerInfo.Bind(clickeventtouse);

                    //ToolTip.init();

                    //keeps the user from zooming in or out on the page/doesn't always work
                    document.addEventListener('touchmove', function (event) {
                        event = event.originalEvent || event;
                        if (event.scale > 1) {
                            event.preventDefault();
                        }
                    }, false);

                    $('body').on('click', '.addToCart', function () {
                        shopCartUI.addToCart($(this));
                    });
                    $('body').on('click', '#refeshScreen', function () {
                        var customerData = ShopdataUI.data;
                        customerData.refresh = true;
                        $.ajax({
                            url: ShopdataUI.baseURL + 'index.php/main/ShopData_Read',
                            type: 'post',
                            data: {row: ShopdataUI.data},
                            dataType: 'json',
                            success: function () {
                                location.reload();
                            },
                            error: function () {
                                location.reload();
                            }
                        });
                    });

                    $('body').on('click', '#closeCustomerEmailPreviewWindow', function() {
                        $('#customerEmailPreviewWindow').remove();
                    });
                }
            ).ajaxStart(function () {
                ShopdataUI.Loading_On();
                shopCartUI.loadingOn();
            }).ajaxStop(function () {
                ShopdataUI.Loading_Off();
                shopCartUI.loadingOff();
            });

            if (arguments.length == 0) {
                shopCartUI.baseURL = location.pathname;
                var iii = shopCartUI.baseURL.lastIndexOf("/" + shopCartUI.apppathsuffix);
                if (iii > -1) {
                    shopCartUI.baseURL = shopCartUI.baseURL.substring(0, iii + 17) + "/";
                } else {
                    shopCartUI.baseURL = "";
                }
                if (shopCartUI.baseURL.endsWith('/index.php/main')) {
                    shopCartUI.baseURL = shopCartUI.baseURL.substring(0, baseURL.length - 15);
                }
                if (shopCartUI.baseURL.endsWith('/index.php/main/')) {
                    shopCartUI.baseURL = shopCartUI.baseURL.substring(0, baseURL.length - 16);
                }
            } else {
                shopCartUI.baseURL = arguments[0];
            }

            if (shopCartUI.baseURL.length > 3) {
                if (shopCartUI.baseURL.substring(shopCartUI.baseURL.length - 2, 2) == '//') {
                    shopCartUI.baseURL = shopCartUI.baseURL.substring(0, shopCartUI.baseURL.length - 1);
                }
            }

            if (arguments.length > 1) {
                shopCartUI.apppathsuffix = arguments[1];
            }

            if (arguments.length == 3 && arguments[2] != null && arguments[2].trim().length > 0) {
                shopCartUI.clickEventToUse = arguments[2];
            }

            $('body').on('click', '#showCalc', shopCartUI.showCalculator);

            shopCartUI.initEnvironment();
            shopCartUI.initHandlers();
            shopCartUI.initControls();
            shopCartUI.watchdog();
            shopCartUI.removeReplacementTextFromEditor();
            shopCartUI.removeScheduledDate();
            shopCartUI.hfcNotesChanges();
            shopCartUI.saveHFCNote();
            shopCartUI.deleteHFCNote();
            shopCartUI.editHFCNote();
            shopCartUI.PastPurchases();
            shopCartUI.CustomSofaOrder();
            shopCartUI.QuickSearchScreen();
            shopCartUI.QuickSearchDropDown();
            shopCartUI.SlideOutMenu();
            shopCartUI.uiDialogCloseButton();
            shopCartUI.CustomJqueryUIAutoComplete();
            shopCartUI.viewMobileSearchOptions();
            shopCartUI.CustomerListSection();
            shopCartUI.checkScreenWidth();
            shopCartUI.mobileViewControllers();
            shopCartUI.closeModal();
            shopCartUI.showCustomEmailPreview();
            shopCartUI.sendCustomEmail();
            shopCartUI.setEmailTemplateBySentEmail();
            shopCartUI.purePromiseCheckBox();
            shopCartUI.switchPurePromiseButton();
            shopCartUI.saveDeliveryInstructions();
            shopCartUI.lookupCustomer();
            shopCartUI.restartLookupCustomer();
            shopCartUI.showProductInformation();
            shopCartUI.closeProductInfoPage();
            shopCartUI.loadSearchedSku();
            shopCartUI.loadViewedItems();
            shopCartUI.viewPreviousSearchResults();
            shopCartUI.showImgInModal();
            shopCartUI.toggleCouponsView();
            shopCartUI.removeCouponCode();
            shopCartUI.onCouponCodeSubmit();
            shopCartUI.increaseCartItemQuantity();
            shopCartUI.openBtnGroup();
            shopCartUI.btnGroupAddActive();
            shopCartUI.addAdditionalPhoneEntries();
            shopCartUI.removeAdditionalPhoneEntries();
            shopCartUI.delInstructionsAddPhone();
            shopCartUI.switchPrimaryContact();
            shopCartUI.openCompetitiveShopping();
            shopCartUI.initProductOptions();
            shopCartUI.viewCartInWindow();
            shopCartUI.closePrintScreenCart();
            shopCartUI.checkIfCartNeedsScheduled();
            shopCartUI.openPersonalizedLiving();
            shopCartUI.showSkippedSkus();
            shopCartUI.headerDeliveryCharges();

            shopCartUI.searchForSkus();
            shopCartUI.listenForSearchWindowCloseEvent();
            shopCartUI.listenForAutoFilledSearch();
            shopCartUI.emailCart();
            shopCartUI.fitAgreementWindow();
            shopCartUI.listenForFitWarningCancel();
            shopCartUI.addQuickSkuItem();
            shopCartUI.saveQuickSkuItem();
            shopCartUI.sortCustomerList();
            shopCartUI.searchCustomerList();

            $(window).resize(function () {
                shopCartUI.checkScreenWidth();
            });
            shopCartUI.insertGoogleReviewLink();

            $("#inboxmenu.accordion h3:eq(1)").trigger('click');
        },

        isTouchDevice: function () {
            return (shopCartUI.clickEventToUse.toLowerCase().indexOf('touch') > -1);
        },

        viewCartInWindow: function () {
            $('body').on('click', '#printCustomerCart', function () {
                $.ajax({
                    url: shopCartUI.baseURL + 'index.php/main/getSkuPrintCart',
                    type: 'post',
                    dataType: 'json',
                    data: {'GREETING_ID': ShopdataUI.data.SDGREETID},
                    success: function (data) {
                        if (data.success) {
                            $('#shoppingCartSection').addClass('hide');
                            $('#printScreenCartArea').html(data.data.view).removeClass('hide');
                        } else {
                            shopCartUI.handleFailedAjaxCall(data);
                        }
                    },
                    error: function () {
                        shopCartUI.openModal('modal-md', 'Oops, an error occured', 'There was an error pulling up the page, please refresh the page and try again', 'printItemError');
                    }
                });
            });
        },

        closePrintScreenCart: function () {
            //TODO: make functions like this into one
            $('body').on('click', '.closePrintScreenCart', function () {
                $('#printScreenCartArea').html('');
                $('#printScreenCartArea').addClass('hide');
                $('#shoppingCartSection').removeClass('hide');
            });
        },

        SlideOutMenu: function () {
            $('.rightMenuButton').click(function () {
                if ($('#rightMenu').hasClass('open')) {
                    shopCartUI.CloseSideMenu();
                } else {
                    shopCartUI.OpenSideMenu();
                }
            });
            $('#appBody').click(function () {
                shopCartUI.CloseSideMenu();
            });
        },

        OpenSideMenu: function () {
            $('#rightMenu').removeClass('hide');
            if (!$('#rightMenu').is(':animated')) {
                $("#rightMenu").animate({
                    right: "0",
                }, 500, function () {
                    $('#rightMenu').addClass('open');
                });
            }
        },

        CloseSideMenu: function () {
            if (!$('#rightMenu').is(':animated')) {
                $("#rightMenu").animate({
                    right: "-345",
                }, 500, function () {
                    $('#rightMenu').removeClass('open');
                    $('#rightMenu').addClass('hide');
                });
            }
        },

        refinedResults: false,
        refineSearchResults: function () {
            var filter = $('.liveType').val();
            var results = $('.liveType').closest("#searchResultsArea").find('.searchResultItem');
            var resultsCount = $('.liveType').closest("#searchResultsArea").find('.liveResultCount');
            var resultsCount = $('.searchResultLink').length;
            var resultTotal = $('.liveResultCount').attr('rel');

            if (resultsCount < resultTotal && shopCartUI.refinedResults === false) {
                shopCartUI.refinedResults = true;
                shopCartUI.searchResultsLoadMore(1);
            }

            var rCount = 0;
            if (results.length == 0) {
                return;
            }
            results.closest('.col-md-15').hide();

            var splitFilter = filter.toLowerCase().split(" ");

            var newFilter = new Array();
            for (x in splitFilter) {
                if (!splitFilter.hasOwnProperty(x)) {
                    continue;
                }
                if (splitFilter[x].trim() != "") {
                    newFilter[x] = splitFilter[x];
                }

            }
            $.each(results, function (i, elem) {
                var filterkey = $(elem).attr("filterkey");
                var i = 0;
                if (typeof filterkey != 'undefined' && filterkey.trim() != '') {
                    for (x in newFilter) {
                        if (!newFilter.hasOwnProperty(x)) {
                            continue;
                        }

                        if (filterkey.indexOf(newFilter[x]) >= 0) {
                            i++;
                            if (i == newFilter.length) {
                                break;
                            }
                        }
                    }

                }

                if (i == newFilter.length) {
                    $(elem).closest('.col-md-15').show();
                    rCount++;
                }

            });

            $('.liveResultCount').text(rCount);

        },

        checkIfValidSession: function () {
            var valid = $.cookie('PHPSESSID');

            if (typeof valid == 'string' && valid.trim() != '' && shopCartUI.activeSession == valid) {
                if (shopCartUI.idleTimer == 0) {
                    $.cookie('PHPSESSID', valid, {expires: shopCartUI.logOutTimeInMinutes + 'm'});
                }
                //valid session
            } else {
                location.reload();
            }
        },

        btnGroupAddActive: function () {
            $('body').on('click', '.button-switches .btn-group', function () {
                $(this).parent().find('.btn-group.active').removeClass('active');
                $(this).addClass('active');
            });
        },

        disableWatchDog: function () {
            shopCartUI.idleTimer = 0;
            if (shopCartUI.watchdogTimer != null) {
                window.clearInterval(shopCartUI.watchdogTimer);
                shopCartUI.watchdogTimer = null;
            }
        },

        watchdog: function () {
            $(document).ready(function () {
                $('body').on('keypress mousemove scroll click touchstart', function () {
                    shopCartUI.idleTimer = 0;
                    shopCartUI.checkIfValidSession();
                });
                shopCartUI.idleTimer = 0;
                shopCartUI.watchdogTimer = window.setInterval(shopCartUI.idleIncrement, 60000);
            });
        },

        idleIncrement: function () {
            shopCartUI.idleTimer++;
            shopCartUI.checkIfValidSession();
            if (shopCartUI.watchdogTimer == null) {
                location.reload();
            }

            if (shopCartUI.idleTimer >= shopCartUI.logOutTimeInMinutes) {
                shopCartUI.logOut(false, 'Timeout');
            } else if (shopCartUI.logOutTimeInMinutes - shopCartUI.idleTimer <= 5) {
                var left = shopCartUI.logOutTimeInMinutes - shopCartUI.idleTimer;
                left = left + "";
                console.log(left + ' min left before logout!');
                var msg = "Application idle for " + (shopCartUI.idleTimer) + " minutes app will log out in " + left + " minutes";
                shopCartUI.displayMsg(msg, "Information", true, true);
            }
        },

        initEnvironment: function () {
            if (!String.prototype.endsWith) {
                Object.defineProperty(String.prototype, 'endsWith', {
                    value: function (searchString, position) {
                        var subjectString = shopCartUI.toString();
                        if (position === undefined || position > subjectString.length) {
                            position = subjectString.length;
                        }
                        position -= searchString.length;
                        var lastIndex = subjectString.indexOf(searchString, position);
                        return lastIndex !== -1 && lastIndex === position;
                    }
                });
            }
            shopCartUI.newDate = new Date();
            for (x = shopCartUI.newDate.getFullYear(); x < 2025; x++) {
                shopCartUI.yearSelect = shopCartUI.yearSelect + "<option value='" + x + "'>" + x + "</option>";

            }
        },

        initProductOptions: function () {
            $('body').on('click', '#optsel_optsel_ li', function (event) {
                var csssel = $(this).attr('data-csssel');
                var sku = $(this).attr('data-sku');

                View.optclickbutton(event, $(this), $(this).attr('id'), csssel, sku);
            });
        },

        initControls: function () {
            $(document).ready(function () {
                shopCartUI.enableComponentAvailability();
                $(".swipespinner").eerospinner(
                    {
                        min: -1,
                        max: 99,
                    }
                );
            });
        },

        emailCart: function() {
            $('body').on('click','#cmdEmailCart',function(event){
                event.stopPropagation();
                $.post(shopCartUI.baseURL+'index.php/main/emailCart',{GREETING_ID: ShopdataUI.data.SDGREETID},function(data) {
                    if(!data.success) {
                        shopCartUI.handleFailedAjaxCall(data);
                    } else {
                        shopCartUI.displayMsg(data.msg, 'Success');
                    }
                }, "json").fail(function (data) {
                    shopCartUI.handleCartError(data);
                });
            });
        },

        initHandlers: function () {
            $(document).ready(function () {

                try {
                    window.onerror = function (errorMsg, url, lineNumber, columnNumber, errorObj) {
                        try {
                            $.post(shopCartUI.baseURL + 'index.php/main/logError',
                                {
                                    "message": errorMsg,
                                    "url": url,
                                    "lineNumber": (lineNumber == null ? "" : lineNumber),
                                    "columnNumber": (columnNumber == null ? "" : columnNumber),
                                    "errorObj": (errorObj == null ? "" : errorObj.toString())
                                },
                                function (data) {
                                    result = data;
                                    shopCartUI.Loading_Off();
                                    if (errorMsg.indexOf('FreshAddress') != -1) {
                                        shopCartUI.displayMsg('Email verification failed');
                                    }
                                }
                            );
                        }
                        catch (ex) {

                        }
                    }
                } catch (ex) {
                }
                // Convert enter key press to tab key press, without submitting form
                $("input").not($(":button")).keypress(function (evt) {

                    if (evt.keyCode == 13) {
                        if (evt.target.id == "txtWord"
                            || evt.target.id == "txtWord2") {
                            //$('.cmdSearchSKU').trigger('click');
                        } else {
                            var fields = $(this).parents('form:eq(0),body').find('button, input, textarea, select');
                            var index = fields.index(this);
                            if (index > -1 && index < fields.length) {  // the initial code was: if (index > -1 && (index + 1) < fields.length) {
                                fields.eq(index).focus();   // the initial code was: fields.eq(index + 1).focus();
                            }
                        }
                    }
                });


                $('body').on('focus', "#txtSKU, #txtSKU2", function (event) {
                    $(this).mask('00000000', {
                        translation: {
                            'Z': {
                                pattern: /[0-9]/, optional: true
                            }
                        }
                    });
                });


                $('body').on('click', '#viewHFCEmails', shopCartUI.managerViewHFCEmails)
                    .on('click', '.availButton, .checkDate', function () {
                        shopCartUI.showProductInformation(this);
                    }).on('click', '#checkout', function () {

                    shopCartUI.LoadingOn();

                    if (ShopdataUI.data.SDCUSTNBR !== '0') {
                        $.post(shopCartUI.baseURL + 'index.php/main/profileForm', {checkout: '1'}, function (data) {
                            shopCartUI.LoadingOff();
                            View.MainData_Open('Customer Profile', data);
                        });
                    }
                    else {
                        $.post(shopCartUI.baseURL + 'index.php/main/checkout', {}, function (data) {
                            shopCartUI.LoadingOff();
                            $('.close').hide();
                            View.MainData_Open(data.result[0]['TEXT'], data.result[0]['HEADER']);
                        });
                    }
                })
                    .on('click', '#TYPEp', function () {

                        var cart = ShopdataUI.data.SDCARTID;

                        $('#delInstruction').slideUp();

                        var rand = '';
                        $.ajax({
                            url: shopCartUI.baseURL + 'index.php/main/getCartCalendarDays',
                            dataType: 'json',
                            data: {
                                CART_ID: ShopdataUI.data.SDCARTID,
                                DTYPE: type,
                                GREETING_ID: ShopdataUI.data.SDGREETID
                            },
                            type: 'post',
                            success: function (data) {
                                if (data.success) {
                                    shopCartUI.loadDatepicker(data.data);
                                } else {
                                    shopCartUI.handleFailedAjaxCall(data);
                                }
                            },
                            error: function () {
                                shopCartUI.displayMsg('Failed to load dates, try refreshing the page and trying again');
                            }
                        });
                    })
                    .on('click', '#TYPEd', function () {

                        var cart = ShopdataUI.data.SDCARTID;

                        $('#delInstruction').slideDown();


                        $('#DDATE').val('');
                        $.ajax({
                            url: shopCartUI.baseURL + 'index.php/main/getCartCalendarDays',
                            dataType: 'json',
                            data: {
                                CART_ID: ShopdataUI.data.SDCARTID,
                                DTYPE: type,
                                GREETING_ID: ShopdataUI.data.SDGREETID
                            },
                            type: 'post',
                            success: function (data) {
                                if (data.success) {
                                    shopCartUI.loadDatepicker(data.data);
                                    $("#DDATE").datepicker('show');
                                } else {
                                    shopCartUI.handleFailedAjaxCall(data);
                                }
                            },
                            error: function () {
                                shopCartUI.displayMsg('Failed to load dates, try refreshing the page and trying again');
                            }
                        });


                    })
                    .on('focus', '#DDATE', function () {


                        if ($(this).hasClass("hasDatepicker")) {

                        } else {

                            $('#TYPEp').parent().css({'border-left': '4px red solid'});
                            $('#TYPEd').parent().css({'border-left': '4px red solid'});

                        }
                    })

                    .on('click', '.customEmail,#customEmails', shopCartUI.showCustomEmailPane)
                    .on('change', '#hfclists', function () {
                        var inputVal = $('#hfclists').val();
                        $.post(shopCartUI.baseURL + 'index.php/main/switchHFC', 
                            {"empNum": inputVal.split('-')[0], "hfcid": inputVal.split('-')[1]}, 
                            function () {
                                ShopdataUI.data = {};
                                shopCartUI.updateAppSections('shoppingCartSection');
                            }
                        );
                    })
                    .on('click', '.customer', function () {
                        ShopdataUI.isCartReadOnly = false;
                        ShopdataUI.data = {};

                        var customerTile = $(this).html();
                        var greetId = $(this).data('greetid');
                        var section = $(this).data('customertype');
                        var cartid = $(this).data('cartid');

                        $('#currentCustomerBox').html(customerTile);
                        $('#customerListView').modal('hide');
                        $('#customerListSection li').removeClass('activeCustomer');
                        $('#customerListSection #' + section).addClass('activeCustomer');
                        $('#cmdLogin, #prevSkus, #divCustomerHeader, #pastPurchases').show();
                        var row = {'SDGREETID': greetId, 'customer_section': section, SCCARTID: cartid};

                        ShopdataUI.LoadData(row);
                    })
                    .on('click', '.microImg', function () {
                        try {
                            var row = shopCartUI.getJSONDataRow(this);
                            if (row != null && shopCartUI.validSkuRow(row)) {
                                shopCartUI.Avail_Update("", "AHINQID", row);
                            } else {
                                var sku = $(this).prop('id');
                                sku = sku.split('_');
                                sku = sku[1];
                                shopCartUI.Avail_Update(sku);
                            }
                        } catch (err) {
                        }
                    })
                    .on(shopCartUI.clickEventToUse, '#btnPickup', function () {
                        if (!ShopdataUI.isCartReadOnly && !$(this).hasClass('disabled')) {
                            ShopdataUI.data = $('#currentCustomerBox').data('customer');
                            if (!$(this).hasClass('disabled')) {
                                var type = 'P';
                                $.ajax({
                                    url: shopCartUI.baseURL + 'index.php/main/getCartCalendarDays',
                                    dataType: 'json',
                                    data: {
                                        CART_ID: ShopdataUI.data.SDCARTID,
                                        DTYPE: type,
                                        GREETING_ID: ShopdataUI.data.SDGREETID
                                    },
                                    type: 'post',
                                    success: function (data) {
                                        if (data.success) {
                                            shopCartUI.loadDatepicker('#PDATE', data.data);
                                            $("#PDATE").datepicker('show');
                                        } else {
                                            shopCartUI.handleFailedAjaxCall(data);
                                        }
                                    },
                                    error: function () {
                                        shopCartUI.displayMsg('Failed to load dates, try refreshing the page and trying again');
                                    }
                                });
                            } else {
                                shopCartUI.displayMsg('You must first add customer details to the customer information section');
                            }
                        } else {
                            shopCartUI.displayMsg('Invoice can not be maintained.');
                        }
                    }).on(shopCartUI.clickEventToUse, '#btnDelivery', function () {
                    if (!ShopdataUI.isCartReadOnly && !$(this).hasClass('disabled')) {
                        ShopdataUI.data = $('#currentCustomerBox').data('customer');
                        if (!$(this).hasClass('disabled') && ShopdataUI.data.SDCUSADDR1 != '') {
                            var type = 'D';
                            $.ajax({
                                url: shopCartUI.baseURL + 'index.php/main/getCartCalendarDays',
                                dataType: 'json',
                                data: {
                                    CART_ID: ShopdataUI.data.SDCARTID,
                                    DTYPE: type,
                                    GREETING_ID: ShopdataUI.data.SDGREETID
                                },
                                type: 'post',
                                success: function (data) {

                                    if (data.success) {
                                        if(data.time_windows) {
                                            var titleType = type == 'D' ? 'Delivery' : 'Pick Up';

                                            shopCartUI.openModal('modal-lg', 'Schedule ' + titleType + ' Date', data.html, 'schedulerDateTimeWindow');
                                            ShopdataUI.scheduleDateSelected();
                                            ShopdataUI.scheduleWindowTime();

                                            var delDate = ShopdataUI.data.SCDELDATE;
                                            if (delDate != '') {
                                                var day = delDate.toString().substring(8, 6);

                                                $('.calendarContent .circle .date').each(function () {
                                                    if ($(this).html().trim() == day.trim()) {

                                                        var selectedDate = 0;
                                                        var timesAvailable = '';
                                                        var selected = '';

                                                        if (ShopdataUI.data.SCDELTYPE == 'D') {
                                                            $(this).closest('.calendarContent').addClass('selected');

                                                            selectedDate = $(this).closest('.calendarContent').attr('data-date');
                                                            timesAvailable = $(this).closest('.calendarContent').attr('data-times');
                                                            selected = ShopdataUI.getScheduledStartTime();
                                                            document.cookie = "time="+selected+"; path=/;"; // SET THE TIME HERE FROM ShopdataUI.data.SCSCHTIME ADD IF SET CHECK
                                                        }
                                                        ShopdataUI.showScheduledDateSetting(selectedDate, timesAvailable, selected);
                                                    }
                                                });
                                            }
                                        } else {
                                            shopCartUI.loadDatepicker('#DDATE', data.data);
                                            $("#DDATE").datepicker('show');
                                        }
                                    } else {
                                        shopCartUI.handleFailedAjaxCall(data);
                                    }

                                },
                                error: function () {
                                    shopCartUI.displayMsg('Failed to load dates, try refreshing the page and trying again');
                                }
                            });
                        } else {
                            shopCartUI.displayMsg('You must first add customer details to the customer information section');
                        }
                    } else {
                        shopCartUI.displayMsg('Invoice can not be maintained.');
                    }
                }).on('click', '#btnInstructions', function () {
                    if (!ShopdataUI.isCartReadOnly) {
                        shopCartUI.openDeliveryInstructions();
                    } else {
                        shopCartUI.displayMsg('Invoice can not be maintained.');
                    }
                }).on(shopCartUI.clickEventToUse, '.SDCUSPTYP1', function () {
                    $('.SDCUSPTYP1').removeClass('buttonActive');
                    $(this).addClass('buttonActive');
                }).on(shopCartUI.clickEventToUse, '.SDCUSPTYP2', function () {
                    $('.SDCUSPTYP2').removeClass('buttonActive');
                    $(this).addClass('buttonActive');
                }).on(shopCartUI.clickEventToUse, '.SCSHPPTYP1', function () {
                    $('.SCSHPPTYP1').removeClass('buttonActive');
                    $(this).addClass('buttonActive');
                }).on(shopCartUI.clickEventToUse, '.SCSHPPTYP2', function () {
                    $('.SCSHPPTYP2').removeClass('buttonActive');
                    $(this).addClass('buttonActive');
                })
                    .on(shopCartUI.clickEventToUse, '.scheduleInHome', function () {
                        shopCartUI.scheduleInHome_Load();
                    })
                    .on(shopCartUI.clickEventToUse, '#scheduleInHome', function () {
                        shopCartUI.scheduleInHome_Save();
                    })
                    .on(shopCartUI.clickEventToUse, '#optsel_hide', function () {
                        View.optsel_hide();
                    })
                    .on('keyup', '.liveType', function () {
                        if ($(this).val().length >= 1) {
                            var typingTimer;
                            var doneTypingInterval = 1000;
                            $(this).on('keyup', function () {
                                clearTimeout(typingTimer);
                                typingTimer = setTimeout(shopCartUI.refineSearchResults, doneTypingInterval);
                            });
                            $(this).on('keydown', function () {
                                clearTimeout(typingTimer);
                            });
                        } else {
                            var resultTotal = $('.liveResultCount').attr('rel');
                            $('.searchResultItem').closest('.col-md-15').show();
                            $('.liveResultCount').text(resultTotal);
                        }
                    })
                    .on(shopCartUI.clickEventToUse, '.modalClose', function (event) {
                        shopCartUI.Modal_Close(event.target)
                    })
                    .on('click', '#loadMoreResults', function () {
                        shopCartUI.searchResultsLoadMore()
                    })
                    .on('click', '#loadRelatedItems', function () {
                        shopCartUI.loadRelatedItems()
                    })
                    .on(shopCartUI.clickEventToUse, '#cmdRefreshCustomers', shopCartUI.reloadCustomers)
                    .on('click', '#hfc_notes_btn', shopCartUI.loadHFCNotes)
                    //.on('click', '.customerListSection', shopCartUI.LoadCustomerList)
                    .on('click', '#emailTemplate', shopCartUI.EmailBuilderOpen)
                    .on(shopCartUI.clickEventToUse, '.getComponetAvali', shopCartUI.getComponentAvailability)


                $('body').on('hidden.bs.modal', '#customerListView', function () {
                    $('#customerListSection li').removeClass('active');
                    $('body').off('scroll', '#customerListView .modal-body');
                    shopCartUI.loadingCustomerList = false;
                });

                $('body').delegate('#edit-email-sig', 'click', function () {
                    $('#email-signature-box').toggle();
                    $('#email-signature-display').toggle();
                    $(this).closest('.htmlEditorInput').find('.googleReviewLink').removeClass('hide');
                });


                //Populates the template data into the ui boxes
                $('body').on('change', '#template-selection', function () {
                    clearTimeout(shopCartUI.plTimeOut);
                    $('#templateWarning').remove();
                    if ($(this).val()) {
                        var emailBody = $(this).find(':selected').data('body');
                        var subject = $(this).find(':selected').data('subject');
                        var selectedSubject = $('#email-subject').val();
                        var selectedBody = $('#template-selection option[data-subject="' + selectedSubject + '"]').attr('data-body');

                        if ($('#emailBody').val().replace(/<\/?[^>]+(>|$)/g, "") == '' || selectedBody == $('#emailBody').val() || $('#emailBody').val() == '<br>') {
                            $('#email-subject').val(subject);
                            htmlInputEditor.setInputValue('emailBodyInput', emailBody);
                        } else {
                            $('#template-selection').after('<span id="templateWarning" class="text-warning">Template not applied because you\'ve made changes to the body. To apply a template:  Exit email /start over or erase email body.</span>');
                            $('#template-selection').val('');
                            shopCartUI.plTimeOut = setTimeout(function () {
                                $('#templateWarning').slideUp();
                                shopCartUI.plTimeOut = '';
                            }, 5000);
                        }
                    }
                });

                $('body').on('click', '.ui-cancel-button', function () {
                    $('#customer-email-window').dialog('close');
                });
            });

        },

        loadingOn: function () {
            shopCartUI.loadingOff();
            for (var selector in shopCartUI.loadOnList) {
                if (!shopCartUI.loadOnList.hasOwnProperty(selector)) {
                    continue;
                }
                if (selector != '' && !$(selector).hasClass(shopCartUI.loadingClass)) {
                    $(selector).addClass(shopCartUI.loadingClass);
                }
            }
        },

        loadingOff: function () {
            while (shopCartUI.loadOffList.length > 0) {
                var selector = shopCartUI.loadOffList.pop();
                if ($(selector).hasClass(shopCartUI.loadingClass)) {
                    $(selector).removeClass(shopCartUI.loadingClass);
                }
            }
        },

        onCouponCodeSubmit: function () {
            $('body').on('submit', '#couponCodeForm', function (event) {
                event.preventDefault();
                if (!ShopdataUI.isCartReadOnly) {
                    var coupon = $('#cmdCoupons').val();
                    shopCartUI.couponCodeHandler('checkCouponCode', coupon, 'add');
                } else {
                    shopCartUI.displayMsg('Invoice can not be maintained.');
                }
            });
        },

        removeCouponCode: function () {
            $('body').on('click', '.removeCouponCode', function () {
                if (!ShopdataUI.isCartReadOnly) {
                    var coupon = $(this).data('coupon');
                    shopCartUI.couponCodeHandler('removeCouponCode', coupon, 'delete');
                } else {
                    shopCartUI.displayMsg('Invoice can not be maintained.');
                }
            });
        },

        toggleCouponsView: function () {
            $('body').on('click', '.couponBtn .btn-danger', function () {
                var elem = $(this);
                $(elem).toggleClass('clicked');
                $('#appliedCoupons').stop().slideToggle();
                if ($(elem).hasClass('clicked')) {
                    $(elem).html('Hide Coupon Details');
                } else {
                    $(elem).html('Show Coupon Details');
                }
                $('#removeCouponError').remove();
            });
        },

        submitCouponCode: function () {
            $('#couponCodeForm').submit();
        },

        removeScheduledDate: function () {

            $('body').delegate('#removeScheduledDate', 'click', function () {
                if (ShopdataUI.checkForCustomerRecordLock() == false) {
                    $.ajax({
                        url: shopCartUI.baseURL + "index.php/main/removeScheduledDate",
                        dataType: 'json',
                        type: 'post',
                        data: {GREETING_ID: ShopdataUI.data.SDGREETID},
                        success: function (data) {
                            if (data.success) {
                                shopCartUI.updateAppSections('shoppingCartSection')
                            } else {
                                shopCartUI.handleFailedAjaxCall(data);
                            }
                        },
                        error: function () {
                            shopCartUI.displayMsg('There was an error handling the request, please refresh the screen and try again', 'Error');
                        }
                    });
                }
            });
        },

        logOut: function (isRedirect, action) {
            pnUnsubscribe(); // Unsubscribe the service worker for push notifications
            document.cookie = "showedProfileSettings=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/logout',
                type: 'post',
                dataType: 'json',
                data: {'timed_out': action},
                success: function () {
                    location.reload();
                }, error: function () {
                    location.reload();
                }
            });
        },

        textOptInHandler: function () {
            $('#SDCUSPHON1, #SDCUSPHON2, #SCSHPPHON1, #SCSHPPHON2').on('focusout', function () {
                shopCartUI.textOptInMessenger($(this), 'phone');
            });
        },

        textOptInMessenger: function (elem, inputType) {
            var shopdataPhoneNumber = 0;
            var shopdataType = '';
            var phoneNumberEntered = 0;
            var phoneNumberType = '';

            if (inputType == 'phone') {
                var inputId = elem.attr('id');
                var phoneTypeId = $('#' + inputId).closest('.row').next().find('input').attr('id');

                shopdataPhoneNumber = ShopdataUI.data[inputId];
                phoneNumberEntered = $('#' + inputId).val();
                if (typeof phoneNumberEntered != 'undefined' && phoneNumberEntered != '') {
                    phoneNumberEntered = phoneNumberEntered.replace(/\D/g, '');
                }
                shopdataType = ShopdataUI.data[phoneTypeId];
                phoneNumberType = $('#' + phoneTypeId).val();
            } else {
                var phoneNumberId = $(elem).closest('.phoneTypes').prev().find('input').attr('id');
                var phoneTypeId = $(elem).closest('.col-md-9').find('input').attr('id');

                phoneNumberEntered = $(elem).closest('.phoneTypes').prev().find('input').val();
                if (typeof phoneNumberEntered != 'undefined' && phoneNumberEntered != '') {
                    phoneNumberEntered = phoneNumberEntered.replace(/\D/g, '');
                }
                shopdataPhoneNumber = ShopdataUI.data[phoneNumberId];

                phoneNumberType = $('#' + phoneTypeId).val();
                shopdataType = ShopdataUI.data[phoneTypeId];
            }

            if (phoneNumberType == 'C'
                && (shopdataPhoneNumber != phoneNumberEntered || shopdataType != phoneNumberType)
                && !$('#' + phoneTypeId).hasClass('optedIn')
                && phoneNumberEntered > 0) {
                shopCartUI.promptHFCForOptInMessage(phoneNumberEntered, phoneTypeId);
            }
        },

        promptHFCForOptInMessage: function (phone, phoneTypeId) {
            // $.ajax({
            //     url: shopCartUI.baseURL+'index.php/main/checkPhoneNumberForOptinStatus/',
            //     type: 'POST',
            //     dataType: 'json',
            //     data: {phone: phone},
            //     success: function(data) {
            //         var title = 'Receive Text Messages?';
            //         switch(data.status) {
            //             case 0:
            //                 var buttons = [{id:'', name:'Opt-In', class:'btn btn-default customerOptInPhoneNumber', data:'data-phone="'+phone+'"'},
            //                     {id:'customerOptOutPhone', name:'Cancel', class:'btn btn-danger', data:'data-phone="'+phone+'" data-phonetypeid="'+phoneTypeId+'"'}];
            //                 var hideCloseButton = true;
            //                 break;
            //             case 1:
            //                 var buttons = [];
            //                 var hideCloseButton = false;
            //                 break;
            //             case 2:
            //                 var buttons = [{id:'', name:'Opt-In', class:'btn btn-default customerOptInPhoneNumber', data:'data-phone="'+phone+'"'},
            //                     {id:'customerOptOutPhone', name:'Cancel', class:'btn btn-danger', data:'data-phone="'+phone+'" data-phonetypeid="'+phoneTypeId+'"'}];
            //                 var hideCloseButton = true;
            //                 break;
            //             case 3:
            //                 var buttons = [{id:'', name:'Opt-In', class:'btn btn-default customerOptInPhoneNumber', data:'data-phone="'+phone+'"'}];
            //                 var hideCloseButton = false;
            //                 break;
            //             default:
            //                 var buttons = [{id:'', name:'Opt-In', class:'btn btn-default customerOptInPhoneNumber', data:'data-phone="'+phone+'"'},
            //                     {id:'customerOptOutPhone', name:'Cancel', class:'btn btn-danger', data:'data-phone="'+phone+'" data-phonetypeid="'+phoneTypeId+'"'}];
            //                 var hideCloseButton = false;
            //                 break;
            //         }
            //
            //         shopCartUI.openModal('modal-md', title, data.msg, 'customerOptinModal', buttons, hideCloseButton);
            //     }
            // })
        },

        sendCustomerOptinMessage: function () {
            $('body').on('click', '.customerOptInPhoneNumber', function () {
                var elem = $(this);
                var phone = $(this).attr('data-phone');
                $.ajax({
                    url: shopCartUI.baseURL + 'index.php/main/sendOptinTextMessage/',
                    type: 'POST',
                    dataType: 'json',
                    data: {phone: phone},
                    success: function (data) {
                        if (data.success) {
                            elem.closest('.modal-content').find('.modal-body').append('<div id="feedback" class="alert alert-success"><strong><i class="fa fa-check-circle"></i> Success:</strong> ' + data.msg + '</div>');
                            $('#customerOptOutPhone').addClass('hide');
                            $('#closeModalWindow').removeClass('hide');
                            setTimeout(function () {
                                $('#customerOptinModal').modal('hide');
                            }, 3000);
                        } else {
                            elem.closest('.modal-content').find('.modal-body').append('<div id="feedback" class="alert alert-danger"><strong><i class="fa fa-exclamation-triangle"></i> Error:</strong> ' + data.msg + '</div>');
                        }
                    },
                    error: function () {
                        elem.closest('.modal-content').find('.modal-body').append('<div id="feedback" class="alert alert-danger"><strong><i class="fa fa-exclamation-triangle"></i> Error:</strong> Text message failed to send, please try again.</div>')
                    },
                    beforeSend: function () {
                        $('#feedback').remove();
                    }
                });

            });
        },

        customerOptOutTextMessage: function () {
            $('body').on('click', '#customerOptOutPhone', function () {
                var phone = $(this).attr('data-phone');
                var phones = ['SDCUSPHON1', 'SDCUSPHON2', 'SCSHPPHON1', 'SCSHPPHON2'];
                for (var i in phones) {
                    var inputPhone = $('#' + phones[i]).val();
                    if (inputPhone != '') {
                        inputPhone = inputPhone.replace(/\D/g, '');
                        if (inputPhone == phone) {
                            $('#' + phones[i]).closest('.row').next().find('input').val('O');
                            $('#' + phones[i]).closest('.row').next().find('.buttonActive').removeClass('buttonActive');
                            $('#' + phones[i]).closest('.row').next().find('[data-value="O"]').addClass('buttonActive');
                        }
                    }
                }

                $('#customerOptinModal').modal('hide');
            });
        },

        loadViewedItems: function () {
            $('body').on('click', '#prevSkus', function () {
                $.ajax({
                    cache: true,
                    url: shopCartUI.baseURL + 'index.php/main/getViewedSkus',
                    dataType: 'html',
                    success: function (data) {
                        var title = '<i class="fa fa-eye"></i> Viewed Items';
                        if (data == '') {
                            data = '<div class="alert alert-warning"><i class="fa fa-exclamation-triangle"></i> No Viewed Items Found</div>';
                        }
                        shopCartUI.openModal('modal-lg', title, data, 'viewedItemsModal');
                    },
                    error: function () {
                        shopCartUI.displayMsg('There was an error pulling the customers viewed items. Try again, if the problem persists contact support.');
                    }
                });
            });
        },

        getComponentAvailability: function () {
            var elem = $(this);
            var row = $(elem).data('row');
            if ($(elem).next().html() == '') {
                $.post(shopCartUI.baseURL + 'index.php/main/getComponentAvail', {"row": row},
                    function (data) {
                        $(elem).next().html(data);
                    }).fail(function (data) {
                    shopCartUI.handleCartError(data);
                });
            }
        },

        enableComponentAvailability: function () {
            $('.accordion').accordion({
                heightStyle: "content"
            });
        },

        managerViewHFCEmails: function (event) {
            $.post(shopCartUI.baseURL + 'index.php/main/managerViewHFCEmails', {"viewHFCEmails": ($('#viewHFCEmails')[0].checked ? 'Y' : 'N')},
                function (data) {
                    shopCartUI.checkSessionTimeout(data);
                }).fail(function (data) {
                shopCartUI.handleCartError(data);
            });
        },

        /*
    EMAIL TEMPLATE FUNCTIONALITY
     */

        showCustomEmailPane: function () {
            shopCartUI.Loading_On();
            // If the customer has to be loaded, make the ajax call wait for the customer to be
            // loaded before sends this one.
            if ($(this).hasClass('pullingEmails')) {
                return false;
            }
            $(this).addClass('pullingEmails');
            $("#mainWindow").addClass("email-clicked");
            var wait = 800;
            if ($(this).closest('#currentCustomerBox').length > 0) {
                wait = 0;
            }
            setTimeout(function () {
                var customer = $('#currentCustomerBox').data('customer');
                $('#customer-email-window').remove();
                $.ajax({
                    type: "POST",
                    data: {'GREETING_ID': customer.SDGREETID},
                    url: shopCartUI.baseURL + 'index.php/main/customer_email_template',
                    dataType: 'json',
                    success: function (data) {
                        if (data.success) {
                            if ($('#hfclists').length == 0) {
                                var buttons = [
                                    {
                                        id: 'viewPreview',
                                        name: 'Preview',
                                        class: 'btn btn-default',
                                        data: '',
                                    },
                                    {
                                        id: 'sendCustomerEmail',
                                        name: 'Send',
                                        class: 'btn btn-default',
                                        data: '',
                                    },
                                ];
                                shopCartUI.openModal('modal-lg', 'Customer Email', data.data.view, 'customer-email-window', buttons);

                            } else {
                                var buttons = [];
                                shopCartUI.openModal('modal-lg', 'Customer Email', data.data.view, 'customer-email-window', buttons);
                            }

                            $("#sentEmailAccordion").accordion({
                                collapsible: true,
                                heightStyle: "content",
                                autoHeight: true,
                                active: false,
                            }).accordion("refresh");

                            $("#customer-email-template :input").change(function () {
                                $(this).addClass('formChanged');
                            });

                            htmlInputEditor.init({
                                maxLength: [3000, 2000],
                                inputClasses: 'form-control',
                                showCounterError: true, // TURNS ON THE WARNINGS WHEN A USER GETS CLOSE AND HITS THE MAX LENGTH
                                minHeight: [200, 100],
                                inputName: ['body', 'signature'],
                                inputId: ['email-body-editor', 'email-signature-editor'],
                                textareaId: ['emailBody', 'emailSignature'],
                                addURLButton: true,
                            });
                        } else {
                            shopCartUI.handleFailedAjaxCall(data);
                        }
                    },
                    error: function () {
                        shopCartUI.displayMsg('There was an error loading the screen, please refresh the page and try again.', 'Error');
                    }
                });
            }, wait);
            $('.customEmail').removeClass('pullingEmails');
        },

        insertGoogleReviewLink: function () {
            $('body').on('click', '.googleReviewLink', function (event) {
                event.preventDefault();

                var currentEmail = $(this).closest('.htmlEditorInput').find('.htmlInputTextField').html();
                var googleUrl = $(this).attr('data-url');
                var googleTitle = $(this).attr('data-title');

                var googleUrlFormatted = '<a href="' + googleUrl + '" target="_blank">' + googleTitle + '</a>';

                if (currentEmail != '') {
                    var emailText = currentEmail + '<br>' + googleUrlFormatted;
                } else {
                    var emailText = googleUrlFormatted;
                }

                if (currentEmail.indexOf(googleTitle) === -1) {
                    $(this).closest('.htmlEditorInput').find('.htmlInputTextField').html(emailText);
                    $(this).closest('.htmlEditorInput').find('.htmlInputTextField').trigger('click');
                }
            });
        },

        setEmailTemplateBySentEmail: function () {
            $('body').delegate('#sent-emails li', 'click', function () {
                $('#template-selection').val($(this).data('name'));
                $('#email-subject').val($(this).data('subject'));
            });
        },

        sendCustomEmail: function () {
            $('body').on('click', '#sendCustomerEmail', function () {
                $('#sendingEmailNotifier').remove();
                $('.email-errors').remove();
                var bodyText = $('#emailBody').val();

                if (bodyText.indexOf('<var') > -1) {
                    $('#customer-email-window .modal-body').append('<div class="email-errors" style="color: #ff0000;font-size: .7em;"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>  You must first replace all the blue text before sending</div>');
                    shopCartUI.removeSendingEmailNotification();
                    return false;
                }
                $('.htmlInputTextField').each(function () {
                    $(this).trigger('focusout')
                });
                var data = $('#customer-email-template').serialize() + '&GREETING_ID=' + ShopdataUI.data.SDGREETID;
                $.ajax({
                    type: "POST",
                    data: data,
                    url: shopCartUI.baseURL + 'index.php/main/Customer_Email_Send',
                    dataType: 'json',
                    success: function (data) {
                        if (data.success) {
                            shopCartUI.removeSendingEmailNotification();

                            $('#customer-email-window .modal-body').html('Email Sent Successfully');
                            $('#sendingEmailNotifier').remove();
                            $('#viewPreview').addClass('hide');
                            $('#sendCustomerEmail').addClass('hide');
                            shopCartUI.removeSendingEmailNotification();
                            shopCartUI.updateAppSections();

                        } else {
                            if ($.isArray(data.data)) {
                                var errors = data.data;
                                var error = '';
                                for (var i = 0; i < errors.length; i++) {
                                    error += '<div class="error-line-item"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> ' + errors[i] + '</div>';
                                }
                                $('#customer-email-window .modal-body').append('<div class="email-errors" style="color: #ff0000; font-weight: bold;">' + error + '</div>');
                                shopCartUI.removeSendingEmailNotification();
                            } else {
                                shopCartUI.handleFailedAjaxCall(data);
                            }
                        }
                    },
                    error: function () {
                        alert('Error sending email');
                        shopCartUI.removeSendingEmailNotification();
                    },
                    beforeSend: function () {
                        shopCartUI.addSendingEmailNotification();
                    },
                });
            });
        },

        showCustomEmailPreview: function () {
            $('body').on('click', '#viewPreview', function () {

                var body = $('#emailBody').val();
                var signature = $('#emailSignature').val();
                $.ajax({
                    type: "POST",
                    global: true,
                    cache: true,
                    data: {'body': body, 'signature': signature, GREETING_ID: ShopdataUI.data.SDGREETID},
                    url: shopCartUI.baseURL + 'index.php/main/Customer_Email_Preview',
                    dataType: 'json',
                    success: function (data) {
                        if (data.success) {
                            var buttons = [
                                {
                                    id: 'closeCustomerEmailPreviewWindow',
                                    name: 'Close',
                                    class: 'btn btn-default',
                                    data: '',
                                },
                            ];
                            shopCartUI.openModal('modal-lg', 'Customer Email', data.data.view, 'customerEmailPreviewWindow', buttons, true);
                        } else {
                            shopCartUI.handleFailedAjaxCall(data);
                        }
                    },
                    complete: function () {
                        shopCartUI.Loading_Off();
                    }
                });
            });
        },

        removeReplacementTextFromEditor: function () {
            $('body').delegate('.trix-content var', 'click', function () {
                var clickedText = $(this).text();


                var cursorStartPosition = 0;
                var cursorEndPosition = 0;
                var body = $('#email-body-editor').html();
                if (body) {
                    clickedText = clickedText.replace('<var>', '');
                    clickedText = clickedText.replace('</var>', '');

                    var element = document.querySelector('#email-body-editor');
                    var docString = element.editor.getDocument().toString();

                    cursorStartPosition = docString.indexOf(clickedText) - 1;
                    cursorEndPosition = cursorStartPosition + (clickedText.length) + 2;

                    element.editor.setSelectedRange([cursorStartPosition, cursorEndPosition]);
                }
            });
        },

        addSendingEmailNotification: function () {
            $('#customer-email-window').append('<div id="sendingEmailNotifier" style="font-size: .7em;"><i class="fa fa-spinner fa-spin"></i> Sending email, please wait</div>');
        },

        removeSendingEmailNotification: function () {
            $('#sendingEmailNotifier').html('');
            $('#sendingEmailNotifier').remove();
        },

        couponCodeHandler: function (method, coupon, action) {
            $('#couponFeedback').remove();
            $('#removeCouponError').remove();
            if (coupon) {
                $.ajax({
                    type: "POST",
                    data: {'coupon': coupon, 'action': action, 'GREETING_ID': ShopdataUI.data.SDGREETID},
                    url: shopCartUI.baseURL + 'index.php/main/couponCodeCheck',
                    dataType: 'json',
                    success: function (data) {
                        if (data.success) {
                            if (method == 'checkCouponCode') {
                                shopCartUI.showCouponFeedback(data.msg, true);
                            } else {
                                $('[data-coupon="' + coupon + '"]').closest('.couponSelected').remove();
                            }
                            shopCartUI.updateAppSections('shoppingCartSection');

                        } else {
                            shopCartUI.handleFailedAjaxCall(data);

                            // if(method == 'checkCouponCode') {
                            //     shopCartUI.showCouponFeedback(data.msg, false);
                            // } else {
                            //     $('[data-coupon="'+coupon+'"]').closest('.couponSelected').append('<div id="removeCouponError" class="text-red"><i class="fa fa-exclamation-triangle"></i> '+data.msg+'</div>');
                            // }

                        }
                    },
                    error: function () {
                        if (method == 'checkCouponCode') {
                            shopCartUI.showCouponFeedback('Something went wrong, try again!', false);
                        } else {
                            $('[data-coupon="' + coupon + '"]').closest('.couponSelected').append('<div id="removeCouponError" class="text-red"><i class="fa fa-exclamation-triangle"></i> Something went wrong, try again!</div>');
                        }
                    },
                    beforeSend: function () {
                        if (method == 'checkCouponCode') {
                            $('#searchCouponCode').html('<i class="fa fa-gear fa-spin fa-fw"></i>').prop('disabled', true);
                        } else {
                            shopCartUI.showCouponRemoval(coupon, true);
                        }
                        shopCartUI.showCouponFeedback('', true);
                    },
                    complete: function () {
                        $('#searchCouponCode').html('<i class="fa fa-plus"></i>').prop('disabled', false);
                        shopCartUI.showCouponRemoval(coupon, false);
                    }
                });
            } else {
                var error = 'Invalid Coupon Code';
                shopCartUI.showCouponFeedback(error, false);
            }
        },

        showCouponRemoval: function (coupon, removing) {
            if (removing) {
                $('[data-coupon="' + coupon + '"]').html('<i class="fa fa-gear fa-spin fa-fw"></i> Removing...');
            } else {
                $('[data-coupon="' + coupon + '"]').html('<i class="fa fa-times-circle fa-fw"></i> Remove Coupon');
            }
        },

        showCouponFeedback: function (error, isValid) {
            if (error != '') {
                if (isValid) {
                    var errorStr = '<div id="couponFeedback" class="green-text"><i class="fa fa-check-circle"></i> ' + error + '</div>';
                } else {
                    var errorStr = '<div id="couponFeedback" class="red-text"><i id="removeCouponError" class="fa fa-times-circle"></i> ' + error + '</div>';
                }
                $('#couponCodeForm').after(errorStr);
            } else {
                $('#couponFeedback').remove();
            }
        },

        truncate: function (n) {
            return Math[n > 0 ? "floor" : "ceil"](n);
        },

        initCarousel: function () {
            $('#productInfoImages').carousel();
            $('body').on('click', '#productInfoImages .carousel-indicators li', function (event) {
                event.preventDefault();
                $('#productInfoImages .carousel-indicators li').removeClass('active');
                $(this).addClass('active');
            });
            $('body').on('click', '.carousel-control', function (event) {
                event.preventDefault();
            });
            ShopdataUI.changeTabPanel();
        },

        destroyCarousel: function () {
            $('body').off('click', '#productInfoImages .carousel-indicators li');
        },

        showProductInformation: function () {
            $('body').on('click', '.showProductInfoPage', function () {
                var row = JSON.parse($(this).closest('.itemData').attr('data-item'));
                if (row == null) {
                    shopCartUI.displayMsg('There was an error pulling up the product info page; please try again. If the problem persists, please contact support and let them know what SKU you were trying to view product information for, and that the request could not be sent.', 'Oops, we hit an error!');
                }

                row.type = 'store';
                row.pku = $('#ADPARTSKU').val();
                $.ajax({
                    url: shopCartUI.baseURL + 'index.php/main/SKUAVLDTL/',
                    data: {"row": row},
                    dataType: 'json',
                    type: 'post',
                    success: function (data) {
                        if (data.success) {
                            $('#productInfoArea').removeClass('hide').html(data.data.view);
                            shopCartUI.hideMainWindow();
                            shopCartUI.initCarousel();
                            $('body').css('overflow-y', 'scroll');
                        } else {
                            shopCartUI.displayMsg(data.msg, 'Oops, we hit an error!');
                        }
                    },
                    error: function () {
                        shopCartUI.displayMsg('There was an error pulling up the product info page; please try again. If the problem persists, please contact support and let them know what SKU you were trying to view product information for, and that the ajax request returned an error.', 'Oops, we hit an error!');
                    }
                });

            });
        },

        closeProductInfoPage: function () {
            $('body').on('click', '#closeProductInfoWindow', function () {
                $('#productInfoArea').addClass('hide').html('');
                shopCartUI.showMainWindow();
                shopCartUI.destroyCarousel();
            });
        },

        /*
    THE BEDDING WARRANTY SKUS WORK DIFFERENTLY COMPARED TO THE OTHER WARRANTIES. THE BEDDING WARRANTIES FUNCTION AS A
    A NORMAL SKU IN THE CART SO THIS FUNCTION HAS TO ACCOUNT FOR THE ONES THAT ARE WARRANTY SKU'S AND ADDED ON SKUS.
     */
        increaseCartItemQuantity: function () {
            $('body').on('click', '.inCart, button.decrease, button.increase', function () {
                var row = $(this).closest('.shoppingCartItem').attr('data-item');
                var type = 'update';
                var qty = 0;
                if (row) {
                    row = JSON.parse(row);
                }
                if ($(this).hasClass('inCart')) {
                    if ($(this).hasClass('beddingWarrantyItem')) {
                        //BEDDING WARRANTY SKU LOGIC FOR REMOVAL
                        var itemQtyElement = $('.shoppingCartItem').find('.eerospinner');
                        var qty = parseInt(itemQtyElement.find('.swipespinner.value').val());
                        var qtyOriginal = parseInt(itemQtyElement.parent().attr('data-originalqty'));
                        var qtyCurrent = parseInt(itemQtyElement.parent().attr('data-current'));
                        var hiddenSkus = parseInt(itemQtyElement.parent().attr('data-hidden'));

                        if (qtyCurrent != qtyOriginal) {
                            qty = qtyOriginal - qty
                        }
                    } else {
                        type = 'remove';
                    }
                } else {
                    qty = parseInt($(this).parent('.eerospinner').find('input').val());
                    var qtyOriginal = parseInt($(this).parent('.eerospinner').parent().attr('data-originalqty'));
                    var qtyCurrent = parseInt($(this).parent('.eerospinner').parent().attr('data-current'));
                    var hiddenSkus = parseInt($(this).parent('.eerospinner').parent().attr('data-hidden'));

                    // CHECKS TO SEE IF THE SKU BEING CHANGED HAS ADDITIONAL SKUS SINCE THE BEDDING SKUS DON'T SHOW UP IN THE
                    // CART BUT ACT JUST LIKE ANY OHTER ITEM.
                    if (qtyCurrent != qtyOriginal) {
                        qty = qty + hiddenSkus;
                    }
                }
                shopCartUI.changeItemQuantity(row, type, qty);
            });
        },

        viewPreviousSearchResults: function () {
            $('body').on('click', '#prevSearch', function () {
                if ($('#searchResults #searchBody .searchResultLink ').length > 0) {
                    Search.init();
                    $('#searchResultsArea').removeClass('hide');
                    shopCartUI.hideMainWindow();
                    shopCartUI.currentSearch = shopCartUI.lastSearch;
                } else {
                    shopCartUI.displayMsg('No Previous Search Found', 'Error:');
                }
            });
        },

        showImgInModal: function () {
            $('body').on('click', '.showImgInModal', function () {
                var img = $(this).attr('data-path');
                var name = $(this).attr('data-name');

                if (img) {
                    if (img.indexOf('?') !== -1) {
                        var imgArray = img.split('?');
                        img = imgArray[0];
                    }
                    img = '<img src="' + img + '" class="img-center img-responsive" style="max-height:500px">';
                    shopCartUI.openModal('modal-lg', name, img, 'imgInModal');
                }
            });
        },

        waitAndReloadCustomers: function () {
            setTimeout(function () {
                shopCartUI.reloadCustomers()
            }, 500);
        },

        reloadCustomers: function () {
            var section = $('.customerListSection.active').data('section');
            //shopCartUI.LoadCustomerList(section);
            //var ViewsToUpdate=[{"Customers":true,"Avail":false,"Cart":false}];
            //shopCartUI.reloadCustomersAvailAndCart(ViewsToUpdate);
        },

        showLoading: function (ViewsToUpdate) {
            if (!shopCartUI.validCustomersAvailAndCart(ViewsToUpdate)) {
                shopCartUI.Loading_Off();
            }
            // if(ViewsToUpdate[0].Customers){
            //     shopCartUI.Loading_On('#inboxcontainer','#inboxmenu');
            // }
            if (ViewsToUpdate[0].Avail) {
                shopCartUI.Loading_On('#mainHolder', '#main');
            }
            if (ViewsToUpdate[0].Cart) {
                shopCartUI.Loading_On('#divhfccart div.scrollcontent', 'hfccartDataText');
            }
        },

        reloadCustomersAvailAndCart: function () {

            shopCartUI.updateAppSections();

            return false;
            if (arguments.length == 0) {
                ViewsToUpdate = [{"Customers": true, "Avail": true, "Cart": true}];
            } else {
                ViewsToUpdate = arguments[0];
            }

            var synccart = false;
            if (arguments.length == 2) {
                synccart = arguments[1];
            }

            shopCartUI.showLoading(ViewsToUpdate);

            if (!shopCartUI.validCustomersAvailAndCart(ViewsToUpdate)) {

                return;
            }

            $.post(shopCartUI.baseURL + 'index.php/main/getCustomersAvailAndCart', {
                "ViewsToUpdate": ViewsToUpdate,
                "SyncCart": synccart
            }, function (data) {
                shopCartUI.updateCustomersAvailAndCart(data, ViewsToUpdate);
            }, "html").fail(function (data) {
                shopCartUI.handleCartError(data);
            });
        },

        validCustomersAvailAndCart: function (ViewsToUpdate) {
            if ((!ViewsToUpdate[0].Customers && !ViewsToUpdate[0].Avail && ViewsToUpdate[0].Cart)
                || (!ViewsToUpdate[0].Customers && ViewsToUpdate[0].Avail && ViewsToUpdate[0].Cart)
                || (ViewsToUpdate[0].Customers && !ViewsToUpdate[0].Avail && !ViewsToUpdate[0].Cart)
                || (ViewsToUpdate[0].Customers && ViewsToUpdate[0].Avail && ViewsToUpdate[0].Cart)
                || (!ViewsToUpdate[0].Customers && ViewsToUpdate[0].Avail && !ViewsToUpdate[0].Cart)
            ) {
                return true;
            }
            //TODO log error invalid view to update
            return false;
        },

        updateAppSections: function (activeMobileView, openEdit, readShopdata) {
            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/getCustomersAvailAndCart',
                dataType: 'html',
                type: 'post',
                data: {read: 'N'},
                success: function (data) {
                    Search.toggleSearchWindow(true);
                    var customer = $(data).find('#customerInfoSection').html();
                    var product = $(data).find('#productInfoSection').html();
                    var cart = $(data).find('#shoppingCartSection').html();

                    /* Sometimes, for some reason, setting "cart" above doesn't work,
                     * and the visual cart is not updated to reflect actual contents.
                     * This workaround seems to correct the issue, though I'm
                     * unsure of the actual cause. My guess is that "data" gets too 
                     * long, and the engine can't search past a certain point. 
                     * So I've divided "data" into parts, with each part starting 
                     * with a quotation mark and the id immediately after the string
                     * "<div id=". This way, if shoppingCartSection exists, one of the 
                     * items in the divs array will start with '"shoppingCartSection'.
                     * We add a parent div to that, and put the "<div id=" part back, 
                     * and search the resulting (smaller) parent div for shoppingCartSection.
                     * So far, it returns every time, and the problem is fixed. */
                    if (undefined === cart) {
                        var divs = data.split('<div id=');
                        for (index = 0; index < divs.length; index++) {
                            if (1 == divs[index].indexOf('shoppingCartSection')) {
                                var section = '<div><div id=' + divs[index];
                                cart = $(section).find('#shoppingCartSection').html();
                            }
                        }
                    }

                    $('#customerInfoSection').html(customer);
                    $('#productInfoSection').html(product);
                    $('#shoppingCartSection').html(cart);

                    var zip = ShopdataUI.data.SCSHPZIP != '' ? ShopdataUI.data.SCSHPZIP : ShopdataUI.data.SDCUSZIP;

                    $('#TXTDELZIP').val(zip);
                    if (typeof ShopdataUI.data.SDCUSADDR1 != 'undefined' && ShopdataUI.data.SDCUSADDR1 != '') {
                        $('#TXTDELZIP').attr('disabled', true);
                    } else {
                        $('#TXTDELZIP').attr('disabled', false);
                    }

                    if (shopCartUI.checkScreenWidth() < 997) {
                        if (activeMobileView) {
                            $('*[data-section="' + activeMobileView + '"]').trigger('click');
                        }
                        $('html, body').animate({
                            scrollTop: $("#mobileShowCustomerButton").offset().top - 15
                        }, 300);
                    }
                    shopCartUI.enableComponentAvailability();
                    shopCartUI.initControls();
                    if (openEdit) {
                        ShopdataUI.openCustomerInfoPage(false);
                    }
                    customer = '';
                    if ($('#currentCustomerBox').attr('data-customer') != '') {
                        customer = JSON.parse($('#currentCustomerBox').attr('data-customer'));
                    }
                    if (customer) {
                        ShopdataUI.data = customer;
                    }

                    if (customer.CUSTPCNT == '' && customer.SCDELDATE > 0 && customer.SCSELLINV > 0 && ShopdataUI.data.SDCUSTNBR > 0) {
                        var changed = false;
                        if ($('#cmdEngage').prop('data-changed')) {
                            changed = true;
                            $('#cmdEngage').removeAttr('data-changed')
                        }
                        shopCartUI.openDeliveryInstructions(true, changed);
                    }

                    if (ShopdataUI.data.SCCARTID > 0) {
                        $('#lookupCustomer').addClass('hide');
                    }
                    if (ShopdataUI.data.SDPUSTORE > 0) {
                        $('#TXTPUSTORE').val(ShopdataUI.data.SDPUSTORE);
                    }
                    shopCartUI.checkIfCartNeedsScheduled();
                    shopCartUI.showSkippedSkus();

                },
                error: function () {
                    shopCartUI.openModal('model-md', 'Error', 'There was an error processing the views request, try refreshing the page');
                }
            });
        },

        checkIfCartNeedsScheduled: function () {
            setTimeout(function () { //Set timer to see if there were other modals opening
                if ($('.modal-header').length == 0 && $('.SHOW_NOT_SCHEDULED').length > 0) {
                    var needsScheduled = $('.SHOW_NOT_SCHEDULED').attr('data-scheduled');
                    shopCartUI.displayMsg(needsScheduled + " Item(s) Not Scheduled");
                    $('.SHOW_NOT_SCHEDULED').remove();
                }
            }, 2000);
        },

        updateCustomersAvailAndCart: function (data, ViewsToUpdate, mobileView) {
            //shopCartUI.updateAppSections();

            return false;
        },

        openBtnGroup: function () {
            $('body').on(shopCartUI.clickEventToUse, '.multiselect.dropdown-toggle', function () {
                if ($(this).parent().hasClass('open')) {
                    $(this).parent().removeClass('open');
                } else {
                    $(this).parent().addClass('open');
                }
            });
        },

        Loading_On: function (Parent, Child) {
            if (arguments.length == 2) {
                $(Parent).addClass('ajax-loader loadingDiv');
                $(Child).css('visibility', 'hidden');
            } else {
                $('#loadNotify').show();
            }
        },

        Loading_Off: function (Parent, Child) {
            if (arguments.length == 2) {
                $(Parent).removeClass('ajax-loader loadingDiv');
                $(Child).css('visibility', 'visible');
            } else {
                $('#loadNotify').hide();
            }
        },

        /*
     To make a button to add an item to the cart just create a button with a class of addToCart and a parent element
     with a class of itemData with the json data attached to it in a data attribute named data-item.
     */
        addToCart: function (elem) {
            var row = $(elem).closest('.itemData').attr('data-item');
            if (row == null) {
                return;
            }

            row = JSON.parse(row);

            if (!shopCartUI.validSkuRow(row)) {
                shopCartUI.displayMsg('The data for this item seems to be incomplete. Please refresh your page and try again. If the problem persists please contact support and let them know where you are clicking and what sku you are trying to add.', 'Oops, we ran into a problem');
                return;
            }

            if(elem.parent().find('.fitAlert').length > 0 && !elem.hasClass('warned')) {
                elem.addClass('warned');
                shopCartUI.showSkuFitWarning(true, row.AHRELSKU);
                return false;
            }

            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/addToCart',
                data: {"row": row, GREETING_ID: ShopdataUI.data.SDGREETID, fit_warning: elem.hasClass('warned')},
                dataType: 'json',
                type: 'post',
                success: function (data) {
                    if (data.success) {
                        shopCartUI.updateAppSections('shoppingCartSection');

                        $('#productInfoArea').addClass('hide').html('');
                        shopCartUI.showMainWindow();
                        $('#prevSkus').removeClass('hide');
                    } else {
                        shopCartUI.handleFailedAjaxCall(data);
                    }
                },
                error: function (data) {
                    shopCartUI.handleCartError(data);
                }
            });
        },

        fitAgreementWindow: function() {
          $('body').on('click', '#fitAgreement', function() {
              $('#skuFitWarning').modal('toggle');
              var sku = $(this).attr('data-sku');
              document.cookie = 'VIEWED_FIT_WARNING=TRUE;path=/';
              if(typeof sku != 'undefined' && sku > 0) {
                  $('.sku' + sku).trigger('click');
              }
          });
        },

        showSkuFitWarning: function(showClose, sku) {
            var buttons = [
                {
                    id: 'fitAgreement',
                    name: 'Customer Acknowledges',
                    class: 'btn btn-danger',
                    data: 'data-sku="' + sku + '"'
                }
            ];

            if(showClose) {
                buttons.push({
                    id: 'cancelAddItem',
                    name: 'Cancel',
                    class: 'btn btn-default',
                    data: 'data-sku="' + sku + '"'
                });
            }

            shopCartUI.openModal('modal-md', 'MAY NOT FIT IN CUSTOMER’S HOME', 'One of the items you’ve added has had issues fitting into homes in the customers zip code. Please write down the dimensions of this SKU and have the customer check to see if it’ll fit through the doorways throughout their home.', 'skuFitWarning', buttons, true);
        },

        listenForFitWarningCancel: function() {
          $('body').on('click', '#cancelAddItem', function() {
              var sku = $(this).attr('data-sku');
              $('.sku'+sku).removeClass('warned');
              $('#skuFitWarning').modal('toggle');
          })
        },

        checkForSkuFitWarnings: function() {
            setTimeout(function() {
                var showWarning = false;
                $('.shoppingCartItem').each(function() {
                    if($(this).find('.fitAlert').length > 0) {
                        showWarning = true;
                    }
                });

                var warned = document.cookie.match('(^|;) *VIEWED_FIT_WARNING=([^;]*)');
                if(showWarning && warned === null) {
                    shopCartUI.showSkuFitWarning(false, 0);
                }
            }, 2000);
        },

        changeFabEpp: function (row) {
            if (row == null) {
                shopCartUI.displayMsg('The data to make this change looks incomplete, try refreshing the page and trying again.', 'Oops, it looks like we ran into an error');
                return;
            }

            if (row.type == 'tw') {
                if (row['ORIGINALSKU'] != -1 && row['AHTAKEWITH'] == 'N') {
                    shopCartUI.displayMsg('The data for this request seems to be incomplete and the change failed to save. Please refresh your page and try again. If the problem persists please contact support and let them know where you are clicking and what sku you are trying to add this to.', 'Oops, we ran into a problem');
                    return;
                }
            }

            $.ajax({
                url: shopCartUI.baseURL + "index.php/main/changeFABEPP",
                dataType: 'json',
                data: {"row": row, GREETING_ID: ShopdataUI.data.SDGREETID},
                type: 'post',
                success: function (data) {
                    if (data.success) {
                        shopCartUI.updateAppSections('shoppingCartSection');
                    } else {
                        shopCartUI.handleFailedAjaxCall(data);
                    }
                },
                error: function () {
                    shopCartUI.displayMsg('Your request failed to save, try refreshing the page and trying again. If the problem persists contact support and let them know what your clicking on and what sku number you are working with.', 'Oops, we ran into a error')
                }
            });


        },

        switchPP: function () {
            if (confirm('You are about to switch furniture care plan.')){
                $.ajax({
                    url: shopCartUI.baseURL + "index.php/main/switchPP",
                    dataType: 'json',
                    data: {cartId: ShopdataUI.data.SCCARTID, GREETING_ID: ShopdataUI.data.SDGREETID},
                    type: 'post',
                    success: function (data) {
                        if (data.success) {
                            shopCartUI.updateAppSections('shoppingCartSection');
                        } else {
                            shopCartUI.handleFailedAjaxCall(data);
                        }
                    },
                    error: function () {
                        shopCartUI.displayMsg('Your request failed to save, try refreshing the page and trying again. If the problem persists contact support and let them know what your clicking on and what sku number you are working with.', 'Oops, we ran into a error')
                    }
                });
            }          
        },

        changeItemQuantity: function (row, type, qty) {
            if (row == null) {
                shopCartUI.displayMsg('The data to make this change looks incomplete, try refreshing the page and trying again.', 'Oops, it looks like we ran into an error');
            }
            row.qty = qty;
            var currQty = row['AHSLSQTY'];
            if (!(currQty == 0 && qty > 0)) {
                $.ajax({
                    url: shopCartUI.baseURL + 'index.php/main/changeItemQuantity/',
                    data: {row: row, GREETING_ID: ShopdataUI.data.SDGREETID},
                    dataType: 'json',
                    type: 'post',
                    success: function (data) {
                        if (data.success) {
                            shopCartUI.updateAppSections('shoppingCartSection');
                        } else {
                            var setQty = $('.qty' + row['AHRELSKU']).attr('data-current');
                            $('.qty' + row['AHRELSKU'] + ' .swipespinner').val(setQty);

                            shopCartUI.handleFailedAjaxCall(data);
                        }
                    },
                    error: function () {
                        shopCartUI.displayMsg('Your request failed to save, try refreshing the page and trying again. If the problem persists contact support and let them know what your clicking on and what sku number you are working with.', 'Oops, we ran into a error');
                    }
                });
            }
        },

        loadDatepicker: function (selector, availdates) {

            $(selector).datepicker('destroy');
            var numcalendars = 1;
            var dt = new Date();
            if (dt.getDate() > 15) {
                numcalendars = 2;
            }
            $.datepicker.regional['en-GB'] = {
                prevText: 'Prev',
                nextText: 'Next',
                currentText: 'Today',
                monthNames: ['January', 'February', 'March', 'April', 'May', 'June',
                    'July', 'August', 'September', 'October', 'November', 'December'],
                monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
                dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                weekHeader: 'Wk',
                dateFormat: 'mm/dd/yy',
                showButtonPanel: true,
                closeText: 'Cancel',
                firstDay: 0,
                numberOfMonths: numcalendars,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };
            $.datepicker.setDefaults($.datepicker.regional['en-GB']);
            var dates = availdates;
            var foundInventoryDates = dates.ALLAVL.length != 0 ||
                dates.ALLAVLPOS.length != 0 ||
                dates.ALLPOS.length != 0 ||
                dates.DAYCLOSED.length != 0 ||
                dates.NOTAVLPOS.length != 0 ||
                dates.SOMEAVL.length != 0 ||
                dates.SOMEPOS.length != 0 ||
                dates.SOMEAVLPOS.length;

            if (!foundInventoryDates) {
                shopCartUI.displayMsg('No available inventory within 30 days so unable to schedule');
                shopCartUI.Loading_Off();
            } else {

                $(selector).datepicker({

                    dateFormat: "mm/dd/yy",
                    beforeShow: function (input, instance) {
                        var pos = $(input).position();
                        instance.dpDiv.css({top: '-' + pos.top + 'px'});
                        setTimeout(function () {
                            shopCartUI.loadLegend(input);
                        }, 1);
                    },
                    onChangeMonthYear: function (input) {
                        setTimeout(function () {
                            shopCartUI.loadLegend(input);
                        }, 1);
                    },
                    beforeShowDay: function (date) {
                        var datetoshow = $.datepicker.formatDate('mm/dd/yy', date);
                        var HighlightBlackTextRed = (dates.DAYCLOSED.indexOf(datetoshow) != -1);
                        var HighlightBlueTextBlack = (dates.ALLAVL.indexOf(datetoshow) != -1);
                        var HighlightWhiteTextBlack = (dates.ALLPOS.indexOf(datetoshow) != -1);
                        var HighlightYellowTextBlack = (dates.ALLAVLPOS.indexOf(datetoshow) != -1);
                        var HighlightBlackTextBlue = (dates.SOMEAVL.indexOf(datetoshow) != -1);
                        var HighlightBlackTextWhite = (dates.SOMEPOS.indexOf(datetoshow) != -1);
                        var HighlightBlackTextYellow = (dates.SOMEAVLPOS.indexOf(datetoshow) != -1);
                        var HighlightGreenTextWhite = (dates.NOTAVLPOS.indexOf(datetoshow) != -1);

                        if (HighlightBlackTextRed) {
                            return [true, "HighlightBlackTextRed", "Day closed, nothing available for date"];
                        } else if (HighlightBlueTextBlack) {
                            return [true, "HighlightBlueTextBlack", "All items are available for date"];
                        } else if (HighlightWhiteTextBlack) {
                            return [true, "HighlightWhiteTextBlack", "All items are possible for date"];
                        } else if (HighlightYellowTextBlack) {
                            return [true, "HighlightYellowTextBlack", "All items are available or possible for date"];
                        } else if (HighlightBlackTextBlue) {
                            return [true, "HighlightBlackTextBlue", "Some items are available for date"];
                        } else if (HighlightBlackTextWhite) {
                            return [true, "HighlightBlackTextWhite", "Some items are possible for date"];
                        } else if (HighlightBlackTextYellow) {
                            return [true, "HighlightBlackTextYellow", "Some items are available or possible for date"];
                        } else if (HighlightGreenTextWhite) {
                            return [false, 'HighlightGreenTextWhite', 'Nothing available or possible for date'];
                        } else {
                            return [false, '', ''];
                        }

                    },

                    onSelect: function () {
                        var index = $(this).val();
                        var DTYPE = (selector == '#DDATE') ? 'D' : 'P';
                        var DDATE = $(selector).val();
                        var DSTORE = '';
                        if (dates.DAYCLOSED.indexOf(DDATE) != -1) {
                            shopCartUI.displayMsg('Day closed, nothing available for date.');
                        } else if (dates.NOTAVLPOS.indexOf(DDATE) != -1) {
                            shopCartUI.displayMsg('Nothing available or possible for date.');
                        } else {
                            $.ajax({
                                url: shopCartUI.baseURL + 'index.php/main/schedulePreferredDate',
                                data: {
                                    DTYPE: DTYPE,
                                    DDATE: DDATE,
                                    DSTORE: DSTORE,
                                    GREETING_ID: ShopdataUI.data.SDGREETID
                                },
                                dataType: 'json',
                                type: 'post',
                                success: function (data) {
                                    if (data.success) {
                                        shopCartUI.updateAppSections();
                                    } else {
                                        shopCartUI.handleFailedAjaxCall(data);
                                    }
                                },
                                error: function () {
                                    shopCartUI.handleCartError(data);
                                }
                            });
                        }
                    },

                    onClose: function (dateText) {
                        var rcode = dates.SCHEDULEREFRESH.RCODE;
                        var msg = dates.SCHEDULEREFRESH.MSG;
                        if (dateText == "" &&
                            (rcode == 'NOTSCHED' || rcode == 'RESCHED')) {
                            var ViewsToUpdate = [{"Customers": true, "Avail": true, "Cart": true}];
                            $.post(shopCartUI.baseURL + 'index.php/main/refresh', {},
                                function (data) {
                                    shopCartUI.updateCustomersAvailAndCart(data, ViewsToUpdate);
                                }
                            );
                            setTimeout(function () {
                                shopCartUI.displayMsg(msg);
                            }, 2000);
                        }
                    }
                });
            }
        },

        loadLegend: function (obj) {

            var legend = '<div id="legend" style="width: 100%; display: none;">';
            legend += '<div style="clear:both"></div>';
            legend += '<div class="legend HighlightBlackTextRed">5</div> &nbsp;- Day closed, nothing available.';
            legend += '<div style="clear:both"></div>';
            legend += '<div class="legend HighlightBlueTextBlack">5</div> &nbsp;- All are available.';
            legend += '<div style="clear:both"></div>';
            legend += '<div class="legend HighlightWhiteTextBlack">5</div> &nbsp;- All are possible.';
            legend += '<div style="clear:both"></div>';
            legend += '<div class="legend HighlightYellowTextBlack">5</div> &nbsp;- All are available or possible.';
            legend += '<div style="clear:both"></div>';
            legend += '<div class="legend HighlightBlackTextBlue">5</div> &nbsp;- Some are available.';
            legend += '<div style="clear:both"></div>';
            legend += '<div class="legend HighlightBlackTextWhite">5</div> &nbsp;- Some are possible.';
            legend += '<div style="clear:both"></div>';
            legend += '<div class="legend HighlightBlackTextYellow">5</div> &nbsp;- Some are available or possible.';
            //legend += '<div style="clear:both"></div>';
            //legend += '<div class="legend HighlightGreenTextWhite">5</div> &nbsp;- Nothing available or possible.';
            legend += '</div>';

            var buttonPane = $(obj).datepicker("widget").find(".ui-datepicker-buttonpane");

            if (typeof obj.id != "undefined") {
                shopCartUI.calHeading = (obj.id == 'PDATE' ? 'Pickup Date' : 'Delivery Date');
            }

            $("#ui-datepicker-div td.ui-datepicker-today a.ui-state-highlight").removeClass('ui-state-highlight');
            $("#ui-datepicker-div").prepend('<div class="ui-datepicker-title">' + shopCartUI.calHeading + '</div>');

            $('#ui-datepicker-div .ui-datepicker-buttonpane').after(legend);
            var btnShowLegend = $('<button class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" type="button" id="btnShowLegend">Legend</button>');
            btnShowLegend.unbind("click").bind("click", function () {
                $('#legend, #btnHideLegend').show();
                $('#btnShowLegend').hide();
            });
            btnShowLegend.appendTo(buttonPane);
            var btnHideLegend = $('<button class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" type="button" id="btnHideLegend" style="display: none;">Hide</button>');
            btnHideLegend.unbind("click").bind("click", function () {
                $('#legend, #btnHideLegend').hide();
                $('#btnShowLegend').show();
            });

            btnHideLegend.appendTo(buttonPane);

        },

        //need to remove and replace with new function
        Avail_Update: function (sku, searchType, row) {
            var searchWindows =
                [
                    'searchedResults',      // Search
                    'searchResults',        // Saved Search Results
                    'searchedSkus'          // Viewed Items
                ];
            $("body").css("overflow-y", "auto");
            if (typeof(searchType) !== 'undefined') {
                if (searchType == "AHINQID" && arguments.length == 3) {
                    // Load view
                    $.post(shopCartUI.baseURL + 'index.php/main/getSkuAvail', {"row": row},
                        function (data) {
                            // Render view
                            $('#txtSKU, #txtSKU2, #txtWord, #txtWord2').val('');
                            $("body").css("overflow", "auto"); // to make sure only one finger is needed to scroll
                            var ViewsToUpdate = [{"Customers": false, "Avail": true, "Cart": false}];
                            shopCartUI.updateCustomersAvailAndCart(data, ViewsToUpdate);
                        }
                    ).fail(function (data) {
                        shopCartUI.handleCartError(data);
                    });
                    return;
                } else {
                    // Close search window
                    View.Close(searchWindows[searchType]);
                }
            }

            // Load view
            $.post(shopCartUI.baseURL + 'index.php/main/getSkuAvail?sku=' + sku,
                function (data) {
                    // Render view
                    $('#txtSKU, #txtSKU2, #txtWord, #txtWord2').val('');
                    $("body").css("overflow", "auto"); // to make sure only one finger is needed to scroll
                    var ViewsToUpdate = [{"Customers": false, "Avail": true, "Cart": false}];
                    shopCartUI.updateCustomersAvailAndCart(data, ViewsToUpdate);
                }
            ).fail(function (data) {
                shopCartUI.handleCartError(data);
            });
        },

        Cart_Update: function () {
            // Assert cartId set
            if (ShopdataUI.data.SDCARTID !== '0') {
                // Get cart view
                $.post(shopCartUI.baseURL + 'index.php/main/hfcViewCart',
                    function (data) {
                        var ViewsToUpdate = [{"Customers": true, "Avail": true, "Cart": true}];
                        shopCartUI.updateCustomersAvailAndCart(data, ViewsToUpdate);
                    }).fail(function (data) {
                    shopCartUI.handleCartError(data);
                });

            }

        },

        blurSearchText: function () {
            $('#blurtarget').focus();
            //$('body').css({"overflow-y":"hidden"});

        },

        cloneAndAddToJSONDataRow: function (row, fields) {
            for (keys in fields) {
                if (fields[keys] != null && fields.hasOwnProperty(keys)) {
                    keys = fields[keys];
                    for (key in keys) {
                        if (keys[key] != null && keys.hasOwnProperty(key)) {
                            row[key] = keys[key];
                        }
                    }
                }
            }
            return row;
        },

        getAvailOptionSku: function () {
            var row = shopCartUI.getJSONDataRow($('.eachOptionsHolder'));
            if (shopCartUI.validSkuRow(row)) {
                return row;
            }
        },

        getJSONDataRow: function (o) {
            var row = null;
            var parentElementType = 'tbody';
            try {
                var thisRowId = $(o).attr('data-id');
                var dataTable = $(o).attr('data-table');
                if (typeof thisRowId != 'undefined'
                    && typeof dataTable != 'undefined') {
                    //found
                } else {
                    thisRowId = $(o).parents(parentElementType).attr('data-id');
                    dataTable = $(o).parents(parentElementType).attr('data-table');
                    if (typeof thisRowId != 'undefined'
                        && typeof dataTable != 'undefined') {
                        //found
                    } else {
                        parentElementType = 'tr';
                        thisRowId = $(o).parents(parentElementType).attr('data-id');
                        dataTable = $(o).parents(parentElementType).attr('data-table');
                    }
                }

                if (typeof thisRowId != 'undefined') {
                    //found
                } else {
                    return;
                }

                if (dataTable == 'searchtable') {
                    $.each(searchtable, function (key, value) {
                        if (value.ROWID == thisRowId) row = value;
                    });
                } else {
                    var sEval = 'row = ' + dataTable + '[thisRowId];';
                    eval(sEval);
                    if (typeof row != 'undefined') {
                        //then worked
                    } else {
                        var sEval = 'row = window.' + dataTable + '[thisRowId];';
                        eval(sEval);
                    }
                }
                row['xr'] = ''; //guarantee randomness so not cached url

            } catch (err) {
                row = null;
            }

            return row;

        },

        mergeObjectArray: function (srcArray, objectsToAdd) {
            if (typeof srcArray != 'undefined') {
                for (key in objectsToAdd) {
                    srcArray[key] = objectsToAdd[key];
                }
            }
        },

        enableEmailCart: function () {

            $(document).ready(function () {
                if ($('#cmdEmailCart').length > 0) {
                    $('#cmdEmailCart').show();
                }
            });
        },

        validSkuRow: function (testRow) {
            if (testRow != null) {

                var i = 0;
                for (fieldname in testRow) {
                    if (!testRow.hasOwnProperty(fieldname)) {
                        continue;
                    }
                    if ((fieldname == 'ROWID')
                        || (fieldname == 'AHINQID')
                        || (fieldname == 'AHOPTSKU')
                        || (fieldname == 'AHRELSKU')
                        || (fieldname == 'AHSLSQTY')
                        || (fieldname == 'AHEPPPRC')
                        || (fieldname == 'AHFABPRC')
                        || (fieldname == 'AHEPPSEL')
                        || (fieldname == 'AHFABSEL')) {
                        i++;
                    }
                }
                if (i >= 7) {
                    return true;
                }
            }
            return false
        },

        scheduleInHome_Load: function () {

            var map;
            var markersArray = [];

            var date = $(this).attr("date");
            var type = $(this).attr("dptype");

            var home = $(this).attr('home');

            var pChecked = "";
            var dChecked = "";
            if (type == "P") {
                var pChecked = "checked";
                var delIns = '';
            }

            if (type == "D") {
                var dChecked = "checked";
                var delIns = 'display:block';
            }

            var html = "<div class='closeLastItem' style=''> <button class='closeWindow'></button> </div>" +
                "<div class='clear'></div>" +
                "<h3 style='text-align:center'>Schedule Pickup/Delivery Date </h3>" +
                "<div style='float:left;'>" +
                "<div class='nameSpaceCart'>Type</div> <div class='dataSpaceCart' style='width:250px'>PU: <input type='radio' id='TYPEp' name='DTYPE' value='P' " + pChecked + " /> DEL: <input type='radio' id='TYPEd' name='DTYPE' value='D'  " + dChecked + "  /></div>" +
                "<div class='nameSpaceCart'>Date</div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='DDATE' value='" + date + "'  /></div>" +
                "<div class='nameSpaceCart'>Address</div> <div class='dataSpaceCart' style='width:250px'><span id='addrResult'></span> </div>" +

                "<div style='float:left;height:auto;width:100%;" + delIns + "' id='delInstruction'>" +

                "<div class='nameSpaceCart'> Major Intersection </div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='majorInt' maxlength='50' /> </div>" +
                "<div class='nameSpaceCart'> Directions from Intersection </div> <div class='dataSpaceCart' style='width:250px'><textarea id='intDel' maxlength='250'></textarea> </div>" +

                "</div>" +

                "<div class='nameSpaceCart'><input type='submit' id='scheduleInHome' /></div>" +


                "</div>" +
                "<div class='clear'></div>";

            $('#lastImageHolder').html("<div class='innerFloat'>" + html + "</div>");


            $('#lastImageBack').fadeIn('fast');
            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/getCartCalendarDays',
                dataType: 'json',
                data: {
                    CART_ID: ShopdataUI.data.SDCARTID,
                    DTYPE: type,
                    GREETING_ID: ShopdataUI.data.SDGREETID
                },
                type: 'post',
                success: function (data) {
                    if (data.success) {
                        shopCartUI.loadDatepicker(data.data);
                        $("#DDATE").datepicker('show');
                    } else {
                        shopCartUI.handleFailedAjaxCall(data);
                    }
                },
                error: function () {
                    shopCartUI.displayMsg('Failed to load dates, try refreshing the page and trying again');
                }
            });
        },

        lookupCustomer: function () {
            $('body').on('click', '#lookupCustomer', function () {
                $.ajax({
                    url: shopCartUI.baseURL + 'index.php/main/customer_lookup',
                    dataType: 'html',
                    type: 'post',
                    data: {'GREETING_ID': ShopdataUI.data.SDGREETID},
                    success: function (data) {
                        shopCartUI.openModal('modal-lg', '<i class="fa fa-search-plus"></i> Customer Lookup', data, 'customerLookupWindow');
                        $('#SDCUSPHON1SEARCH').mask('(000) 000-0000');
                    },
                    error: function () {

                    }
                });
            });
        },

        restartLookupCustomer: function () {
            $('body').on('click', '#tryLookupAgain', function () {
                $('#customerLookupWindow').modal('hide');
                if ($('#customerInfoArea').hasClass('hide')) {
                    $('#lookupCustomer').trigger('click');
                }
            });
        },

        scheduleInHome_Save: function () {

            var TYPEp = $('#TYPEp').prop("checked");
            var TYPEd = $('#TYPEd').prop("checked");
            var DDATE = $('#DDATE').val();

            var majorInt = $('#majorInt').val();
            var intDel = $('#intDel').val();

            var DSTORE = '';

            if (TYPEp != undefined && TYPEp) {
                DTYPE = "P";
            }
            if (TYPEd != undefined && TYPEd) {
                DTYPE = "D";
            }

            if (TYPEp == undefined && TYPEd == undefined) {

                $('#TYPEp').parent().css({'border-left': '4px red solid'});
                $('#TYPEd').parent().css({'border-left': '4px red solid'});

            } else if (DDATE == "") {

                $('#DDATE').addClass('emptyField');

            } else if (DTYPE == "D" && (majorInt == "" || intDel == "")) {

                if (majorInt == "") {
                    $('#majorInt').addClass('emptyField');
                }
                if (intDel == "") {
                    $('#intDel').addClass('emptyField');
                }

            } else {

                $('#DDATE').removeClass('emptyField');
                $('#majorInt').removeClass('emptyField');
                $('#intDel').removeClass('emptyField');

                $('#TYPEp').parent().css({'border-left': 'none'});
                $('#TYPEd').parent().css({'border-left': 'none'});

                if (DTYPE == "P") {
                    var trans = "picked up";
                } else {
                    var trans = "delivered";
                }

                $.post(shopCartUI.baseURL + 'index.php/main/scheduleInHome', {
                    DTYPE: DTYPE,
                    DDATE: DDATE,
                    DSTORE: DSTORE,
                    majorInt: majorInt,
                    intDel: intDel
                }, function (data) {


                    if (data.indexOf("_") == 2) {

                        var shipments = data.split("_");

                        $('.applyPayment').css({"visibility": "visibile"});

                        var ships = shipments[0] - 0;
                        var saves = shipments[1] - 0;

                        var html = "<div class='closeLastItem' style='float:right;top:5px'> <button class='closeWindow'></button> </div>" +
                            "<div class='clear'></div>" +
                            "<h3 style='text-align:center'>Date Scheduled: " + DDATE + " </h3>" +
                            "<h4>Items to be " + trans + ": " + ships + "</h4>";

                        if (saves > 0) {
                            html = html + "<br/><br/><h4>" + saves + " Were Moved to Save for Later Because They Could Not Be Shipped on the Chosen Date.</h4>";
                        }

                        $('#lastImageHolder').html(html);

                        View.Cart_Update();

                    } else {

                        $('#lastImageHolder').html('<h3 style="text-align:center">The date was not scheduled</div>').delay(1500).fadeOut(function () {

                            var html = "<div class='closeLastItem' style=''> <button class='closeWindow'></button> </div>" +
                                "<div class='clear'></div>" +
                                "<h3 style='text-align:center'>Schedule Pickup/Delivery Date </h3>" +
                                "<div style='float:left'>" +
                                "<div class='nameSpaceCart'>Type</div> <div class='dataSpaceCart' style='width:250px'>PU: <input type='radio' id='TYPEp' name='DTYPE' value='P' /> DEL: <input type='radio' id='TYPEd' name='DTYPE' value='D' /></div>" +
                                "<div class='nameSpaceCart'>Date</div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='DDATE' /></div>" +

                                "<div style='float:left;height:auto;width:100%;' id='delInstruction'>" +

                                "<div class='nameSpaceCart'> Major Intersection </div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='majorInt' maxlength='50' /> </div>" +
                                "<div class='nameSpaceCart'> Directions from Intersection </div> <div class='dataSpaceCart' style='width:250px'><textarea id='intDel' maxlength='250'></textarea> </div>" +

                                "</div>" +

                                "<div class='nameSpaceCart'><input type='submit' id='scheduleInHome' /></div>" +


                                "</div>" +
                                "<div class='clear'></div>";


                            $('#lastImageHolder').html("<div class='innerFloat'>" + html + "</div>").fadeIn('fast');


                        });


                    }

                }).fail(function (data) {
                    shopCartUI.handleCartError(data);
                });

            }

        },

        changePrice_Load: function () {

            var rel = $(this).attr("rel");
            var opt = $(this).attr("opt");

            var html = "<div class='closeLastItem' style='float:right;top:5px'> <button class='closeWindow'></button> </div>" +
                "<div class='clear'></div>" +
                "<h3 style='text-align:center'>Price Change</h3>" +
                "<div style='float:left'>" +
                "<div class='nameSpaceCart'>New Price</div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='newPrice' /></div>" +
                "<div class='nameSpaceCart'>Price Code</div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='discountCode' /></div>" +
                "<div class='nameSpaceCart'>Reason Code</div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='reasonCode' /></div>" +
                "<div class='nameSpaceCart'><input type='submit' id='doChangePrice' rel='" + rel + "' opt='" + opt + "' /></div>" +

                "</div>";


            $('#lastImageHolder').html(html);

            $('#lastImageBack').fadeIn('fast');


        },

        changePrice_Save: function () {
            var newPrice = $('#newPrice').val();
            var discountCode = $('#discountCode').val();
            var reasonCode = $('#reasonCode').val();

            var sku = $(this).attr("rel");
            var opt = $(this).attr("opt");


            $.post(shopCartUI.baseURL + 'index.php/main/changePrice', {
                opt: opt,
                rel: sku,
                discountCode: discountCode,
                newPrice: newPrice,
                reasonCode: reasonCode
            }, function (data) {
                shopCartUI.checkSessionTimeout(data);
                if (data == 1) {

                    var html = "<div class='closeLastItem' style='float:right;top:5px'><button class='closeWindow'></button></div>" +
                        "<div class='clear'></div>" +
                        "<h3 style='text-align:center'>Price Updated</h3>";

                    $('#lastImageHolder').html(html);


                } else {

                    $('#lastImageHolder').html('<h3 style="text-align:center">The code you entered is invalid</div>').delay(1500).fadeOut(function () {

                        var html = "<div class='closeLastItem' style='float:right;top:5px'>  <button class='closeWindow'></button> </div>" +
                            "<div class='clear'></div>" +
                            "<h3 style='text-align:center'>Price Change</h3>" +
                            "<div style='float:left'>" +
                            "<div class='nameSpaceCart'>New Price</div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='newPrice' /></div>" +
                            "<div class='nameSpaceCart'>Price Code</div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='discountCode' /></div>" +
                            "<div class='nameSpaceCart'>Reason Code</div> <div class='dataSpaceCart' style='width:250px'><input type='text' id='reasonCode' /></div>" +
                            "<div class='nameSpaceCart'><input type='submit' id='doChangePrice' rel='" + sku + "' opt='" + opt + "' /></div>" +

                            "</div>";


                        $('#lastImageHolder').html(html).fadeIn('fast');

                    });


                }

            }).fail(function (data) {
                shopCartUI.handleCartError(data);
            });


        },

        applyDiscount: function () {

            var sku = $(this).attr("rel");
            var opt = $(this).attr("opt");

            var code = $('#discount_' + sku).val();


            var AHINQID = $('#AHINQID').val();

            shopCartUI.Loading_On();
            $.post(shopCartUI.baseURL + 'index.php/main/discountItem', {
                opt: opt,
                rel: rel,
                discountCode: code,
                AHINQID: AHINQID
            }, function (data) {
                shopCartUI.checkSessionTimeout(data);
                shopCartUI.Loading_Off();
                $('#lastImageHolder').html('<div class="closeLastItem" style="float:right;top:5px"> <button class="closeWindow"></button> </div><div class="clear"></div><h3 style="text-align:center">' + data + '</h3>');
                $('#lastImageBack').fadeIn('fast');

                View.Cart_Update();
                ///add price discount notification

            }).fail(function (data) {
                shopCartUI.handleCartError(data);
            });


        },

        checkSessionTimeout: function (data) {
            if (arguments.length > 0
                && typeof data.length != 'undefined'
                && data.length > 0) {
                var d = data + "";
                if ((d.indexOf('<script>location.href') > -1 && d.indexOf('<script>location.href') < 4)
                    || (d.indexOf('<h4>A PHP Error was encountered</h4>') > -1
                        && d.indexOf('<p>Message:  Undefined index: CART_ID</p>') > -1)) {
                    shopCartUI.displayMsg('Session Timeout Reloading Page');
                    location.reload();
                }
            }
        },

        hasErrorMessages: function (data) {
            if (arguments.length == 0) return;
            var jqXHR = null;
            if (typeof data.responseText != 'undefined') {
                jqXHR = data;
                data = data.responseText;
            }
            if (typeof data == 'string') {
                var d = '';
                var data2 = data
                var i = data.indexOf('~#*#~');
                if (i >= 0) {
                    location.reload();
                    return;

                }
                i = data.indexOf('[{error:');
                var errorfound = false;
                if (i > 0) {
                    errorfound = true;
                }
                if (i == 0) {
                    i = data.indexOf('}]');
                    try {
                        eval('d=' + data.substring(0, i + 2) + ';');
                    } catch (err) {
                    }
                    if (typeof d[0] != 'undefined') {
                        if (typeof d[0].error != 'undefined') {
                            if (data.indexOf('pre-approved') == -1) {
                                shopCartUI.displayMsg(d[0].error);
                            } else {
                                shopCartUI.displayPrescreenMsg(d[0].error);
                            }
                        }
                    }
                    data2 = data.substring(i + 2);
                    i = data2.indexOf('[{error:');
                    while (i > -1) {
                        if (i == 0) {
                            i = data2.indexOf('}]');
                            try {
                                eval('d=' + data2.substring(0, i + 2) + ';');
                            } catch (err) {
                            }
                            if (typeof d[0] != 'undefined'
                                && typeof d[0].error != 'undefined') {
                                if (data.indexOf('pre-approved') == -1) {
                                    shopCartUI.displayMsg(d[0].error);
                                } else {
                                    shopCartUI.displayPrescreenMsg(d[0].error);
                                }
                            }
                            data2 = data2.substring(i + 2);
                            i = data2.indexOf('[{error:');
                        } else {
                            i = -1;
                        }
                    }
                }
                if (typeof d != 'undefined'
                    && typeof d.length != 'undefined' && d.length > 0
                    && typeof d[0].success != 'undefined') {
                    return d[0];
                } else {
                    i = data2.indexOf('}]');
                    if (i > 0 && errorfound) {
                        data2 = data.substring(i + 2);
                        if (data2.length > 0) {
                            return data2;
                        }
                    }
                }
                return data2;
            }
        },

        showNumericKeyPad: function (id, callback) {
            if (arguments.length == 0 || id.trim().length == 0) {
                //     id='#txtSKU';
            }
            if (typeof window.ShopCartNumKeyPad != 'undefined' && window.ShopCartNumKeyPad != null) {
                window.ShopCartNumKeyPad.updateHandler('numericKeypads', id, 'keyup', shopCartUI.clickEventToUse, 'ShopCartNumKeyPad', callback);  //'propertychange keyup input'
            } else {
                window.ShopCartNumKeyPad = new NumericKeyPad('numericKeypads', id, 'keyup', shopCartUI.clickEventToUse, 'ShopCartNumKeyPad', callback);  //'propertychange keyup input'
            }
            ShopCartNumKeyPad.show();
            $(id).blur();
        },

        showCalculator: function () {
            if (arguments.length > 0) {
                try {
                    arguments[0].stopPropagation();
                    arguments[0].preventDefault();
                } catch (err) {
                }
            }
            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/getCalculator',
                dataType: 'html',
                success: function (data) {
                    shopCartUI.openModal('modal-md', 'Calculator', data, 'simpleCalculator');
                    window.CalcAnswer = $('#CalcAnswer')[0];
                },
                error: function () {
                    shopCartUI.openModal('modal-md', 'Oops, an error occurred', 'There was a problem opening the calculator, try refreshing your page and trying again.', 'simpleCalculator');
                },
            });
        },

        hideMsg: function () {
            $("#msgDialog").dialog("close");
            $('#ui-datepicker-div').hide();
        },

        displayMsg: function (msg, title, autohide, touch) {
            $('#modalArea').html('');
            $('.modal-backdrop').remove();
            if (typeof title == 'undefined') {
                title = 'Information'
            }
            shopCartUI.openModal('modal-md', title, msg, 'displayMsg');
        },

        displayPrescreenMsg: function (msg) {
            $("#msgDialog").attr('title', 'Information');
            $("#msgDialog").find('p').html(msg);
            $("#msgDialog").dialog({
                open: function (event, ui) {
                    $(".ui-dialog-titlebar-close", ui.dialog | ui).hide();
                },
                minWidth: 500,
                modal: true,
                buttons: {
                    "Accept": function () {
                        shopCartUI.processPrescreen('A');
                        $(this).dialog("close");
                    },
                    "Reject": function () {
                        shopCartUI.processPrescreen('R');
                        $(this).dialog("close");
                    }
                }
            });
        },

        processPrescreen: function (status) {
            $.post(
                shopCartUI.baseURL + 'index.php/main/processPrescreen',
                {status: status},
                function (data) {
                    shopCartUI.updateCustomersAvailAndCart(data);
                }).fail(
                function (data) {
                    shopCartUI.handleCartError(data);
                }
            );
        },

        forceCloseMsgDialog: function () {
            $("#msgDialog").dialog("close");
        },

        logError: function (errorMsg, errorObj, logdate, logkey) {
            try {
                if (arguments.length > 2) {
                    $.post(shopCartUI.baseURL + 'index.php/main/logError',
                        {
                            "message": errorMsg,
                            "errorObj": (errorObj == null ? "" : errorObj.toString()),
                            "logdatetime": logdate
                        },
                        function () {
                            //clear error if successfully sent
                            ShopCartUI.NetworkErrorLog[logkey] = false;

                            if (shopCartUI.NetworkErrorLog.length == 0) {
                                shopCartUI.NetworkErrorLog = new Array();  //clear the array
                                if (shopCartUI.NetworkErrorLogTimer != null) {
                                    window.clearInterval(shopCartUI.NetworkErrorLogTimer);
                                    shopCartUI.NetworkErrorLogTimer = null;
                                }
                            }
                            shopCartUI.displayMsg('We recommend that you refresh your page so that the error is cleared and everything is back to working as expected.', 'Oops, There was an processing your request');
                        }
                    );
                } else {
                    $.post(shopCartUI.baseURL + 'index.php/main/logError',
                        {"message": errorMsg, "errorObj": (errorObj == null ? "" : errorObj.toString())},
                        function (data) {
                            result = data;
                            ShopdataUI.Loading_Off();
                        }
                    );
                }
            }
            catch (ex) {

            }
        },

        handleCartError: function (jQXhr, data) {
            shopCartUI.Loading_Off();
            if (arguments.length > 0 && jQXhr != null && typeof jQXhr.responseText != 'undefined') {
                shopCartUI.checkSessionTimeout(jQXhr.responseText);
            }

            if (arguments.length == 0 || data == null) {
                shopCartUI.checkIfNetworkError();
                shopCartUI.displayMsg('Request timed out try again.');
            } else if (jQXhr.status != 'undefined') {
                if (jQXhr.status == '408') {
                    shopCartUI.displayMsg('Request timed out try again.');
                    shopCartUI.checkIfNetworkError();
                }
            }

            var d = '';
            try {
                if (typeof jQXhr.responseText != typeof undefined) {
                    eval('d=' + jQXhr.responseText + ';');
                }
            } catch (err) {
                shopCartUI.displayMsg('There was an error processing your request. If the problem persist please contact support', 'Error:');
                // if(typeof jQXhr.responseText != 'undefined') {
                //     var e = jQXhr.responseText.split(':');
                //     if(typeof e[1] != 'undefined') {
                //         e = e[1].split('"');
                //         shopCartUI.displayMsg(e[1]);
                //     } else {
                //         shopCartUI.displayMsg('There was an error processing your request. If the problem persist please contact support', 'Error:');
                //     }
                //     shopCartUI.reloadCustomersAvailAndCart();
                // }
            }

            if (typeof d[0] != 'undefined'
                && typeof d[0].error != 'undefined') {
                shopCartUI.displayMsg(d[0].error);
                shopCartUI.reloadCustomersAvailAndCart();
            }
        },

        //note: not automatically updated need to make function call below to update
        BadNetworkConnection: "FALSE",

        checkIfNetworkError: function (callbackfunction, errormsg) {

            shopCartUI.BadNetworkConnection = 'CHECKING';
            var msg = 'Error network connection error try again later';
            if (arguments.length > 1) {
                msg = errormsg;
            }

            $.post(shopCartUI.baseURL + 'networkTest.php', function (data) {
                var stat = false;
                if (arguments.length > 0) {
                    if (data.length > 0 && data.indexOf('NETWORK CONNECTION WORKS') > -1) {
                        stat = true;
                        shopCartUI.BadNetworkConnection = 'FALSE';
                        if (arguments.length > 0) {
                            if (callbackfunction != null) {
                                if (typeof(callbackfunction) == "function") {
                                    try {
                                        callbackfunction();
                                    } catch (err) {
                                        shopCartUI.logError("Error in checkIfNetworkError\n when ran callback function below.\n" + encodeURI(callbackfunction.toString()), err);
                                        shopCartUI.displayMsg("Unable to finish task");
                                    }
                                } else if (typeof(callbackfunction) == "string") {
                                    try {
                                        eval(callbackfunction);
                                    } catch (err) {
                                        shopCartUI.logError("Error in checkIfNetworkError\n when ran callback function below.\n" + encodeURI(callbackfunction), err);
                                        shopCartUI.displayMsg("Unable to finish task");
                                    }
                                }
                            }
                        }
                    }
                }
                if (!stat) {
                    shopCartUI.BadNetworkConnection = 'TRUE';
                    shopCartUI.displayMsg(msg);
                    shopCartUI.logNetworkErrorLater(callbackfunction, msg);
                }
            }).fail(function () {
                    shopCartUI.displayMsg(msg);
                    shopCartUI.logNetworkErrorLater(callbackfunction, msg);
                    shopCartUI.BadNetworkConnection = 'TRUE';
                }
            );
        },

        NetworkErrorLog: {},

        NetworkErrorLogTimer: null,

        LogNetworkErrors: function () {
            if (typeof shopCartUI.NetworkErrorLog.length != 'undefined' && shopCartUI.NetworkErrorLog.length > 0) {
                for (var key in shopCartUI.NetworkErrorLog) {
                    if (shopCartUI.NetworkErrorLog[key] != false) {
                        shopCartUI.logError("Error in checkIfNetworkError\n when ran callback function below.\n" + encodeURI(shopCartUI.NetworkErrorLog[key].Action) + "\n" + shopCartUI.NetworkErrorLog[key].FailureMessage, null,
                            ShopCartUI.NetworkErrorLog[key].NetworkFailureTime, key);
                    }
                }
            }
        },

        logNetworkErrorLater: function (callbackfunction, msg) {
            if (typeof shopCartUI.NetworkErrorLog != 'undefined') {
                if (shopCartUI.NetworkErrorLog == null || typeof shopCartUI.NetworkErrorLog.length != 'undefined') {
                    shopCartUI.NetworkErrorLog = new Array();
                }

                var scallback = "callbackfunction not passed or null";
                if (arguments.length > 0 && callbackfunction != null) {
                    if (typeof(callbackfunction) != "string") {
                        scallback = callbackfunction.toString();
                    } else {
                        scallback = callbackfunction;
                    }
                }
                var emsg = "No error message passed or null";
                if (arguments.length > 1 && msg != null) {
                    emsg = msg;
                }
                var dd = new Date();
                shopCartUI.NetworkErrorLog[dd] = {
                    "NetworkFailureTime": dd,
                    "Action": scallback,
                    "FailureMessage": emsg
                };
                if (shopCartUI.NetworkErrorLogTimer == null) {
                    shopCartUI.NetworkErrorLogTimer = window.setInterval(shopCartUI.LogNetworkErrors, 60000);
                }
            }

        },

        checkIfElementIsInView: function (elem, padding) {
            var docViewTop = $(window).scrollTop();
            var docViewBottom = docViewTop + $(window).height();

            var elemTop = $(elem).offset().top;
            var elemBottom = elemTop + ($(elem).height() - padding);

            return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));
        },

        openCompetitiveShopping: function () {
            $('#showCompetitors').click(function () {
                shopCartUI.CloseSideMenu();
                $.ajax({
                    global: true,
                    cache: false,
                    url: shopCartUI.baseURL + 'index.php/main/getStoresMarketCompetitors',
                    dataType: 'html',
                    success: function (data) {
                        shopCartUI.openModal('modal-lg', 'Comp Shop', data, 'competitiveShopping')
                    },
                    error: function () {
                        shopCartUI.displayMsg('Failed to retrieve market competitors window, try again. If the problem persists contact support.', 'Error');
                    },
                });
            });
        },


        /* STARTING HFC Notes Related Functionality */
        setTrixEditor: function (note, seq) {
            var element = document.querySelector("#notes-editor");
            element.editor.setSelectedRange([0, 2000]);
            element.editor.insertHTML(note);
            $('.trix-note').trigger('keyup');

            $('#noteErrorFeedback').remove();
            $('#hfcNoteForm').slideToggle();
            $('#addNewHFCNote').toggle();
            $('#edit_seq').val(seq);
            $('#notes-editor').focus();
        },

        hfcNotesChanges: function () {
            if ($('#showHFCNotes').length > 0) {
                $('#hfc_notes_button').removeClass('hide');
            }

            $('body').on('click', '#addNewHFCNote', function (event) {
                event.preventDefault();
                $('.editNoteLink').removeClass('active');
                $('#notes-editor').focus();
                shopCartUI.toggleHFCNoteInputs();
            });

            $('body').on('click', '#cancelHFCNote', function (event) {
                event.preventDefault();
                $('.editNoteLink').removeClass('active');
                $('#notes-editor').blur();
                document.activeElement.blur();
                $("#notes-editor").blur();
                $('#hfcNotes').trigger('click');
                shopCartUI.toggleHFCNoteInputs();
                $('#edit_seq').val('');
                htmlInputEditor.setInputValue('notesInputBox', '');
            });
        },
        toggleHFCNoteInputs: function () {
            $('#noteErrorFeedback').remove();
            $('#hfcNoteForm').slideToggle();
            $('#addNewHFCNote').toggle();
        },
        editHFCNote: function () {
            $('body').delegate('.editNoteLink', 'click', function () {
                $('.editNoteLink').removeClass('active');
                $(this).addClass('active');
                var seq = $(this).data('seq');
                var note = $(this).closest('li').find('.hfcNote').html();
                $('#edit_seq').val(seq);

                htmlInputEditor.setInputValue('notesInputBox', note);

                if (!$('#hfcNoteForm').is(':visible')) {
                    $('#hfcNoteForm').slideToggle();
                    $('#addNewHFCNote').toggle();
                }
            });
        },
        saveHFCNote: function () {
            $('body').delegate('#saveHFCNote', 'click', function () {
                $('#noteErrorFeedback').remove();
                var note = $('#hfc_note').val();
                var edit_seq = $('#edit_seq').val();
                if (note.length < 5) {
                    $('#hfc_note').after('<div id="noteErrorFeedback">Note must be at least 5 characters long</div>');
                    return false;
                }

                $.ajax({
                    global: false,
                    cache: true,
                    url: shopCartUI.baseURL + 'index.php/main/saveHFCNotes',
                    dataType: 'json',
                    type: 'post',
                    data: {'note': note, 'edit_seq': edit_seq},
                    success: function (results) {
                        if (results.success) {
                            $('.noteSuccess').removeClass('noteSuccess');
                            if (results.data['type'] == 'INSERT') {
                                var lineItem = '<li id="noteSeq_' + results.data['seq'] + '" class="noteSuccess"><div class="hfcNote">' + results.data['msg'] + '</div><div>';
                                lineItem += '<button data-seq="' + results.data['seq'] + '" class="pull-right btn btn-sm btn-danger deleteHFCNote"><i class="fa fa-times-circle"></i> Delete</button>';
                                lineItem += '<button data-seq="' + results.data['seq'] + '" class="pull-right btn btn-sm btn-success editNoteLink" style="margin-right: 25px;"><i class="fa fa-pencil"></i> Edit</button>';
                                lineItem += '<span class="small-info"><i class="fa fa-calendar"></i> ' + results.data['date'] + '</span>';
                                lineItem += '<div class="clearfix"></div>';
                                lineItem += '</div></li>';
                                $('#hfcNotes').prepend(lineItem);
                            } else {
                                var lineItem = '<div class="hfcNote">' + results.data['msg'] + '</div><div>';
                                lineItem += '<button data-seq="' + results.data['seq'] + '" class="pull-right btn btn-sm btn-danger deleteHFCNote"><i class="fa fa-times-circle"></i> Delete</button>';
                                lineItem += '<button data-seq="' + results.data['seq'] + '" class="pull-right btn btn-sm btn-success editNoteLink" style="margin-right: 25px;"><i class="fa fa-pencil"></i> Edit</button>';
                                lineItem += '<span class="small-info"><i class="fa fa-calendar"></i> ' + results.data['date'] + '</span>';
                                lineItem += '<div class="clearfix"></div>';
                                lineItem += '</div>';
                                $('.editNoteLink').removeClass('active');
                                $('#noteSeq_' + results.data['seq']).addClass('noteSuccess').html(lineItem);
                            }
                            $('#noNotes').remove();
                            $('#hfcNoteForm').toggle();
                            $('#addNewHFCNote').toggle();
                            $('#hfc_note').val('');

                            htmlInputEditor.setInputValue('notesInputBox', '');
                            $('#edit_seq').val('');
                        } else {
                            $('#hfc_note').after('<div id="noteErrorFeedback">' + results.data + '</div>');
                        }
                    },
                    error: function () {
                        $('#saveHFCNote').html('Save').prop('disabled', false);
                        $('#hfc_note').after('<div id="noteErrorFeedback">There was an error saving the note, try again</div>');
                    },
                    beforeSend: function () {
                        $('#saveHFCNote').html('<i class="fa fa-gear fa-spin"></i> Saving...').prop('disabled', true);
                    },
                    complete: function () {
                        $('#saveHFCNote').html('Save').prop('disabled', false);
                    }
                });
            });
        },
        deleteHFCNote: function () {

            $('body').on('click', '.deleteHFCNote', function () {
                $('#hfc_note').val('');
                $('#edit_seq').val('');

                $('.editNoteLink').removeClass('active');
                var userSure = confirm('Are you sure you would want to delete this note?');
                if (userSure) {
                    var elem = $(this);
                    var seq = $(this).data('seq');
                    if (seq != '') {
                        var unLoader = '<div class="deletingLineItem lineItem_' + seq + '"><i class="fa fa-gear fa-spin fa-fw"></i> Deleting Note...</div>';
                        $(elem).closest('li').prepend(unLoader);

                        $.ajax({
                            global: false,
                            cache: true,
                            url: shopCartUI.baseURL + 'index.php/main/deleteHFCNote',
                            dataType: 'json',
                            type: 'post',
                            data: {'seq': seq},
                            success: function (results) {
                                if (results.success) {
                                    var notes = results.data.data;
                                    if (notes.length > 0) {
                                        var listItems = '';
                                        for (key in notes) {
                                            var date = notes[key]['DATE_STAMP'];

                                            listItems += '<li id="noteSeq_' + notes[key]["HNSEQ"] + '"><div class="hfcNote">' + notes[key]["HNNOTE"] + '</div><div>';
                                            listItems += '<a href="#" data-seq="' + notes[key]["HNSEQ"] + '" class="pull-right  btn btn-sm btn-danger deleteHFCNote"><i class="fa fa-times-circle"></i> Delete</a>';
                                            listItems += '<a href="#" data-seq="' + notes[key]["HNSEQ"] + '" class="pull-right btn btn-sm btn-success editNoteLink" style="margin-right: 25px;"><i class="fa fa-pencil"></i> Edit</a>';
                                            listItems += '<span class="small-info"><i class="fa fa-calendar"></i> ' + date + '</span>';
                                            listItems += '<div class="clearfix"></div>';
                                            listItems += '</div></li>';
                                        }
                                        $('#hfcNotes').html(listItems);
                                    } else {
                                        $('#hfcNotes').html('<li id="noNotes"><p>You have no notes yet</p></li>');
                                    }
                                } else {
                                    alert('Failed to delete note, try again');
                                }
                            },
                            error: function () {

                            }
                        });
                    }
                }
            });
        },
        loadHFCNotes: function () {
            shopCartUI.loadingOn();
            $('#hfc-notes-window').remove();
            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/loadHFCNotes',
                dataType: 'html',
                success: function (data) {
                    shopCartUI.openModal('modal-lg', '<i class="fa fa-pencil"></i> My Notes ', data, 'hfcNotesWindow');

                    htmlInputEditor.init({
                        maxLength: 1000,
                        inputClasses: 'form-control',
                        showCounterError: true,
                        inputId: 'notes-editor',
                        textareaId: 'hfc_note',
                        minHeight: '100',
                        addURLButton: false,
                    });
                },
                error: function () {
                    //TODO: Remove this or make it not use alert
                    alert('Failed to load notes window');
                    shopCartUI.loadingOff();
                    shopCartUI.CloseSideMenu();
                },
                beforeSend: function () {
                    $('#hfc_notes_btn').html('<i class="fa fa-gear fa-spin"></i> Loading...').prop('disabled', true);
                },
                complete: function () {
                    shopCartUI.CloseSideMenu();
                    $('#hfc_notes_btn').html('<i class="fa fa-pencil fa-fw"></i> My Notes').prop('disabled', false);
                }
            });

        },
        /* ENDING HFC Notes Related Functionality */

        handleFailedAjaxCall: function (data) {
            $('#modalArea').html('');
            $('.modal-backdrop').remove();


            var buttons = typeof data.data != 'undefined' && typeof data.data.buttons != 'undefined' ? data.data.buttons : [];
            var button = [];
            var hideClose = false;
            var showMessage = typeof data.msg != 'undefined' && data.msg != '' ? data.msg : 'There was an error with the request, please refresh the screen and try again';
            if (typeof buttons.refresh != 'undefined' && buttons.refresh) {
                button = [
                    {
                        id: 'refeshScreen',
                        name: 'Refresh',
                        class: 'btn btn-default',
                        data: '',
                    },
                ];
                hideClose = true;
            }

            shopCartUI.openModal('modal-md', '<i class="fa fa-exclamation-triangle"></i> Error', showMessage, 'errorView', button, hideClose);
        },

        loadCustomersIntoView: function (elem, loadAll) {
            var list = elem.attr('id');
            var title = elem.data('title');
            $('#customerListSection li').removeClass('active');
            elem.addClass('active');
            var currentCustomerCount = $('#customerListView .customer').length;
            var listOrder = $('#customer-sort-input').val();
            if (list && !$('#customerListView').hasClass('noMoreResults')) {
                $.ajax({
                    global: true,
                    cache: false,
                    type: 'post',
                    url: shopCartUI.baseURL + 'index.php/main/loadCustomerList',
                    dataType: 'json',
                    data: {'customer_list_type': list, 'current': currentCustomerCount, 'all': loadAll, 'order': listOrder},
                    success: function (data) {
                        if (data.success) {
                            if ($('#customerListView').length == 0) {
                                var legend = shopCartUI.customerListLegend(list);
                                shopCartUI.openModal('modal-lg', '<i class="fa fa-users"></i> ' + title, '<div class="row initCustomerRow">' + data.data.view + '</div>', 'customerListView', '', false, legend);
                            } else {
                                $('#customerListView .modal-body .initCustomerRow').append(data.data.view);
                            }
                            if (data.data.view == '' || data.last == true) {
                                $('#customerListView').addClass('noMoreResults');
                            }
                            shopCartUI.loadMoreCustomersListener();
                            if(loadAll) $('#customer-search-input').trigger('keyup');

                        } else {
                            shopCartUI.handleFailedAjaxCall(data);
                        }
                    },
                    error: function () {
                        shopCartUI.openModal('modal-md', 'Error', 'There was a error processing your request, try again', 'errorWindow');
                    }
                });
            }

            if(loadAll) $('#customer-search-input').attr('disabled', false).focus();
        },

        CustomerListSection: function () {
            $('body').on('click', '#customerListSection li', function () {
                shopCartUI.loadCustomersIntoView($(this));
            });
        },

        loadMoreCustomersListener: function () {
            $('#customerListView .modal-body').off('scroll');
            $('#customerListView .modal-body').scroll(function () {
                if (this.scrollTop == (this.scrollHeight - this.offsetHeight)) {
                    shopCartUI.loadCustomersIntoView($('#customerListSection .active'));
                }
            });

        },

        customerListLegend: function (list) {
            var legendItems = [];
            switch (list) {
                case 'todayCustomerList':
                    legendItems.push('<span class="legendColor activeCustomerTile"></span> Active Customer');
                    legendItems.push('<span class="legendColor defaultCustomerTile"></span> New Quotes');
                    legendItems.push('<span class="legendColor redCustomerTile"></span> Expired Quotes');
                    legendItems.push('<span class="legendColor redCustomerTile"></span> Canceled');
                    legendItems.push('<span class="legendColor yellowCustomerTile"></span> Partial Paid');
                    break;
                case 'priceQuoteCustomerList':
                    legendItems.push('<span class="legendColor activeCustomerTile"></span> Active Customer');
                    legendItems.push('<span class="legendColor defaultCustomerTile"></span> New Quotes');
                    legendItems.push('<span class="legendColor redCustomerTile"></span> Expired Quotes');
                    break;
                case 'canceledCustomerList':
                    legendItems.push('<span class="legendColor activeCustomerTile"></span> Active Customer');
                    legendItems.push('<span class="legendColor redCustomerTile"></span> Canceled');
                    break;
                case 'priceLockCustomerList':
                    legendItems.push('<span class="legendColor activeCustomerTile"></span> Active Customer');
                    legendItems.push('<span class="legendColor yellowCustomerTile"></span> Partial Paid');
                    break;
                case 'needsScheduledCustomerList':
                    legendItems.push('<span class="legendColor activeCustomerTile"></span> Active Customer');
                    legendItems.push('<span class="legendColor greenCustomerTile"></span> Needs Scheduled ');
                    break;
                case 'scheduledCustomerList':
                    legendItems.push('<span class="legendColor activeCustomerTile"></span> Active Customer');
                    legendItems.push('<span class="legendColor yellowCustomerTile"></span> Rescheduled');
                    legendItems.push('<span class="legendColor greenCustomerTile"></span> Scheduled');
                    break;
                case 'shippedCustomerList':
                    legendItems.push('<span class="legendColor activeCustomerTile"></span> Active Customer');
                    legendItems.push('<span class="legendColor blueCustomerTile"></span> Shipped');
                    legendItems.push('<span class="legendColor yellowCustomerTile"></span> Partial Shipped');
                    break;
                default:
                    break;
            }

            if (legendItems.length > 0) {
                var legend = '<ul id="windowLegend" class="pull-left">';
                for (var i in legendItems) {
                    legend += '<li>' + legendItems[i] + '</li>';
                }
                legend += '</ul>';
            }

            return legend;
        },

        PastPurchases: function () {
            if (typeof ShopdataUI.data == 'undefined') {
                $('#pastPurchases').hide();
            }
            $('#pastPurchases').click(function () {
                $('#customer-past-purchases').remove();
                $.ajax({
                    global: false,
                    cache: true,
                    url: shopCartUI.baseURL + 'index.php/main/pastPurchases',
                    dataType: 'html',
                    success: function (data) {
                        shopCartUI.openModal('modal-lg', '<i class="fa fa-clock-o"></i> Past Purchases', data, 'pastPurcahsesModal');
                    },
                    error: function () {
                        $('#pastPurchases').html('Purchase History').prop('disabled', false).css({
                            'background': '#B5B5B5',
                            'color': '#ffffff'
                        });
                        shopCartUI.openModal('', 'Error', 'Failed to load past purchases');
                    },
                    beforeSend: function () {
                        $('#pastPurchases').html('<i class="fa fa-gear fa-spin"></i> Loading...').prop('disabled', true).css({
                            'background': '#DB2C27',
                            'color': '#ffffff'
                        });
                    },
                    complete: function () {
                        $('#pastPurchases').html('Purchase History').prop('disabled', false).css({
                            'background': '#B5B5B5',
                            'color': '#ffffff'
                        });
                    }
                });
            });
        },

        /* STARTING HFC EMAIL TEMPLATE BUILDER */
        EmailBuilderInit: function () {
            $('body').on('click', '#prefill li', function (event) {
                event.preventDefault();
                var insert = $(this).data('insert');
                var insertAt = htmlInputEditor.getCaretCharacterOffsetWithin(document.getElementById("customEmailTemplateBox"));
                var currentValue = $('#customEmailTemplateBox').html();
                if (insertAt == 0 && currentValue.length > 0) {
                    insertAt = currentValue.length + 1;
                }

                var firstHalfOfValue = currentValue.substring(0, (insertAt));
                var secondHalfOfValue = currentValue.substring((insertAt), (currentValue.length));

                var newValue = firstHalfOfValue + insert + secondHalfOfValue;
                var cursorPosition = (firstHalfOfValue + insert).length;

                htmlInputEditor.setInputValue('customEmailBody', newValue);


                htmlInputEditor.setCurrentCursorPosition('customEmailTemplateBox', cursorPosition);
            });

            $('#email-body-editor').change();
            $('#templateSubject').focus();
            shopCartUI.EmailBuilderSave();
        },
        EmailBuilderDestroy: function () {
            $('body').off('click', '#prefill li');
            $('body').off(shopCartUI.clickEventToUse, '#saveEmailTemplate');
        },

        EmailBuilderOpen: function () {
            shopCartUI.CloseSideMenu();
            $.ajax({
                global: true,
                url: shopCartUI.baseURL + 'index.php/main/email_template',
                dataType: 'html',
                success: function (data) {
                    var buttons = [
                        {
                            id: 'saveEmailTemplate',
                            name: 'Save',
                            class: 'btn btn-default',
                            data: '',
                        },
                    ];

                    shopCartUI.openModal('modal-lg', '<i class="fa fa-envelope"></i> Custom Email Template', data, 'customEmailTemplate', buttons);
                    shopCartUI.EmailBuilderInit();

                    htmlInputEditor.init({
                        maxLength: 1000,
                        inputClasses: 'form-control',
                        showCounterError: true,
                        inputId: 'customEmailTemplateBox',
                        textareaId: 'email-body',
                        addURLButton: false,
                    });
                },
                error: function () {
                    shopCartUI.displayMsg('Failed to load email template page');
                },
            });
        },

        EmailBuilderSave: function () {
            $('body').on('click', '#saveEmailTemplate', function () {
                var body = $('#email-body').val();
                var subject = $('#templateSubject').val();
                $.ajax({
                    global: true,
                    url: shopCartUI.baseURL + 'index.php/main/save_email_template',
                    dataType: 'json',
                    type: 'post',
                    data: {body: body, subject: subject},
                    success: function (data) {
                        if (data.success == false) {
                            $('#customEmailTemplate .row .col-lg-9').append('<div class="alert alert-danger"><i class="fa fa-times-circle-o"></i> ' + data.msg + '</div>');
                        } else {
                            $('#customEmailTemplate').modal('hide');
                        }
                    },
                    error: function () {
                        shopCartUI.displayMsg('Failed to save email template page');
                    },
                    beforeSend: function () {
                        $('#customEmailTemplate .alert').remove();
                    }
                });
            });
        },
        /* ENDING HFC EMAIL TEMPLATE BUILDER */

        /* STARTING HFC QUICK SEARCH FUNCTIONALITY */
        QuickSearchDropDown: function () {
            var availableTags = $('#popularSearchTerms').find('option').map(function () {
                return this.value;
            }).get();

            $('#txtWord, #txtWord2').autocomplete({
                source: availableTags,
                minLength: 0,
                select: function (event, ui) {
                    $("#txtWord, #textWord2").val(ui.item.label);
                    //$('.cmdSearchSKU').trigger('click');
                }
            }).on('focus', function () {
                $(this).keydown();
            });
        },
        QuickSearchInit: function () {
            $('body').on(shopCartUI.clickEventToUse, '#addSearchTerm', function () {
                shopCartUI.QuickSearchAddTerm();
            });
            $('body').on(shopCartUI.clickEventToUse, '.removeSearchTerm', function () {
                var elem = $(this);
                shopCartUI.QuickSearchDeleteTerm(elem);
            });

            $('body').on(shopCartUI.clickEventToUse, '#addNewSearchTerm', function () {
                shopCartUI.QuickSearchToggleInputState('open');
            });
        },
        QuickSearchDestroy: function () {
            $('body').off(shopCartUI.clickEventToUse, '.ui-dialog-titlebar-close');
            $('body').off(shopCartUI.clickEventToUse, '#addSearchTerm');
            $('body').off(shopCartUI.clickEventToUse, '.removeSearchTerm');
            $('body').off(shopCartUI.clickEventToUse, '#addNewSearchTerm');
            $('#hfcQuickSearchContainer').remove();
            $('#hfcQuickSearch').removeClass('opened');
        },

        QuickSearchScreen: function () {
            $('#hfcQuickSearch').click(function () {
                shopCartUI.QuickSearchInit();
                var elem = $(this);
                shopCartUI.CloseSideMenu();

                $.ajax({
                    global: true,
                    cache: true,
                    url: shopCartUI.baseURL + 'index.php/main/loadQuickSearch',
                    dataType: 'html',
                    success: function (data) {
                        shopCartUI.openModal('modal-md', '<i class="fa fa-search-plus"></i> Quick Search Settings', data, 'quickSearchWindow');
                    },
                    error: function () {
                        shopCartUI.openModal('', 'Error', 'Failed to open quick search settings');
                        elem.prop('disabled', false);
                    },
                    beforeSend: function () {
                        elem.html('<i class="fa fa-gear fa-spin"></i> Loading...').prop('disabled', true);
                    },
                    complete: function () {
                        elem.html('<i class="fa fa-search fa-fw"></i> Quick Search').prop('disabled', false);
                    }
                });
            });
        },

        QuickSearchAddTerm: function () {
            var term = $('#inputSearchTerm').val();
            $('#quickSearchFeedback').remove();
            if (term.length > 2) {
                var count = $('#addedTerms .row').length + 1;
                if (count < 9) {
                    $.ajax({
                        cache: true,
                        data: {'term': term},
                        url: shopCartUI.baseURL + 'index.php/main/addQuickSearchTerm',
                        dataType: 'json',
                        type: 'post',
                        success: function (data) {
                            if (data.success) {
                                var dbTerm = data.term.toUpperCase();
                                var termHtml = '';
                                termHtml += '<div class="row light-bottom-border">';
                                termHtml += '<div class="col-xs-1" style="line-height: 2em;">';
                                termHtml += count + ')';
                                termHtml += '</div>';
                                termHtml += '<div class="col-xs-7" style="line-height: 2em;">';
                                termHtml += dbTerm;
                                termHtml += '</div>';
                                termHtml += '<div class="col-xs-4">';
                                termHtml += '<button id="remove_' + count + '" data-term="' + dbTerm + '"  style="margin-top:5px;margin-bottom:5px;" class="btn btn-danger btn-sm removeSearchTerm pull-right"><i class="fa fa-times-circle"></i> Remove</button>';
                                termHtml += '<div class="clearfix"></div>';
                                termHtml += '</div>';
                                termHtml += '</div>';

                                $('#addedTerms').append(termHtml);

                                $('#inputSearchTerm').val('');
                                shopCartUI.QuickSearchToggleInputState('close');
                                shopCartUI.QuickSearchTermDropdownManagement();
                            } else {
                                shopCartUI.QuickSearchTermFeedback(false, data.msg);
                            }
                            $("#inputSearchTerm").blur();
                        },
                        error: function () {
                            $('#inputSearchTerm').prop('disabled', false);
                            $('#addSearchTerm').html('<i class="fa fa-plus"></i> Add').prop('disabled', false);
                            shopCartUI.QuickSearchTermFeedback(false, 'There was an error processing the request, try again. If the problem persists please contact support.');
                        },
                        beforeSend: function () {
                            $('#inputSearchTerm').prop('disabled', true);
                            $('#addSearchTerm').html('<i class="fa fa-gear fa-spin"></i> Adding').prop('disabled', true);
                        },
                        complete: function () {
                            $('#inputSearchTerm').prop('disabled', false);
                            $('#addSearchTerm').html('<i class="fa fa-plus"></i> Add').prop('disabled', false);
                        }
                    });
                } else {
                    shopCartUI.QuickSearchTermFeedback(false, 'You can only have a maximum of 8 terms.');
                }
            } else {
                shopCartUI.QuickSearchTermFeedback(false, 'Search term must be at least 4 characters.');
            }
        },
        QuickSearchDeleteTerm: function (elem) {
            if (elem) {
                var id = $(elem).attr('id');
                var term = $(elem).data('term');
                $('#quickSearchFeedback').remove();
                if (id && term) {
                    $.ajax({
                        cache: true,
                        data: {'id': id, 'term': term},
                        url: shopCartUI.baseURL + 'index.php/main/removeQuickSearchTerm',
                        dataType: 'json',
                        type: 'post',
                        success: function (data) {
                            if (data.success != true && data.msg != 'The search term you are trying to delete was not found.') {
                                shopCartUI.QuickSearchTermFeedback(false, data.msg);
                            } else {
                                $('#' + id).closest('.row').remove();
                                var count = 1;
                                $('#addedTerms .row').each(function () {
                                    $(this).find('.col-xs-1').html(count + ')');
                                    count++;
                                });
                            }
                            shopCartUI.QuickSearchTermDropdownManagement();
                        },
                        error: function () {
                            $('#' + id).html('<i class="fa fa-times-circle"></i> Remove').prop('disabled', false);
                            shopCartUI.QuickSearchTermFeedback(false, 'There was an error processing the request, try again. If the problem persists please contact support.');
                        },
                        beforeSend: function () {
                            $('#' + id).html('<i class="fa fa-gear fa-spin"></i> Removing').prop('disabled', true);
                        },
                        complete: function () {
                            $('#' + id).html('<i class="fa fa-times-circle"></i> Remove').prop('disabled', false);
                        }
                    });
                } else {
                    shopCartUI.QuickSearchTermFeedback(false, 'There was an error processing the request, try again. If the problem persists please contact support.');
                }
            }
            return false;

        },
        QuickSearchTermFeedback: function (success, msg) {
            if ($('#quickSearchFeedback').length > 0) {
                $('#quickSearchFeedback').remove();
            }
            if (typeof feedback != 'undefined') {
                clearTimeout(timer);
            }
            if (success) {
                var icon = '<i class="fa fa-check-circle"></i> ';
                var color = 'alert-success';
                var timer = 3000;
            } else {
                var icon = '<i class="fa fa-exclamation-triangle"></i> ';
                var color = 'alert-danger';
                var timer = 5000;
            }

            var errorHtml = '<div id="quickSearchFeedback"><div style="margin-top:10px;" class="alert ' + color + '">' + icon + ' ' + msg + '</div>';
            $('#inputRow').after(errorHtml);

            feedback = setTimeout(function () {
                $('#quickSearchFeedback').slideUp('fast', function () {
                    $('#quickSearchFeedback').remove();
                });
            }, timer);

        },

        QuickSearchTermDropdownManagement: function () {
            $.ajax({
                global: false,
                url: shopCartUI.baseURL + 'index.php/main/loadQuickSearch',
                dataType: 'json',
                data: {'json': true},
                type: 'post',
                success: function (data) {
                    var options = '';
                    for (var i in data) {
                        options += '<option value="' + data[i] + '"></option>';
                    }
                    $('#popularSearchTerms select').html(options);
                    shopCartUI.QuickSearchDropDown();
                },
            });
        },

        delInstructionsAddPhone: function () {
            $('body').on('click', '#delInstructionsAddPhone', function (event) {
                event.preventDefault();

                var inputId = "CUSTCNTPH";
                var inputName = "CUSTCNTPH";
                var selectBox = $(this).closest('.input-group').find('select');
                var inputBox = $(this).closest('.input-group').find('input');
                $('#CUSTCNTPH').addClass('hide');
                if ($(this).hasClass('showing')) {
                    $(this).html('<i class="fa fa-plus"></i>').removeClass('showing');
                    $(selectBox).attr('name', inputName).attr('id', inputId);
                    $(inputBox).attr('name', '').attr('id', '');
                } else {
                    $(this).html('<i class="fa fa-minus"></i>').addClass('showing');
                    $(inputBox).attr('name', inputName).attr('id', inputId).addClass('hide');
                    $(selectBox).attr('name', '').attr('id', '');
                    $('.maskMe').mask('(000) 000-0000');
                }
                $('#CUSTCNTPH').removeClass('hide');
            });
        },

        CustomJqueryUIAutoComplete: function () {
            $.widget('custom.mcautocomplete', $.ui.autocomplete, {
                _renderMenu: function (ul, items) {
                    var self = this,
                        thead;

                    if (this.options.showHeader) {
                        table = $('<div class="ui-widget-header" style="width:100%"></div>');
                        $.each(this.options.columns, function (index, item) {
                            table.append('<span style="padding:0 4px;float:left;width:' + item.width + ';">' + item.name + '</span>');
                        });
                        table.append('<div style="clear: both;"></div>');
                        ul.append(table);
                    }
                    $.each(items, function (index, item) {
                        self._renderItem(ul, item);
                    });
                },
                _renderItem: function (ul, item) {
                    var t = '',
                        result = '';
                    $.each(this.options.columns, function (index, column) {
                        t += '<span style="padding:0 4px;float:left;width:' + column.width + ';">' + item[column.valueField ? column.valueField : index] + '</span>'
                    });

                    result = $('<li></li>').data('item.autocomplete', item).append('<a class="mcacAnchor">' + t + '<div style="clear: both;"></div></a>').appendTo(ul);
                    return result;
                }
            });
        },
        QuickSearchToggleInputState: function (state) {
            if (state == 'open') {
                $('#inputRow').slideDown('fast', function () {
                    $('#addNewSearchTerm').slideUp('fast');
                });

            } else {
                $('#inputRow').slideUp('fast', function () {
                    $('#addNewSearchTerm').slideDown('fast');
                });
            }
        },
        /* ENDING HFC QUICK SEARCH FUNCTIONALITY */



        /* STARTING HFC Custom Order Functionality */
        CustomSofaOrderInit: function () {
            $('body').on('click', '.ui-dialog-titlebar-close', function () {
                shopCartUI.CustomSofaOrderDestroy();
            });
            $('body').on('click', '.custom-sofa-option', function () {
                if (!$('#sofaBuilder').hasClass('opening')) {
                    shopCartUI.CustomOrderSelection($(this));
                }
            });
            $('body').on('click', '.editSofaStyle', function () {
                shopCartUI.EditCustomOrderSelection($(this));
            });
            $('body').on('click', '#addToCartCustomItem', function () {
                shopCartUI.AddCustomOrderToCart($(this));
            });
        },

        CustomSofaOrderDestroy: function () {
            $('.forceFull, #customSofaContainer').remove();
            $('.slickSlider ').slick('unslick');

            $('body').off('click', '.ui-dialog-titlebar-close');
            $('body').off('click', '.custom-sofa-option');
            $('body').off('click', '.editSofaStyle');
            $('body').off('click', '#addToCartCustomItem');
            $('#customSofaOrder').removeClass('opened');
        },

        CustomSofaOrder: function () {
            $('#customSofaOrder').click(function () {
                if (ShopdataUI.isCartReadOnly) {
                    shopCartUI.displayMsg('Invoice can not be maintained.');
                    return false;
                }

                shopCartUI.CustomSofaOrderInit();

                var elem = $(this);

                if (!$(elem).hasClass('opened')) {
                    $('#customSofaContainer').remove();
                    $.ajax({
                        url: shopCartUI.baseURL + 'index.php/main/loadCustomSofaOrder',
                        dataType: 'json',
                        type: 'post',
                        data: {'GREETING_ID': ShopdataUI.data.SDGREETID},
                        success: function (data) {
                            //$('.opened').append(data);
                            if (data.success) {
                                shopCartUI.openModal('modal-lg', 'Custom Order', data.data.view, 'customSofaOrderWindow');
                            } else {
                                shopCartUI.handleFailedAjaxCall(data);
                            }
                        },
                        error: function () {
                            alert('Failed to load customization window');
                            elem.prop('disabled', false);
                            shopCartUI.loadingOff();
                            shopCartUI.CloseSideMenu();
                        },
                        beforeSend: function () {
                            elem.html('<i class="fa fa-gear fa-spin"></i> Loading...').prop('disabled', true);
                        },
                        complete: function () {
                            shopCartUI.CloseSideMenu();
                            elem.html('<i class="fa fa-universal-access fa-fw"></i> Customization').prop('disabled', false);
                        }
                    });
                }
            });
        },

        EditCustomOrderSelection: function (element) {
            var editId = $(element).attr('id').split('_');
            if (!$('#' + editId[1]).is(':visible')) {
                $('#sofaBuilder .row').each(function () {
                    var id = $(this).attr('id');

                    if (typeof id != 'undefined') {
                        if ($('#' + id).is(':visible')) {
                            $(this).slideToggle("slow");
                        }
                    }
                });
            }

            var nextSection = $(element).closest('.row').next().attr('id');            // grab the next section to check if it has a slider
            if ($('#' + nextSection).find('.slickSlider').length > 0 && $('#' + nextSection).find('.slick-initialized').length == 0) {
                $('#' + nextSection + 'Slider').slick({
                    centerMode: true,
                    centerPadding: '60px',
                    slidesToShow: 4,
                    slidesToScroll: 4,
                    infinite: true,
                    swipeToSlide: true,
                    accessibility: false,
                    prevArrow: '<button class="scrollButton leftSide"><i class="fa fa-chevron-left"></i></button>',
                    nextArrow: '<button class="scrollButton rightSide"><i class="fa fa-chevron-right"></i></button>',
                    responsive: [
                        {
                            breakpoint: 768,
                            settings: {
                                arrows: true,
                                centerMode: true,
                                centerPadding: '40px',
                                slidesToShow: 3
                            }
                        },
                        {
                            breakpoint: 480,
                            settings: {
                                arrows: true,
                                centerMode: true,
                                centerPadding: '40px',
                                slidesToShow: 1
                            }
                        }
                    ]
                });
                shopCartUI.FilterSlickSlider(nextIdName);
            } else if ($('#' + nextSection).find('.slick-initialized').length > 0) {
                $('#' + nextSection + 'Slider').slick("getSlick").refresh();
                shopCartUI.FilterSlickSlider(nextSection);
            }

            $('.selectionArea').addClass('editing');
            $('#' + editId[1]).slideToggle("slow");
        },

        CustomOrderSelection: function (elem) {
            if (!$(elem).hasClass('optionDisabled')) {
                $('#sofaBuilder').addClass('opening');
                $(elem).closest('.row').find('.custom-sofa-option').removeClass('optionSelected');
                $(elem).addClass('optionSelected');
                //shopCartUI.CustomSofaCalculateSubtotal();
                $(elem).closest('.row').prev().find('.selectedValueDisplay').remove();
                $(elem).closest('.row').prev().find('h2').after('<div class="selectedValueDisplay" style="float:left">(' + $(elem).data("name") + ')</div>');
                if ($(elem).hasClass('sizeSelection')) {
                    var sofaSize = $(elem).data('size');
                    $('#customOrderSize').val(sofaSize);

                    var orderType = $('#customOrderType').val();
                    if ((orderType == 'sofa' && $(elem).data('size') == 'chair') || (orderType == 'chair' && $(elem).data('size') != 'chair')) {
                        shopCartUI.RestartCustomOrder();
                    }

                    if (sofaSize == 'chair') {
                        $('#customOrderSleeper').val('none');
                        $('#customOrderType').val(sofaSize);
                        shopCartUI.toggleCustomOrderOptions('hide');
                    } else {
                        $('#customOrderType').val('sofa');
                        shopCartUI.toggleCustomOrderOptions('show');
                    }
                } else if ($(elem).hasClass('sleeperSelection')) {
                    $('#customOrderSleeper').val($(elem).data('sleeper'));
                } else if ($(elem).hasClass('pillowSelection')) {
                    $('#customOrderPillow').val($(elem).data('pillow'));
                } else if ($(elem).hasClass('textureColor')) {
                    $('#customOrderTextureColor').val($(elem).data('texture'));
                }

                var selectedSizes = shopCartUI.GetFrameSizeCustomOrder($('.sizeSelection.optionSelected').data('size'), $('.armSelection.optionSelected').data('arm'));
                $('#customOrderSize').val(selectedSizes);

                var size = selectedSizes != '' ? selectedSizes : '00';
                var texture = $('.textureColor.optionSelected').data('texture') != '' ? $('.textureColor.optionSelected').data('texture') : '00';
                var pillow = $('.pillowSelection.optionSelected').data('pillow') != '' ? $('.pillowSelection.optionSelected').data('pillow') : '00';

                if (texture) {
                    var imgSize = 'lg';
                    switch ($('.sizeSelection.optionSelected').data('size')) {
                        case 0:
                            imgSize = 'sm';
                            break;
                        case 1:
                            imgSize = 'md';
                            break;
                        case 2:
                            imgSize = 'lg';
                            break;
                        default:
                            imgSize = 'lg';
                            break;
                    }
                    if ($('#customOrderType').val() == 'chair') {
                        size = 11;
                        var chairStyle = $('.chairSelection.optionSelected').data('type') != '' ? $('.chairSelection.optionSelected').data('type') : '00';
                        $('#customOrderSize').val(chairStyle);
                        var img = 'http://s7d4.scene7.com/is/image/ASF/KSO_ImageConfigurator?$pillowImgSrc=ASF/8000009_' + imgSize + '&$baseImgSrc=ASF/8' + chairStyle + '00' + texture + '&layer=2&hide=true&qlt=60,1';
                    } else {
                        var img = 'http://s7d4.scene7.com/is/image/ASF/KSO_ImageConfigurator?$pillowImgSrc=ASF/80000' + pillow + '_' + imgSize + '&$baseImgSrc=ASF/8' + size + texture + '00&qlt=60,1';
                    }
                    $('#finalImgPreview').attr('src', img);
                    $('.finalStep').html('<br><button id="addToCartCustomItem" class="button_red_bordered">Add Custom Order</button><br><br>');
                } else {
                    $('#finalImgPreview').attr('src', '');
                }

                shopCartUI.SortViewCustomOrder($(elem).data('section'));
            }
        },

        RestartCustomOrder: function () {
            $i = 0;
            $('.selectionArea').each(function () {
                if ($i > 0) {
                    $(this).find('.optionSelected').removeClass('optionSelected');
                    $(this).prev().find('.selectedValueDisplay').remove();
                }
                $i++;
            });
            $('.selectionArea').removeClass('editing');
            $('.editSofaStyle').addClass('hide');
        },

        AddCustomOrderToCart: function (elem) {
            var data = $('#customSofaOrderForm').serialize() + '&GREETING_ID=' + ShopdataUI.data.SDGREETID;
            $.ajax({
                data: data,
                type: 'post',
                dataType: 'json',
                url: shopCartUI.baseURL + 'index.php/main/saveCustomSofaOrder',
                success: function (data) {
                    if (data.success == true) {
                        $('#customSofaOrderWindow').modal('hide');
                        shopCartUI.updateAppSections('shoppingCartSection');
                    } else {
                        $('.finalStep').append('<div id="customOrderFeedback" class="alert alert-primary"><i class="fa fa-exclamation-triangle"></i> ' + data.msg + '</div>');
                    }
                },
                error: function () {
                    $('.finalStep').append('<div id="customOrderFeedback" class="alert alert-primary"><i class="fa fa-exclamation-triangle"></i> Customer order failed to save, try again!</div>');
                },
                beforeSend: function () {
                    $('.editSofaStyle').addClass('hide');
                    $('#customOrderFeedback').remove();
                    elem.html('<i class="fa fa-gear fa-spin"></i> Saving Order...').prop('disabled', true);
                },
                complete: function () {
                    $('.editSofaStyle').removeClass('hide');
                    elem.html('Add Custom Order').prop('disabled', false);
                }
            });
        },

        toggleCustomOrderOptions: function (showing) {
            if (showing == 'hide') {
                $('#sofaStyles, #sleeperStyles, #pillowStyles').addClass('skip');
                $('#sofaStyles, #sleeperStyles, #pillowStyles').prev().addClass('skip');

                $('#sofaStyles .custom-sofa-option').removeClass('optionSelected');

                $('#customOrderSleeper').val();
                $('#sleeperStyles .custom-sofa-option').removeClass('optionSelected');

                $('#customOrderPillow').val();
                $('#pillowStyles .custom-sofa-option').removeClass('optionSelected');

                $('#chairStyles').removeClass('skip');
                $('#chairStyles').prev().removeClass('skip');

            } else {
                $('#sofaStyles, #sleeperStyles, #pillowStyles').removeClass('skip');
                $('#sofaStyles, #sleeperStyles, #pillowStyles').prev().removeClass('skip');

                $('#chairStyles').addClass('skip');
                $('#chairStyles').prev().addClass('skip');
                $('#customChairStyle').val();
            }
        },

        GetFrameSizeCustomOrder: function (size, arms) {
            if (typeof arms == 'undefined') {
                return size;
            }
            var sizeShown = '';
            //Todo: Should change this once we know more about how to do this
            if (size >= 0 && arms) {
                var armValues = {
                    'bailey': ['20', '21', '22'],
                    'track': ['29', '30', '31'],
                    'avery': ['38', '39', '40'],
                };

                if (arms == 'chair') {
                    sizeShown = '30';
                } else {
                    sizeShown = armValues[arms][size];
                }

            }

            return sizeShown;
        },

        FilterSlickSlider: function (nextIdName) {
            $('#' + nextIdName + 'Slider').slick('slickUnfilter');
            if ($('#' + nextIdName).find('.slickSlider').attr('id') == 'textureStylesSlider') {
                if ($('#customOrderType').val() == 'sofa') {
                    $('#' + nextIdName + 'Slider').slick('slickFilter', '.ALL');
                } else if ($('#customOrderType').val() == 'chair') {
                    $('#' + nextIdName + 'Slider').slick('slickUnfilter');
                }
            }
        },

        SortViewCustomOrder: function (openSelection) {
            var available = [];
            $('.selectionArea').each(function () {
                if (!$(this).hasClass('skip')) {
                    available.push($(this).attr('id'));
                }
            });

            var currentSelection = available.indexOf(openSelection);
            var nextIdName = available[currentSelection + 1];
            $('#' + openSelection).slideToggle();

            if ($('.selectionArea').hasClass('editing')) {
                nextIdName = available[available.length - 1];
            }
            $('#' + nextIdName).slideToggle("slow", function () {                // hide current section and run following when complete
                if ($('#' + nextIdName).find('.slickSlider').length > 0 && $('#' + nextIdName).find('.slick-initialized').length == 0) {

                    $('#' + nextIdName + 'Slider').slick({
                        centerMode: true,
                        centerPadding: '60px',
                        slidesToShow: 4,
                        slidesToScroll: 4,
                        infinite: true,
                        swipeToSlide: true,
                        prevArrow: '<button class="scrollButton leftSide"><i class="fa fa-chevron-left"></i></button>',
                        nextArrow: '<button class="scrollButton rightSide"><i class="fa fa-chevron-right"></i></button>',
                        responsive: [
                            {
                                breakpoint: 768,
                                settings: {
                                    arrows: true,
                                    centerMode: true,
                                    centerPadding: '40px',
                                    slidesToShow: 3
                                }
                            },
                            {
                                breakpoint: 480,
                                settings: {
                                    arrows: true,
                                    centerMode: true,
                                    centerPadding: '40px',
                                    slidesToShow: 1
                                }
                            }
                        ]
                    });

                    shopCartUI.FilterSlickSlider(nextIdName);

                } else if ($('#' + nextIdName).find('.slick-initialized').length > 0) {
                    $('#' + nextIdName + 'Slider').slick("getSlick").refresh();
                    shopCartUI.FilterSlickSlider(nextIdName);
                }
            });

            if (nextIdName == 'finalCustomStep') {
                $('.editSofaStyle').removeClass('hide');
            }
            $('#sofaBuilder').removeClass('opening');
        },
        /* ENDING HFC Custom Order Functionality */

        addAdditionalPhoneEntries: function () {
            $('body').on('click', '.addAdditionalPhone', function (event) {
                event.preventDefault();
                $('#addPhoneError').remove();
                var isShipping = false;

                if ($(this).hasClass('isShipping')) {
                    var phone = $('#SCSHPPHON2').val();
                    var phoneType = $('#SCSHPPTYP2').val();
                    $('#shipAddress .insertAdditionalPhones').find('.customerInputError').remove();
                    isShipping = true;
                } else {
                    var phone = $('#SDCUSPHON2').val();
                    var phoneType = $('#SDCUSPTYP2').val();
                    $('#profileInfo .insertAdditionalPhones').find('.customerInputError').remove();
                }
                var error = '';
                var preferredOption = $(this).closest('.row').find('.primaryLabelInput');
                var preferredSelected = '';

                if (preferredOption.hasClass('primaryLabelInputSelected')) {
                    preferredOption.removeClass('primaryLabelInputSelected');
                    preferredSelected = 'primaryLabelInputSelected';
                }

                var phoneStriped = phone.replace(/\D/g, '');
                $('#pullPhoneNumbers .additionalPhone ').each(function () {
                    if ($(this).attr('data-phone') == phoneStriped) {
                        error = 'Phone number already added';
                        return false;
                    }
                });

                if (error == '') {
                    if (phoneType != '' && phoneStriped.length == 10) {
                        if (phone != '' && phoneType != '') {
                            var typeLabels = {
                                C: 'Cell',
                                W: 'Work',
                                H: 'Home',
                                O: 'Cell/No Text',
                            };
                            var phoneInput = '<div class="row ' + phoneType + phoneStriped + '" style="border-top: 1px solid #ccc; padding-top: 15px;">';
                            phoneInput += '<div class="col-xs-3 text-right">';
                            phoneInput += '<label>Phone:<br>';
                            phoneInput += '<div class="primaryLabelInput ' + preferredSelected + '" data-type="' + phoneType + '" data-value="' + phone.replace(/\D/g, '') + '">';
                            phoneInput += 'Preferred';
                            phoneInput += '</div></label>';
                            phoneInput += '</div>';
                            phoneInput += '<div class="col-xs-9 additionalPhone" data-phone="' + phoneStriped + '" data-type="' + phoneType + '">';
                            phoneInput += '<span class="phoneNumber">' + phone.replace(' ', '&nbsp;');
                            +'</span>';
                            phoneInput += '<span class="phoneLabel"> - ' + typeLabels[phoneType] + '</span>';
                            phoneInput += '<button class="removePhoneNumber btn btn-danger pull-right "><i class="fa fa-minus"></i></button>';
                            phoneInput += '<div class="clearfix"></div>';
                            phoneInput += '</div>';
                            phoneInput += '</div>';

                            $('.additionalPhonesNumbers').append(phoneInput);
                            $('.insertAdditionalPhones').find('.buttonActive').removeClass('buttonActive');

                            if (isShipping == true) {
                                $('#SCSHPPHON2').val('');
                                $('#SCSHPPTYP2').val('');
                            } else {
                                $('#SDCUSPHON2').val('');
                                $('#SDCUSPTYP2').val('');
                            }
                        } else {
                            error = 'Phone number and type is required';
                        }
                    } else {
                        error = 'Phone number and type is required';
                    }
                }

                if (error != '') {
                    var code = '<div id="addPhoneError" class="row" style="margin-bottom: 15px;">';
                    code += '<div class="col-sm-9 col-xs-9 col-xs-offset-3"><div class="text-danger"><i class="fa fa-exclamation-triangle"></i> ' + error + '</span></div>';
                    code += '</div></div>';
                    if (isShipping) {
                        $('#SCSHPPHON2').closest('.row').after(code);
                    } else {
                        $('#SDCUSPHON2').closest('.row').after(code);
                    }
                }
            });

            shopCartUI.removeAdditionalPhoneEntries();
        },

        removeAdditionalPhoneEntries: function () {
            $('body').on('click', '.removePhoneNumber', function (event) {
                event.preventDefault();
                var phone = $(this).closest('.additionalPhone').attr('data-phone');
                var type = $(this).closest('.additionalPhone').attr('data-type');

                $('.' + type + phone).remove();
            });
        },

        openDeliveryInstructions: function (hideCloseButtons, changed) {
            $.ajax({
                global: true,
                cache: false,
                type: 'post',
                data: {changed: changed, GREETING_ID: ShopdataUI.data.SDGREETID},
                url: shopCartUI.baseURL + 'index.php/main/loadCustomerDeliveryInstructions',
                dataType: 'json',
                success: function (data) {
                    if (data.success) {
                        var buttons = [
                            {
                                id: 'saveDeliveryInstructions',
                                name: 'Save',
                                class: 'btn btn-default',
                                data: '',
                            },
                        ];
                        var label = ShopdataUI.data.SCDELTYPE == 'D' ? 'Delivery Instructions' : 'Pickup Instructions';
                        shopCartUI.openModal('modal-lg', '<i class="fa fa-truck"></i> ' + label, data.data.view, 'deliveryInstructionsWindow', buttons, hideCloseButtons);
                        deliveryInstructions.init();
                        // Added this because the ajax call that calls this from the scheduler wasn't finihsing before it could update the Shopdata.data data fast enough
                        var label = $('#deliveryInstructionsForm').attr('data-deltype') == 'D' ? 'Delivery Instructions' : 'Pickup Instructions';
                        $('#deliveryInstructionsWindow #largeModalTitle').html('<i class="fa fa-truck"></i> ' + label);
                    } else {
                        shopCartUI.handleFailedAjaxCall(data);
                    }
                },
                error: function () {
                    alert('Failed to load delivery instructions Window');
                },
            });
        },

        saveDeliveryInstructions: function () {
            $('body').on('click', '#saveDeliveryInstructions', function () {
                var data = $('#deliveryInstructionsForm').serialize() + '&GREETING_ID=' + ShopdataUI.data.SDGREETID;

                $('#feedbackSection').html('');
                $('#sendOptInText').addClass('hide');
                $.ajax({
                    global: true,
                    cache: false,
                    url: shopCartUI.baseURL + 'index.php/main/saveDelInst',
                    data: data,
                    dataType: 'json',
                    type: 'post',
                    success: function (data) {
                        if (data.success) {
                            $('#deliveryInstructionsWindow').modal('hide');
                            shopCartUI.displayMsg(data.msg);
                            shopCartUI.updateAppSections();
                        } else {
                            $('#sendOptInText').addClass('hide');
                            $('#feedbackSection').html('<div class="alert alert-danger" style="margin-top:15px;"><i class="fa fa-exclamation-triangle"></i> ' + data.msg + '</div>');
                        }
                    },
                    error: function () {
                        alert('There was an error saving the delivery instructions. To keep you from being stuck in the window we are going to exit the customer. Please go to the kiosk to finish the delivery instructions page.');
                        $('#cmdExitCustomer').trigger('click');
                    },
                });
            });
        },

        uiDialogCloseButton: function () {
            $('body').delegate('.ui-dialog-titlebar-close', 'click', function () {
                var id = $(this).parent().next().attr('id');
                if (id) {
                    if (id != 'simpleCalculator') {
                        $('#' + id).dialog('destroy').remove();
                    }
                }
            });
        },

        viewMobileSearchOptions: function () {
            $('body').on('click', '#mobileSettingsView', function () {
                if ($('.mobileSlideDown').is(':visible')) {
                    $(this).html('<i class="fa fa-search-plus fa-fw"></i> View Search Options');
                    $('.mobileSlideDown').slideUp();
                } else {
                    $('.mobileSlideDown').slideDown();
                    $(this).html('<i class="fa fa-search-minus fa-fw"></i>  Hide Search Options');

                }
            });
        },

        checkScreenWidth: function () {
            var windowsize = $(window).width();
            var windowHeight = $(window).height();

            if (windowsize < 992) {
                if ($('#mobileShowCustomerButton .active').length == 0) {
                    $('#productInfoSection, #shoppingCartSection').addClass('hide');
                    $('#customerInfoSectionButton').addClass('active');
                }
                $('#productInfoSection, #shoppingCartSection').css('height', 'auto');
                $('body').css('overflow', 'auto');
                $('#mobileShowCustomerButton .active').trigger('click');
            } else {
                if ($('#mobileShowCustomerButton .active').length == 1) {
                    $('.mobileSlideDown').slideDown();
                    $(this).html('<i class="fa fa-search-minus fa-fw"></i>  Hide Search Options');
                }
                //$('#mobileShowCustomerButton button').removeClass('active');
                $('#customerInfoSection, #productInfoSection, #shoppingCartSection').removeClass('hide');
                $('#productInfoSection, #shoppingCartSection').height(($(window).height() - $('#headOptions').height() - 50));
            }
            $('#txtWord').blur();
            $('body').scrollTop();

            if (windowsize < windowHeight) {
                $('#turnScreenWindow').removeClass('hide');
            } else {
                $('#turnScreenWindow').addClass('hide');
            }

            return windowsize;
        },

        mobileViewControllers: function () {
            $('body').on('click', '#mobileShowCustomerButton button', function () {
                var section = $(this).data('section');
                $('#customerInfoSection, #productInfoSection, #shoppingCartSection').addClass('hide');
                $('#' + section).removeClass('hide');
                $('#mobileShowCustomerButton button').removeClass('active');
                $(this).addClass('active');
            });
        },

        openModal: function (size, title, content, id, buttons, noCloseButton, legend) {
            $('#' + id).remove();
            $('body').attr('style', '');
            var buttonsHtml = '';
            var footerLegend = typeof legend != 'undefined' ? legend : '';

            if (buttons) {
                var buttonEXAMPLE = [
                    {
                        id: 'send',
                        name: 'Send',
                        class: 'btn-btn-danger',
                        data: '',
                    },
                ];
                for (var button in buttons) {
                    if (buttons[button].name) {
                        buttonsHtml += '<button id="' + buttons[button].id + '" class="' + buttons[button].class + '" ' + buttons[button].data + '>' + buttons[button].name + '</button>';
                    }
                }
            }
            var showCloseBtn = noCloseButton == true ? 'hide' : '';
            var zIndex = 1050 + $('#modalArea .modal').length;
            var largeModel = '' +
                '<div class="modal fade-scale" style="z-index:' + zIndex + '" id="' + id + '" tabindex="-1" role="dialog" aria-labelledby="largeModal">' +
                '<div class="modal-dialog ' + size + '" role="document">' +
                '<div class="modal-content">' +
                '<div class="modal-header">' +
                '<button type="button" class="close ' + showCloseBtn + '" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
                '<h4 class="modal-title pull-left" id="largeModalTitle">' + title + '</h4>';
        				if(id == 'customerListView')
        				{
        					largeModel += '<div id="customer-search" class="pull-right">' +
        										'<div class="input-group pull-left">' +
        											'<input type="text" id="customer-search-input" class="form-control input-sm" placeholder="Search Name or Quote">' +
        											'<span class="input-group-addon"><i class="fa fa-search"></i></span>' +
        										'</div>' +
        								'</div>' +
        								'<select id="customer-sort-input" class="form-control pull-right input-sm"><option value="desc">Newest to Oldest</option><option value="asc">Oldest to Newest</option></select>';
        				}
                largeModel += '</div>' +
                '<div class="modal-body">' +
                content +
                '</div>' +
                '<div class="modal-footer">' +
                footerLegend +
                buttonsHtml +
                '<button id="closeModalWindow" class="btn btn-default ' + showCloseBtn + '" data-dismiss="modal">Close</button>' +
                '</div>' +
                '</div>' +
                '</div>' +
                '</div>';
            $('#modalArea').append(largeModel);
            $('#' + id).modal({
                show: true,
                backdrop: 'static',
                keyboard: false
            });
            $('body').addClass('modal-open');
        },

        closeModal: function () {
            $(document).on('hidden.bs.modal', '.modal', function (event) {
                if ($('#modalArea .modal').length < 2) {
                    $('#modalArea').html('');
                } else {
                    $('.modal').css('overflow-y', 'scroll');
                }
                $('body').removeClass('modal-open');
                $('#customerListSection li').removeClass('active');
                $('#' + this.id).remove();

                if ($('.modal-dialog').length == 0) {
                    $('.modal-backdrop').remove();
                }

                shopCartUI.CustomSofaOrderDestroy();
                shopCartUI.QuickSearchDestroy();
                htmlInputEditor.destroy();
                deliveryInstructions.destroyDeliveryInstructions();
                ShopdataUI.destroyDeliveryWindow();
                shopCartUI.destroyHeaderCharges();
                shopCartUI.EmailBuilderDestroy();
            });
        },

        /*
        THIS WAS ADDED WHEN WE ADDED THE BEDDING WARRANTIES. WE NEEDED A WAY TO SHOW THE ADD TO CART BUTTON ON THE
        ITEMS THAT WERE IN THE CART ALREADY BUT WASN'T SHOWING, THIS LOOKS AT EACH ITEM IN THE CART AND IF IT'S NOT
        SHOWING UP WE SHOW THE ADD CART.
     */
        showSkippedSkus: function () {
            var skippedSkus = $('#skippedSkus').attr('data-skipped');
            if (typeof skippedSkus != 'undefined' && skippedSkus != '' && $('#moreOptionSection .skuBanner').length > 0) {

                $('#moreOptionSection .skuBanner').each(function () {
                    var sku = $(this).html();
                    sku = sku.replace('SKU#: ', '').trim();
                    if (skippedSkus.indexOf(sku) != -1) {
                        $(this).closest('.col-md-4').find('.addToCart').removeClass('hide');
                    }
                });
            }
        },

        purePromiseCheckBox: function () {
            $('body').on(shopCartUI.clickEventToUse, '.addPPPV', function (event) {
                event.preventDefault();
                if (ShopdataUI.checkForCustomerRecordLock() == false) {
                    var apply = '';

                    if ($(this).find('.switchCheckbox').is(':checked')) {
                        $(this).find('.switchCheckbox').attr('checked', false);
                        apply = 0;
                    } else {
                        $(this).find('.switchCheckbox').attr('checked', true);
                        apply = 1;
                    }
                    var data = $(this).closest('.shoppingCartItem').attr('data-item');
                    var type = $(this).attr('data-type');
                    var sku = $(this).closest('.itemData').find('.showProductInfoPage').attr('data-sku');
                    if (data) {
                        data = JSON.parse(data);
                        data.type = type;
                        data.apply = apply;
                        data.sku = sku;
                    }
                    shopCartUI.changeFabEpp(data);
                }
            });
        },

        switchPurePromiseButton: function () {
            $('body').on(shopCartUI.clickEventToUse, '#btnFurnitureCare', function (event) {
                event.preventDefault();
                if (ShopdataUI.checkForCustomerRecordLock() == false) {
                    shopCartUI.switchPP();
                }
            });
        },

        showMainWindow: function () {
            $('#mainWindow').removeClass('hide');
        },

        hideMainWindow: function () {
            $('#mainWindow').addClass('hide');
        },

        switchPrimaryContact: function () {
            $('body').on(shopCartUI.clickEventToUse, '.primaryLabelInput', function () {
                var elem = $(this);
                var primaryInputField = $(this).closest('.row').find('input')
                if (primaryInputField.attr('id') == 'SDCUSEMAIL') { // Emails
                    var value = primaryInputField.val();
                    var type = 'E';
                } else if (primaryInputField.attr('id') == 'SCSHPEMAIL') { // Emails
                    var value = primaryInputField.val();
                    var type = 'E';
                } else if (primaryInputField.attr('id') == 'SDCUSPHON1') { // Phone Inputs
                    var value = primaryInputField.val();
                    var type = $('#SDCUSPTYP1').val();
                } else if (primaryInputField.attr('id') == 'SDCUSPHON2') { // Phone Inputs
                    var value = primaryInputField.val();
                    var type = $('#SDCUSPTYP2').val();
                } else if (primaryInputField.attr('id') == 'SCSHPPHON1') { // Phone Inputs
                    var value = primaryInputField.val();
                    var type = $('#SCSHPPTYP1').val();
                } else if (primaryInputField.attr('id') == 'SCSHPPHON2') { // Phone Inputs
                    var value = primaryInputField.val();
                    var type = $('#SCSHPPTYP2').val();
                } else { // Additional Phones
                    var value = elem.attr('data-value');
                    var type = elem.attr('data-type');
                }

                elem.attr('data-type', type);
                elem.attr('data-value', value);

                if (value != '' && value.toUpperCase() != '*NONE') {
                    $('.primaryLabelInput').removeClass('primaryLabelInputSelected');
                    $('input.primaryContactInput').removeClass('primaryContactInput');

                    $('.primaryLabelInput').each(function () {
                        var elemValue = $(this).attr('data-value');
                        if (value == elemValue) {
                            $(this).addClass('primaryLabelInputSelected');
                            $(this).closest('.row').find('.form-control').addClass('primaryContactInput');
                        }
                    });
                } else {
                    $(this).closest('.primary').find('input').prop('checked', false);
                    shopCartUI.displayMsg('You must first add a value to the field before setting it as the preferred contact', 'Required Input');
                }
            });
        },


        /*
    -------------------------------
    -----PERSONALIZED LIVING-------
    -------------------------------
    */
        initPersonalizedLiving: function () {
            $('.optionsArea').each(function () {
                var settingName = $(this).find('.row').attr('id');
                $('#' + settingName).not('.slick-initialized').slick({
                    infinite: false,
                    slidesToShow: 4,
                    slidesToScroll: 4,
                    arrows: true,
                    focusOnSelect: false,
                    dots: true,
                });
            });
            shopCartUI.personalizedLivingScrollToSection();
            shopCartUI.selectPersonalizedLivingOption();
            shopCartUI.personalizedLivingItemPreview();
            shopCartUI.closeAddPersonalizedLivingModal();
            shopCartUI.savePersonalizedLivingItem();
            shopCartUI.removePersonalizedItem();
            shopCartUI.previewCartItem();
            shopCartUI.addAllItemsToTheCart();
            shopCartUI.removeSelectedPersonalizedLivingOption();
            shopCartUI.plDebugOption();
            shopCartUI.resetSelections();
        },

        personalizedLivingScrollToSection: function () {
            $('.personalizedLivingOption').click(function () {
                if (!$(this).hasClass('incompatible')) {
                    var section = $(this).attr('data-section');
                    $('.personalizedLivingOption').removeClass('active');
                    $(this).addClass('active');
                    $('html, body').animate({
                        scrollTop: $('#' + section).offset().top - 30
                    }, 400);
                }
            });
        },

        destroyPersonalizeLiving: function () {
            $('#personalizedLivingArea').html('').addClass('');
            $('body').off('click', '.savePersonalizedLivingItem');
            $('body').off('click', '.personalizedLivingOption');
            $('body').off('click', '.removePersonalizedItem');
            $('body').off('click', '.personalizedLivingCartItem');
            $('body').off('click', '#previewItem');
            $('body').off('click', '#closeAddPersonalizedLivingItem');
            $('body').off('click', '#personalizedLivingCard');
            $('body').off('click', '#savePersonalizedLivingCartItems');
            $('body').off('click', '#plDebugOption');
            $('body').off('click', '.optionTitle');
            $('body').off('click', '#resetSelections');

            $('#personalizedLivingArea').addClass('hide');

            $('#mainWindow').removeClass('hide');

            shopCartUI.personalizedLivingItemShow = true;
        },

        removePersonalizedItem: function () {
            $('body').on('click', '.removePersonalizedItem', function (event) {
                event.preventDefault();
                $(this).parent().remove();
                var currentCount = parseInt($('#cartItemCount').attr('data-count'));
                var newCount = currentCount - 1;
                if (newCount == 0) {
                    $('#cartItemCount').addClass('hide');
                }
                $('#cartItemCount').html(newCount).attr('data-count', newCount);
            });
        },

        resetSelections: function () {
            $('#resetSelections').click(function () {
                $('.slick-slider').slick('slickUnfilter');
                $('.personalizedLivingCard').removeClass('incompatible');
                $('.personalizedLivingCard').removeClass('deactive');
                $('.personalizedLivingCard').removeClass('optionSelected');
                $('#personalizedLivingOptionsArea .optionTitle').remove();
                $('#personalizedLivingOptions li .selected').remove();
                $('#personalizedLivingOptions li.incompatible').removeClass('incompatible');
                $('#personalizedLivingOptions li.active').removeClass('active');
            });
        },

        selectPersonalizedLivingOption: function () {
            $('.personalizedLivingCard').click(function (event) {
                if(!$(event.target).hasClass('configGuide') && !$(event.target).parent().hasClass('configGuide')) {
                    $('.slick-slider').slick('slickUnfilter');
                    var section = $(this).attr('data-section');
                    var title = $(this).attr('data-title');
                    var id = $(this).closest('.optionsArea').attr('id');
                    $('#previewItem').prop('data-img', '');
                    if (!$(this).hasClass('deactive')) {
                        if ($(this).hasClass('optionSelected')) {
                            $(this).removeClass('optionSelected');
                            $('#' + section + 'Row .personalizedLivingCard').removeClass('deactive');
                            $('.personalizedLivingOption[data-section="' + id + '"]').find('.selected').remove();

                            $('#personalizedLiving' + section.replace(' ', '_')).find('.optionTitle').remove();
                        } else {
                            $('#' + section + 'Row .personalizedLivingCard').addClass('deactive').addClass('incompatible').removeClass('optionSelected');

                            $(this).removeClass('deactive').addClass('optionSelected').removeClass('incompatible');

                            $('.personalizedLivingOption[data-section="' + id + '"]').find('.selected').remove();
                            $('.personalizedLivingOption').removeClass('active');
                            $('.personalizedLivingOption[data-section="' + id + '"]').addClass('active').append('<span class="selected pull-right">' + title + '</span>');
                            shopCartUI.checkIfAllOptionsSet();

                            var selectionHtml = '<span class="optionTitle" data-section="' + section + '"><i class="fa fa-times"></i> ' + title + '</span>';
                            $('#personalizedLiving' + section.replace(' ', '_')).find('.sectionTitle').find('h3').after(selectionHtml);
                        }

                        shopCartUI.sortAllowedCategories();

                        setTimeout(function () {
                            $('.slick-slider').slick('slickFilter', ':not(:has(.deactive))');
                        }, 100)
                    }
                }
            });
        },

        removeSelectedPersonalizedLivingOption: function () {
            $('body').on('click', '.optionTitle', function () {
                var section = $(this).attr('data-section') + 'Row';
                $('#' + section.replace(' ', '_')).find('.optionSelected').trigger('click');
            });
        },

        sortAllowedCategories: function () {
            var selectedSelections = [];
            var versionsSelected = [];
            var optionSelected = [];

            $('.personalizedLivingCard.optionSelected').each(function () {
                var selections = $(this).attr('data-selections');
                var options = selections.split(':');
                var option = $(this).attr('data-title');
                var sequence = $(this).attr('data-option');
                var currentVersion = $(this).attr('data-version');

                if (currentVersion != '' && $.inArray(currentVersion, versionsSelected) === -1) {
                    versionsSelected.push(parseInt(currentVersion));
                }

                optionSelected.push({name: option, sequence: sequence});
               
                selectedSelections.push(options);
            });

            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/getOptionsForSelectedItems',
                dataType: 'json',
                type: 'post',
                data: {options: optionSelected, GREETING_ID: ShopdataUI.data.SDGREETID},
                success: function (data) {
                    if (data.success) {
                        $('.slick-slider').slick('slickUnfilter');
                        if (data.data != '') {
                            var optionsAllowed = data.data;
                            for (var i in optionsAllowed) {
                                $('#' + i + ' .personalizedLivingCard').each(function () {
                                    var name = $(this).attr('data-title');
                                    if (optionsAllowed[i].indexOf(name) == -1) {
                                        $(this).addClass('deactive');
                                    } else {
                                        $(this).removeClass('deactive');
                                    }
                                });

                                var optionsName = i.replace('Row', '');
                                if (optionsAllowed[i].length == 0) {
                                    $('#personalizedLivingOptions #' + optionsName).addClass('incompatible').find('span').remove();
                                } else {
                                    $('#personalizedLivingOptions #' + optionsName).removeClass('incompatible');
                                }

                            }
                            $('.slick-slider').slick('slickFilter', ':not(:has(.deactive))');
                        } else {
                            $('.personalizedLivingCard').removeClass('deactive');
                            $('.personalizedLivingOption').removeClass('incompatible');
                        }

                        shopCartUI.sortVersionIncompatibilities(versionsSelected);

                    } else {
                        shopCartUI.displayPersonalizedLivingError(data.msg);
                    }
                },
                error: function () {
                    shopCartUI.displayPersonalizedLivingError('There was an error with the app, please try again');
                }
            });


        },

        sortVersionIncompatibilities: function (selectedVersions) {
            var lowestVersion = 100;
            /* set high so that it can be over written in the loop */
            if (selectedVersions.length == 0) {
                selectedVersions.push(0);
            }

            for (var i in selectedVersions) {
                if (lowestVersion > selectedVersions[i]) {
                    lowestVersion = parseInt(selectedVersions[i]);
                }
            }

            /* LOOP THROUGH EACH CARD AND CHECK VERSION */
            $('.personalizedLivingCard').each(function () {
                var currentSection = $(this).attr('data-section');
                var cardVersion = $(this).attr('data-version');
                if ($(this).closest('.slick-initialized').find('.optionSelected').length == 0) {
                    if (lowestVersion != 0) {
                        if (cardVersion) {
                            cardVersion = parseInt(cardVersion);
                            if (cardVersion != lowestVersion) {
                                /* REMOVE SETTING ON LEFT SIDE MENU */
                                if ($(this).hasClass('optionSelected')) {
                                    currentSection = currentSection.replace(' ', '_');
                                    $('#personalizedLivingOptions [data-type="' + currentSection + '"]').find('.selected').remove();
                                }

                                /* DEACTIVATE CARD */
                                $(this).addClass('deactive').removeClass('optionSelected');
                            } else {
                                /*IF SECTION ISN'T INCOMPATIBLE WITH SELECTION DEACTIVATE THE CARD */
                                if (!$('#' + currentSection.replace(' ', '_') + 'Row').hasClass('incompatible')) {
                                    $(this).removeClass('deactive');
                                }
                            }
                        }
                    } else {
                        if (!$('#' + currentSection.replace(' ', '_') + 'Row').hasClass('incompatible')) {
                            $(this).removeClass('deactive');
                        }
                    }
                }
            });
            //shopCartUI.checkIfAllOptionsSet();
        },

        closeAddPersonalizedLivingModal: function () {
            $('body').on('click', '#closeAddPersonalizedLivingItem', function () {
                $('#modalArea').html('');
                $('.modal-backdrop').remove();
                $('body').removeClass('modal-open');
            });
        },

        personalizedLivingItemPreview: function () {
            $('body').on('click', '#previewItem', function () {
                shopCartUI.personalizedLivingItemShow = true;
                shopCartUI.checkIfAllOptionsSet();
            });
        },

        previewCartItem: function () {
            $('body').on('click', '.previewPersonalizedLivingItem', function () {
                $('.itemsWarning').remove();
                var sku = $(this).attr('data-itemsku');
                $.ajax({
                    url: shopCartUI.baseURL + 'index.php/main/getPersonalizedLivingDetails',
                    dataType: 'json',
                    type: 'post',
                    data: {'options': {'sku': sku}, GREETING_ID: ShopdataUI.data.SDGREETID},
                    success: function (data) {
                        if (data.success) {
                            shopCartUI.previewPersonalizedWindow(data.data, false);
                        } else {
                            shopCartUI.displayPersonalizedLivingError(data.msg);
                        }
                    },
                    error: function () {

                    }
                });
            });
        },

        showPersonalizedLivingPreview: function () {
            $('.itemsWarning').remove();
            var options = shopCartUI.getSelectedPersonalizedLivingOptions();
            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/getPersonalizedLivingDetails',
                dataType: 'json',
                type: 'post',
                data: {options: options, GREETING_ID: ShopdataUI.data.SDGREETID},
                success: function (data) {
                    if (data.success) {
                        shopCartUI.previewPersonalizedWindow(data.data, true);
                        $('#previewItem').prop('data-img', data.data.img);
                    } else {
                        shopCartUI.displayPersonalizedLivingError(data.msg);
                    }
                },
                error: function () {

                }
            });
        },

        previewPersonalizedWindow: function (data, showButtons) {
            // MODAL BUTTONS IN THE FOOTER OF THE MODAL
            var buttons = [
                {
                    id: '',
                    name: 'Save',
                    class: 'btn btn-danger savePersonalizedLivingItem',
                    data: '',
                }, {
                    id: 'closeAddPersonalizedLivingItem',
                    name: 'Close',
                    class: 'btn btn-default ',
                    data: '',
                },
            ];
            var hideCloseButtons = true; // PASSED INTO openModal to tell it hide the default close buttons

            // IF THE IN CART PREVIEW IS TRIGGERING THIS ACTION DONT SHOW THE SAVE BUTTON AND SHOW THE DEFAULT CLOSE BUTTONS
            if (showButtons === false) {
                buttons = '';
                hideCloseButtons = false;
            }

            var dimensions = '';
            if (data.height && data.width) {
                dimensions = '<b>Dimensions:</b> ' + data.width + 'x' + data.height;
            }

            data.desc = data.desc == 0 ? 'Customization' : data.desc;

            var page = '';
            if (data.romance != 0) {

                page = '<div class="row">';
                page += '<div class="col-md-4"><img src="' + data.img + '" class="img-responsive img-center"></div>';
                page += '<div class="col-md-8"><p>' + data.romance + '</p><p>' + dimensions + '</p></div>';

                if (data.price != '0.00' || data.price > 0) {
                    //page += '<div class="col-md-12 text-center" style="font-size:1.3em;"><hr><p><b>Only $' + data.price + '</b></p></div>';
                }
                page += '</div>';
            } else {
                page = '<div class="row"><div class="col-md-8 col-md-offset-2"><img src="' + data.img + '" class="img-responsive img-center"></div></div>';
            }

            if (hideCloseButtons) { //IF THIS IS TRIGGERED BY THE PREVIEW CART IT, HIDE THIS SENTENCE IN THE VIEW
                page += '<p class="text-center"><b>You\'ve selected all the required options, would you like to add this item to the list?</b></p>';
            }

            shopCartUI.openModal('modal-lg  ', '<i class="fa fa-shopping-cart"></i> ' + data.desc, page, 'addPersonalizedLivingItem', buttons, hideCloseButtons);
        },

        getSelectedPersonalizedLivingOptions: function () {
            var options = [];
            shopCartUI.personalizedLivingAllItemsSelected = true;
            $('.personalizedLivingOption').each(function () {
                if (!$(this).hasClass('incompatible')) {
                    if ($(this).find('.selected').length == 0) {
                        shopCartUI.personalizedLivingAllItemsSelected = false;
                    } else {
                        var type = $(this).attr('data-type');
                        var value = $(this).find('.selected').html();
                        var itemObj = {'type': type, 'value': value};
                        $(this).attr('data-maxLength')
                        options.push(itemObj);
                    }
                }
            });

            return options;
        },

        savePersonalizedLivingItem: function () {
            $('body').on('click', '.savePersonalizedLivingItem', function () {
                if ($(this).attr('disabled')) {
                    return false;
                }
                $('.itemsWarning').remove();

                var options = shopCartUI.getSelectedPersonalizedLivingOptions();

                var currentSkus = [];
                $('.previewPersonalizedLivingItem').each(function () {
                    currentSkus.push(parseInt($(this).attr('data-itemsku')));
                });

                if (shopCartUI.personalizedLivingAllItemsSelected && options.length > 0) {
                    $.ajax({
                        url: shopCartUI.baseURL + 'index.php/main/save_personalized_living_item',
                        type: 'post',
                        dataType: 'json',
                        data: {options: options, GREETING_ID: ShopdataUI.data.SDGREETID},
                        success: function (data) {
                            if (data.success) {
                                $('#addPersonalizedLivingItem').modal('hide');
                                if (currentSkus.indexOf(data.sku) == -1) {
                                    var itemCard = '<div class="well personalizedLivingCartItem">';
                                    itemCard += '<div class="removePersonalizedItem"><i class="fa fa-times fa-2x"></i></div>';
                                    itemCard += '<img src="' + data.img + '" class="img-responsive img-center">';
                                    itemCard += '<h4 class="personalizedLivingCartSku">' + data.sku + '</h4>';
                                    if (data.price != "0.00") {
                                        //itemCard += '<h4 class="personalizedLivingCartItemPrice">$' + data.price + '</h4>';
                                    }
                                    if (data.desc != 0) {
                                        itemCard += '<p class="personalizedLivingCartDesc text-center" style="margin-top:5px;">' + data.desc + '</p>';
                                    }
                                    itemCard += '<div class="text-center"><br><button data-itemsku="' + data.sku + '" class="previewPersonalizedLivingItem btn btn-default">View</button></div>';
                                    itemCard += '</div>';

                                    var currentCount = parseInt($('#cartItemCount').attr('data-count'));
                                    $('#cartItemCount').removeClass('hide').attr('data-count', (currentCount + 1)).html((currentCount + 1));

                                    $('#personalizedLivingCartArea').prepend(itemCard);

                                    setTimeout(function () {
                                        $('.personalizedLivingCartItem').css('background-color', '#fff');
                                    }, 1000);
                                } else {
                                    shopCartUI.displayPersonalizedLivingError('Item already added to list, increase quantity after adding it to the cart.');
                                }
                            } else {
                                data.msg = data.msg != '' ? data.msg : 'There was an error adding the item to the list, try again';
                                shopCartUI.displayPersonalizedLivingError(data.msg);
                            }
                        },
                        error: function () {

                        }
                    });
                } else {

                }
            });
        },

        displayPersonalizedLivingError: function (msg) {
            $('.itemsWarning').remove();
            $('#personalizedLivingActionArea').before('<div class="alert alert-danger itemsWarning"><i class="fa fa-exclamation-triangle"></i> ' + msg + '</div>');
            if (shopCartUI.plTimeOut) {
                clearTimeout(shopCartUI.plTimeOut);
                shopCartUI.plTimeOut = null;
            }
            shopCartUI.plTimeOut = setTimeout(function () {
                $('.itemsWarning').slideUp();
            }, 5000);
        },

        checkIfAllOptionsSet: function () {
            var allOptionsSet = true;
            $('.personalizedLivingOption').each(function () {
                if (!$(this).hasClass('incompatible')) {
                    if ($(this).find('.selected').length == 0) {
                        allOptionsSet = false;
                    }
                }
            });

            if (allOptionsSet) {
                shopCartUI.showPersonalizedLivingPreview();
                $('.savePersonalizedLivingItem').attr('disabled', false);
                $('#previewItem').removeClass('hide');
            } else {
                $('.savePersonalizedLivingItem').attr('disabled', true);
                $('#addNewItem').attr('disabled', true);
                $('#previewItem').addClass('hide');
            }
        },

        openPersonalizedLiving: function () {
            $('#personalizedLiving').click(function () {
                shopCartUI.CloseSideMenu();
                if (ShopdataUI.data.SDGREETID > 0) {
                    $.ajax({
                        url: shopCartUI.baseURL + 'index.php/main/personalized_living/',
                        type: 'post',
                        dataType: 'html',
                        data: {GREETING_ID: ShopdataUI.data.SDGREETID},
                        success: function (data) {
                            $('#personalizedLivingArea').html(data).removeClass('hide');
                            $('#mainWindow').addClass('hide');
                            shopCartUI.initPersonalizedLiving();
                        },
                        error: function () {
                            shopCartUI.openModal('modal-md', 'Oops, an error occurred', 'There was an error pulling up the customization options, please refresh the page and try again', 'personalizedLivingModal');
                        }
                    });
                } else {
                    shopCartUI.openModal('modal-md', 'Oops, an error occurred', 'Please engage a customer before opening the customization screen', 'personalizedLivingModal');
                }
            });
        },

        addAllItemsToTheCart: function () {
            $('body').on('click', '#savePersonalizedLivingCartItems', function () {
                var itemSkus = [];
                if ($('.personalizedLivingCartItem').length > 0) {
                    $('.personalizedLivingCartItem').each(function () {
                        itemSkus.push($(this).find('.previewPersonalizedLivingItem').attr('data-itemsku'));
                    });
                    if (itemSkus.length > 0) {
                        $.ajax({
                            url: shopCartUI.baseURL + 'index.php/main/addPersonalizedItemsToCart',
                            dataType: 'json',
                            type: 'post',
                            data: {skus: itemSkus, GREETING_ID: ShopdataUI.data.SDGREETID},
                            success: function (data) {
                                if (data.success) {
                                    $('#closePersonalizedLivingWindow').addClass('warned');
                                    shopCartUI.destroyPersonalizeLiving();
                                    shopCartUI.updateAppSections('shoppingCartSection');
                                } else {
                                    shopCartUI.displayPersonalizedLivingError(data.msg);
                                }
                            },
                            error: function () {

                            }
                        });
                    }
                } else {
                    shopCartUI.openModal('modal-md  ', '<i class="fa fa-exclamation-triangle"></i> Warning', 'You haven\'t added any items yet, please add some items before trying to add them to the cart.', 'personalizedLivingWarning');
                }
            });
        },

        plDebugOption: function () {
            $('body').on('click', '#plDebugOption', function () {
                $('.plDebugTitle').toggleClass('hide');
                if (shopCartUI.plWarning) {
                    alert('This functionality is only available in development for the purpose of finding setup errors and/or bugs. This button and the text on each of the items below will not be there once out of develoment.');
                    shopCartUI.plWarning = false;
                }
            });
        },

        listenForAutoFilledSearch: function () {
            $('body').on('click', 'ul.ui-autocomplete li', function () {
                $(".cmdSearchSKU:first").trigger('click');
                $('#txtWord, #txtWord2').blur();
            });
        },

        searchForSkus: function () {
            $('.searchInputForm').on('submit', function (event) {
                event.preventDefault();
                var search = $(this).attr('id') == 'searchWindowForm' ? $('#txtWord2').val() : $('#txtWord').val();
                shopCartUI.currentSearch = search;
                var sequence = $('.searchResultsLink').length;
                $('.cmdSearchSKU').prop('data-filters', '');

                Search.init();
                Search.enhancedSearch(search, sequence);
            });
        },

        listenForSearchWindowCloseEvent: function () {
            $('body').on(shopCartUI.clickEventToUse, '#closeSearchWindow', function () {
                Search.toggleSearchWindow();
            });
        },

        loadSearchedSku: function () {
            $('body').on('click', '.searchResultLink', function (event) {
                event.preventDefault();
                if (!($(event.target).hasClass('searchComponentList')) && !($(event.target).hasClass('statusDropped'))) {
                    var row = $(this).attr('data-item');
                    var closeSearch = $(this).closest('#viewedItemsModal').length > 0 ? true : false;
                    Search.toggleSearchWindow(closeSearch);
                    $('#txtWord').val('');
                    if (row.length > 2) {
                        row = JSON.parse(row);
                        $.post(shopCartUI.baseURL + 'index.php/main/getSkuAvail', {"row": row},
                            function (data) {
                                $('#productInfoSection').html(data);
                                $('#viewedItemsModal').modal('hide');
                                shopCartUI.enableComponentAvailability();
                                $('#productInfoSection, #shoppingCartSection').scrollTop(0);
                            }
                        ).fail(function (data) {
                            shopCartUI.handleCartError(data);
                        });
                    }

                }
            });
        },


        initHeadercharges: function () {
            shopCartUI.removeHeaderCharge();
            shopCartUI.showHeaderChargeOptions();
            shopCartUI.addNewHeaderCharge();
        },

        destroyHeaderCharges: function () {
            $('body').off('click', '.removeHeaderCharge');
            $('body').off('click', '.addHeaderCharge');
            $('body').off('change', '.headerChargeSelection');
        },

        setTimeoutTimer: 0,

        headerDeliveryCharges: function () {
            $('body').on('click', '#headerCharges', function () {
                shopCartUI.initHeadercharges();

                $.ajax({
                    url: shopCartUI.baseURL + 'index.php/main/load_header_charges',
                    data: {GREETING_ID: ShopdataUI.data.SDGREETID},
                    dataType: 'json',
                    type: 'post',
                    success: function (data) {
                        if (data.success) {
                            var data = data.data;

                            html = shopCartUI.formatInitialHeaderChargesInput(data);
                            html += shopCartUI.formatCurrentCharges(data);


                            shopCartUI.openModal('md-sm', 'Header Charges', html, 'headerChargesWindow');

                            shopCartUI.totalHeaderCharges();
                        } else {
                            shopCartUI.handleFailedAjaxCall(data);
                        }
                    },
                });
            });
        },

        formatInitialHeaderChargesInput: function (data) {
            html = '<div id="headerChargeOptions" class="row">';
            html += '<div class="col-sm-6">';
            html += '<label>Charge Type</label>';
            html += '<select id="headerChargeSelection" class="headerChargeType form-control">';
            html += '<option value="">Select One...</option>';
            for (var i in data) {

                html += '<option value="' + data[i].type + '" ' +
                    'data-editable="' + data[i].editable + '" ' +
                    'data-cost="' + parseFloat(data[i].cost).toFixed(2) + '">' +
                    data[i].label + '</option>';
            }
            html += '</select>';
            html += '</div>';
            html += '<div class="col-sm-4 col-xs-4">';
            html += '<div id="headerChargeAmount"></div>';
            html += '</div>';
            html += '<div class="col-sm-2 col-xs-2 text-right">';
            html += '<div id="headerChargeAdd" class="hide">';
            html += '<label style="display: block">Add</label>';
            html += '<button class="addHeaderCharge btn btn-danger"><i class="fa fa-plus"></i></button>';
            html += '</div>';
            html += '</div>';
            html += '</div>';

            return html;
        },

        formatCurrentCharges: function (data) {
            var charges = '<ul id="headerChargeList" class="list-group">';
            for (var i in data) {
                if (data[i].charges > 0) {
                    for (var c in data[i]['set_charges']) {
                        data[i]['set_charges'][c].label = data[i].label;
                        data[i]['set_charges'][c].type = data[i].type;
                        charges += shopCartUI.formatSingleHeaderCharge(data[i]['set_charges'][c]);
                    }
                }
            }
            charges += '</ul>';

            charges += '<div id="headerChargesTotal" class="text-right"></div>';

            return charges;
        },

        formatSingleHeaderCharge: function (charge) {
            var charges = '';
            if (charge) {
                charges += '<li ' +
                    'class="list-group-item" ' +
                    'data-sequence="' + charge.sequence + '" ' +
                    'data-sub-sequence="' + charge.sub_sequence + '"' +
                    'data-price="' + parseFloat(charge.amount).toFixed(2) + '"' +
                    'data-charge-type="' + charge.type + '">';
                charges += '<div class="row">';
                charges += '<div class="col-sm-6">';
                charges += '<p>' + charge.label + '</p>';
                charges += '</div>';
                charges += '<div class="col-xs-4">';
                charges += '<p>$' + parseFloat(charge['amount']).toFixed(2) + '</p>';
                charges += '</div>';
                charges += '<div class="col-sm-2 text-right">';
                charges += '<button class="removeHeaderCharge btn btn-default btn-sm"><i class="fa fa-minus"></i></button>';
                charges += '</div>';
                charges += '</div>';
                charges += '</li>';
            }
            return charges;
        },

        addNewHeaderCharge: function () {
            $('body').on('click', '.addHeaderCharge', function () {
                var input = $('#headerChargeAmount').find('input');
                if ($('#headerChargeSelection').val() != '') {
                    var data = {
                        amount: 0,
                        type: $('#headerChargeSelection').val(),
                        action: 'add',
                        sequence: 0,
                        subSequence: 0,
                        GREETING_ID: ShopdataUI.data.SDGREETID,
                        input_type: 'button'
                    };

                    data['amount'] = input.length > 0
                        ? input.val()
                        : $('#headerChargeSelection').find('option:selected').attr('data-cost');

                    shopCartUI.saveHeaderChargeChange(data, true);
                }
            });
        },

        showHeaderChargeOptions: function () {
            $('body').on('change', '#headerChargeSelection', function () {
                var option = $(this).find('option[value="' + $(this).val() + '"]');
                if (option.val()) {
                    var editable = option.attr('data-editable');
                    var cost = option.attr('data-cost');

                    var inputLabel = '<label>Charge Amount</label>';
                    var input = editable == 'Y'
                        ? inputLabel + '<input type="number" class="form-control amounts" maxlength="6" value="' + cost + '">'
                        : inputLabel + '<div class="unEditableCost">$' + cost + '</div>';

                    $('#headerChargeAmount').html(input);
                    $('#headerChargeAdd').removeClass('hide');

                    $('.amounts').mask('000,000,000,000,000.00', {reverse: true});
                } else {
                    $('#headerChargeAdd').addClass('hide');
                    $('#headerChargeAmount').html('');
                }
            });
        },

        totalHeaderCharges: function () {
            var total = 0.00;

            $('#headerChargeList li').each(function () {
                var amount = $(this).attr('data-price');

                if (amount > 0) {
                    amount = parseFloat(amount);
                    total = parseFloat(total);

                    total = (total + amount);
                }
            });

            $('#headerChargesTotal').html('<b>Total Charges: $' + total.toFixed(2) + '</b>');

            return total;
        },

        saveHeaderChargeChange: function (data, addRow) {
            $('.feedbackMessage').remove();
            clearTimeout(shopCartUI.setTimeoutTimer);
            $.ajax({
                url: shopCartUI.baseURL + 'index.php/main/save_header_charge',
                data: data,
                type: 'post',
                dataType: 'json',
                success: function (returned) {
                    if (returned.success) {
                        if (returned.data.action != 'REMOVE') {
                            if (addRow) {
                                shopCartUI.formatSingleHeaderCharge(returned.data);
                                $('#headerChargeList').append(shopCartUI.formatSingleHeaderCharge(returned.data));
                            }

                            var msg = '<i class="fa fa-check-circle"></i> Header charge added';
                        } else { // REMOVING HEADER CHARGE
                            var msg = '<i class="fa fa-check-circle"></i> Header charge removed';
                            shopCartUI.removeHeaderChargeFromUI(returned.data);
                        }

                        shopCartUI.showHeaderFeedback('success', data.type, msg);
                        shopCartUI.updateAppSections('shoppingCartSection');

                    } else {
                        var msg = '<i class="fa fa-exclamation-triangle"></i> ' + returned.msg;
                        shopCartUI.showHeaderFeedback('error', data.type, msg);
                    }

                    shopCartUI.totalHeaderCharges();
                },
                error: function () {
                    var msg = '<i class="fa fa-exclamation-triangle"></i> Error sending the request, try again';
                    shopCartUI.showHeaderFeedback('error', data.type, msg);
                }
            });
        },

        removeHeaderChargeFromUI: function(charge) {
            $('#headerChargeList .list-group-item').each(function() {
                 var price = $(this).attr('data-price');
                 var type = $(this).attr('data-charge-type');
                 var subSequence = $(this).attr('data-sub-sequence');

                 if(charge.amount == price
                     && charge.type == type
                     && charge.sub_sequence == subSequence) {
                     $(this).slideUp().remove();
                 }
            });
        },

        showHeaderFeedback: function (colorClass, chargeType, msg) {
            var msg = '<div class="feedbackMessage ' + colorClass + '">' + msg + '</div>';
            $('#headerChargeOptions').after(msg);

            shopCartUI.setTimeoutTimer = setTimeout(function () {
                $('.feedbackMessage').slideUp().remove();
            }, 5000);
        },

        removeHeaderCharge: function () {
            $('body').on('click', '.removeHeaderCharge', function () {
                var amount = $(this).closest('.list-group-item').attr('data-price');
                var type = $(this).closest('.list-group-item').attr('data-charge-type');
                var sequence = $(this).closest('.list-group-item').attr('data-sequence');
                var subSequence = $(this).closest('.list-group-item').attr('data-sub-sequence');

                var data = {
                    amount: amount,
                    type: type,
                    action: 'remove',
                    sequence: sequence,
                    sub_sequence: subSequence,
                    GREETING_ID: ShopdataUI.data.SDGREETID
                };

                shopCartUI.saveHeaderChargeChange(data);
            });
        },

        addQuickSkuItem: function() {
            $('body').on('click', '#addQuickSku', function() {
                if(ShopdataUI.data.SDGREETID) {
                    var html = '<form id="quickSkuInputForm" class="">';
                    html += '<div class="form-group">';
                    html += '<label for="quickSkuInput">SKU# </label>';
                    html += '<input type="number" class="form-control" id="quickSkuInput" maxlength="10" autofocus placeholder="Enter SKU Number" required>';
                    html += '</div>';
                    html += '<div id="quickAddFeedback"></div>';
                    html += '</form>';
                    var addButton = [{
                        id: 'addQuickSkuBtn',
                        name: 'Add SKU',
                        class: 'btn btn-danger pull-right',
                        data: ''
                    }];
                } else {
                    var html = '<div class="alert alert-warning">';
                        html += 'You must first engage a customer before trying to add any SKU\'s to the cart';
                    html += '</div>';
                }
                shopCartUI.openModal('modal-md', '<i class="fa fa-shopping-cart"></i> Add Quick SKU', html, 'quickSKUScreen',addButton);
                shopCartUI.CloseSideMenu();
            });
        },

        saveQuickSkuItem: function() {
            $('body').on('click', '#addQuickSkuBtn', function(e) {
                e.preventDefault();
                clearTimeout(shopCartUI.setTimeoutTimer);
                var sku = $('#quickSkuInput').val();
                $('#quickAddFeedback').html('');
                $.post(shopCartUI.baseURL + 'index.php/main/addQuickSku', {sku: sku, GREETING_ID: ShopdataUI.data.SDGREETID},
                    function (data) {
                        if(data.success) {
                            $('#quickSkuInput').val('');
                            var msg = '<div class="alert alert-success"><i class="fa fa-check"></i> ' + data.msg + '</div>';
                            $('#quickAddFeedback').html(msg);
                            shopCartUI.updateAppSections('shoppingCartSection');
                        } else {
                            var msg = '<div class="alert alert-danger"><i class="fa fa-times"></i> ' + data.msg + '</div>';
                            $('#quickAddFeedback').html(msg);
                        }

                        shopCartUI.setTimeoutTimer = setTimeout(function () {
                            $('#quickAddFeedback').html('');
                        }, 5000);

                    }, 'json');
            });
        },
        sortCustomerList: function() {
            $('body').on('change', '#customer-sort-input', function(event) {
                $('#customerListView').removeClass('noMoreResults');
                $('.initCustomerRow').html(''); //clear the customers so we can apply the sort
                $('#customer-search-input').val(''); // clear search to prevent duplicate calls
                shopCartUI.loadCustomersIntoView($('#customerListSection .active'), true);
            });
        },

        searchCustomerList: function() {
            $('body').on('keyup', '#customer-search-input', function(event) {
                var searchString = $(this).val();

                // once a search happens, we need to load all the customers in the view for to search them but only once!
                if($('.initCustomerRow .customer').length > 0
                    && !$('.initCustomerRow .customer').length < 30
                    && shopCartUI.loadingCustomerList == false)
                {
                    shopCartUI.loadingCustomerList = true;
                    $('#customer-search-input').attr('disabled', true);
                    shopCartUI.loadCustomersIntoView($('#customerListSection .active'), true);
                }

                if(searchString.length > 2) {
                    searchString = searchString.toUpperCase();
                    $('.initCustomerRow .customer').each(function() {
                        var matches = false;

                        var customerName = $(this).find('.customer-list-name').html().toUpperCase();
                        var invoiceNumber = $(this).find('.quote-search').html();
						if(typeof invoiceNumber == 'undefined') invoiceNumber = '';
						
                        if (customerName.indexOf(searchString) !== -1) matches = true;
                        if (invoiceNumber.indexOf(searchString) !== -1) matches = true;
						
                        (!matches) ? $(this).parent().addClass('hide') : $(this).parent().removeClass('hide');
                    });
                } else {
                    $('.initCustomerRow .customer').parent().removeClass('hide');
                }
            });
        },
    }

/* TODO: This can be removed once UCM is implemented. This is a work around till then */
var deliveryInstructions = {
    clickTriggered: false,
    init: function() {
        $('#CUSTCNTPH').mask('(000) 000-0000');
        deliveryInstructions.swapCustomerInfo();
        deliveryInstructions.sendOptin();
        deliveryInstructions.onCellChange();
        deliveryInstructions.showOptinStatusOnSelect();
        var CUSTPCNT = $('#CUSTPCNT').val();
        if(CUSTPCNT != '') {
            deliveryInstructions.clickTriggered = true;
           $('#CUSTPCNT').trigger('change');
        }
    },

    destroyDeliveryInstructions: function() {
        $('body').off('change', '#CUSTPCNT');
        $('body').off('click', '.sendOptInText');
        $('body').off('click', '#CUSTCNTPH');
        $('body').off('click', '#TextNumbers');
    },

    showOptinStatusOnSelect: function() {
        $('body').on('change', '#TextNumbers', function() {
            $('#statusBeforeSend').remove();
            var status = $(this).find(':selected').attr('data-status');
            var msg = '';
            var color = 'text-danger';
            if(status == 0) {
                msg = 'Please have the customer opt-in this phone number';
                $('.sendOptInText').removeClass('hide');
            } else if(status == 1) {
                msg = 'This number has already been opted-in';
                color = 'text-success';
                $('.sendOptInText').addClass('hide');
            } else if(status == 2) {
                $('.sendOptInText').removeClass('hide');
                msg = 'This number has been opted-OUT. Does the customer wish to opt-in?';
            }
            if(msg) {
                //$('#TextNumbers').after('<div id="statusBeforeSend" class="' + color + '">' + msg + '</div>');
            }

            if($(this).val() == '') {
                $('#statusBeforeSend').remove();
                $('.sendOptInText').addClass('hide');
            }
        });
    },

    onCellChange: function() {
        $('body').on('change', 'input[name="CUSTCNTPH"]', function() {
            $('#sendOptInText').addClass('hide');
            $('#textFeedback').remove();
            var currentStatus = $('#sendOptInText').attr('data-status');
            if( $('#CUSTPCNT').val() == 'T') {
                var phone = $('#CUSTCNTPH').val() != '' ? $('#CUSTCNTPH').val().replace(/\D/g,'') : '';
                var setPhone = $('#sendOptInText').attr('data-custphone');
                if(phone != setPhone && setPhone != 0) {
                    $('.sendOptInText').removeClass('hide');
                } else if(phone != ShopdataUI.data['CUSTCNTPH'] && currentStatus == 1) {
                    $('.sendOptInText').addClass('hide');
                }
            }
        });
    },

    swapCustomerInfo: function() {
        $('#CUSTPCNT').change(function() {
            $('#statusBeforeSend').remove();
            $('.sendOptInText').addClass('hide');

            $('#EnterPhoneNumber input').val();
            var contactMethod = $(this).val();
            $('#EnterPhoneNumber, #NoneTextNumbers, #CUSTOMEREMAIL, #TextNumbers').addClass('hide');

            $('#NoneTextNumbers').attr('name', '');
            $('#EnterPhoneNumber').find('input').attr('name', '');

            $('#TextNumbers').attr('name', '');

            $('#textFeedback').remove();
            $('#feedbackSection').html('');
            $('#sendOptInText').addClass('hide');
            switch(contactMethod) {
                case 'P':
                    $('#methodOfContactLabel').html('Phone');
                    if($('#NoneTextNumbers').length>0) {
                        $('#NoneTextNumbers').removeClass('hide');
                        $('#NoneTextNumbers').attr('name', 'CUSTCNTPH');
                    } else {
                        $('#EnterPhoneNumber').removeClass('hide');
                        $('#EnterPhoneNumber').find('input').attr('name', 'CUSTCNTPH');
                    }
                    break;
                case 'T':
                    $('#methodOfContactLabel').html('Cell');

                    if(typeof  $("select[name='CUSTCNTPH']").val() != 'undefined') {
                        var phone = $("select[name='CUSTCNTPH']").val() != '' && $("select[name='CUSTCNTPH']").val() != ''
                            ? $("select[name='CUSTCNTPH']").val().replace(/\D/g, '') : '';
                    } else {
                        var phone = '';
                    }

                    var currentStatus = $('#sendOptInText').attr('data-status');
                    var setPhone = $('#sendOptInText').attr('data-custphone');
                    if(setPhone != '' && phone != setPhone) {
                        if(currentStatus != 1 && currentStatus != '' && $('#CUSTCNTPH').val() != '') {
                            $('#sendOptInText').removeClass('hide');
                        }
                    } else if(currentStatus != 1 && $('#CUSTCNTPH').val() != '') {
                        $('#sendOptInText').removeClass('hide');
                    }
                    if($('#TextNumbers').length>0) {
                        $('#TextNumbers').removeClass('hide');
                        $('#TextNumbers').attr('name', 'CUSTCNTPH');
                    } else {
                        $('#EnterPhoneNumber').removeClass('hide');
                        $('#EnterPhoneNumber').find('input').attr('name', 'CUSTCNTPH');
                    }
                    if( $('input[name="CUSTCNTPH"]').val() != '' ) {
                        $('#sendOptInText').addClass('hide');
                    }
                    break;
                case 'E':
                    $('#methodOfContactLabel').html('Email');
                    $('#CUSTOMEREMAIL').removeClass('hide');
                    break;
                default:
                    $('#methodOfContactLabel').html('Phone');
                    $('#EnterPhoneNumber').removeClass('hide');
                    $('#CUSTCNTPH').val('');
                    break;
            }

            if(deliveryInstructions.clickTriggered) {
                deliveryInstructions.clickTriggered = false
            } else {
                $('[name="CUSTCNTPH"]').val('');
            }
        });
    },

    sendOptin: function() {
        $('body').on('click', '.sendOptInText', function(event) {
            $('#statusBeforeSend').remove();
            event.preventDefault();
            var phone = '';
            if(typeof $(this).attr('data-phone') != 'undefined') {
                phone = $(this).attr('data-phone');
            } else {
                phone = $('[name="CUSTCNTPH"]').val();
            }

            var elem = $(this);
            var elemHtml = $(this).html();

            $('#textFeedback').remove();
            $.ajax({
                url: shopCartUI.baseURL+'index.php/main/sendOptinTextMessage/',
                type: 'POST',
                dataType: 'json',
                data: {phone: phone},
                success: function(data) {
                    if(data.success) {
                        $('#feedbackSection').html('');
                        $('.sendOptInText').attr('data-status', '');
                        $('.sendOptInText').removeClass('hide');
                        elem.closest('.row').after('<div id="textFeedback" class="alert alert-success" style="margin-top:15px;"><i class="fa fa-check-circle"></i> Text message sent successfully</div>');
                    } else {
                        elem.closest('.row').after('<div id="textFeedback" class="alert alert-danger" style="margin-top:15px;"><i class="fa fa-exclamation-triangle"></i> There was an error sending the text, try again</div>');
                    }
                    elem.html(elemHtml).attr('disabled', false);
                },
                error: function() {
                    elem.html(elemHtml).attr('disabled', false);
                    elem.closest('.row').after('<div id="textFeedback" class="alert alert-danger" style="margin-top:15px;"><i class="fa fa-exclamation-triangle"></i> There was an error sending the text, try again</div>');
                    $('#textFeedback').remove();
                },
                beforeSend: function() {
                    elem.html('<i class="fa fa-gear fa-spin"></i> Sending').attr('disabled', true);
                }
            });

        });
    }
}
/*
 decimal_sep: character used as deciaml separtor, it defaults to '.' when omitted
 thousands_sep: char used as thousands separator, it defaults to ',' when omitted
 */
Number.prototype.toMoney = function(decimals, decimal_sep, thousands_sep)
{
    var n = this,
        c = isNaN(decimals) ? 2 : Math.abs(decimals), //if decimal is zero we must take it, it means user does not want to show any decimal
        d = decimal_sep || '.', //if no decimal separator is passed we use the dot as default decimal separator (we MUST use a decimal separator)

    /*
     according to [http://stackoverflow.com/questions/411352/how-best-to-determine-if-an-argument-is-not-sent-to-the-javascript-function]
     the fastest way to check for not defined parameter is to use typeof value === 'undefined'
     rather than doing value === undefined.
     */
        t = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep, //if you don't want to use a thousands separator you can pass empty string as thousands_sep value

        sign = (n < 0) ? '-' : '',

    //extracting the absolute value of the integer part of the number and converting to string
        i = parseInt(n = Math.abs(n).toFixed(c)) + '',

        j = ((j = i.length) > 3) ? j % 3 : 0;
    return sign + (j ? i.substr(0, j) + t : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');
}
String.prototype.isNumeric = function(){
    var RE = /^-{0,1}\d*\.{0,1}\d+$/;
    return (RE.test(this.trim()));
}
function arrayContainsKey(ar, itemToFind ) {
    for (item in ar) {
        if(!ar.hasOwnProperty(item)){
            continue;
        }
        if (ar[item] == itemToFind)
            return true;
    }
    return false;
}
function arrayPushIfNew(ar, itemToAdd ) {
    if(typeof ar.push !='undefined'){
        for (item in ar) {
            if(!ar.hasOwnProperty(item)){
                continue;
            }
            if (ar[item] == itemToAdd)
                return;
        }
        ar.push(itemToAdd);
    }
}

function cancelBubble(e) {

    var evt = e ? e:window.event;

    if (evt.stopPropagation)    evt.stopPropagation();
    if (evt.cancelBubble!=null) evt.cancelBubble = true;

}
(function($) {
    $.fn.nodoubletapzoom = function() {
        $(this).bind('touchstart', function preventZoom(e) {
            var t2 = e.timeStamp
                , t1 = $(this).data('lastTouch') || t2
                , dt = t2 - t1
                , fingers = e.originalEvent.touches.length;
            $(this).data('lastTouch', t2);
            if (!dt || dt > 500 || fingers > 1) return; // not double-tap

            e.preventDefault(); // double tap - prevent the zoom
            // also synthesize click events we just swallowed up
            $(this).trigger('click').trigger('click');
        });
    };
})(jQuery);

(function() {
    if (!HTMLInputElement.prototype.setSelectionRange) {
        HTMLInputElement.prototype.setSelectionRange = function(start, end) {
            if (this.createTextRange) {
                var range = this.createTextRange();
                this.collapse(true);
                this.moveEnd('character', end);
                this.moveStart('character', start);
                this.select();
            }
        }
    }
})();

var NumericKeyPad= function(keypaddivid,cssSelector,eventSelector,clickEventToUse,VariableName,callbackFunction,title,getInitialValueFunction,cssMod)
{
    this.Result = $(cssSelector);
    this.focusSelector = cssSelector + ':focus';
    this.keyPadDivId='#'+keypaddivid;
    this.clickeventtouse='click';
    this.callbackfunction=null;
    this.useinitialvalue=true;
    this.getInitialValue=null;

    if(arguments.length>=8){
        this.getInitialValue=getInitialValueFunction;
    }
    if(arguments.length>=7){
        this.title=title;
    }else{
        this.title="";
    }

    if(arguments.length>=6 && callbackFunction!=null ){

        this.callbackfunction=callbackFunction;
        this.useinitialvalue=false;
    }

    if(arguments.length>3 && clickEventToUse!=null && clickEventToUse.trim().length>0){
        this.clickeventtouse=clickEventToUse;
    }
    this.$Answer=null;
    if(this.Result.length==0){
        return;
    }
    this.HideAfterNotUsed=5;  // in seconds
    this.Answer=null;
    this.idleCount=0;
    this.AnswerEvent=eventSelector;
    this.variableName=VariableName;
    this.IdleTime=0;

    this.hideCheck=function(){
        this.IdleTime++;
        if(this.IdleTime>this.HideAfterNotUsed && $(this.focusSelector).length==0){
            this.hide();
        }
    }
    this.position=-1;
    this.updateHandler=function(keypaddivid,cssSelector,eventSelector,clickEventToUse,VariableName,callbackFunction,title,getInitialValueFunction){
        this.Result = $(cssSelector);
        this.focusSelector = cssSelector + ':focus';
        this.keyPadDivId='#'+keypaddivid;
        this.clickeventtouse='click';
        this.callbackfunction=null;
        this.useinitialvalue=true;
        this.getInitialValue=null;

        if(arguments.length>=8){
            this.getInitialValue=getInitialValueFunction;
        }
        if(arguments.length>=7){
            this.title=title;
        }else{
            this.title="";
        }

        if(arguments.length>=6 && callbackFunction!=null ){

            this.callbackfunction=callbackFunction;
            this.useinitialvalue=false;
        }

        if(arguments.length>3 && clickEventToUse!=null && clickEventToUse.trim().length>0){
            this.clickeventtouse=clickEventToUse;
        }
        this.$Answer=null;
        if(this.Result.length==0){
            return;
        }
        this.HideAfterNotUsed=5;  // in seconds
        this.Answer=null;
        this.idleCount=0;
        this.AnswerEvent=eventSelector;
        this.variableName=VariableName;
        this.IdleTime=0;
    }
    this.addCursor=function(i){

        var s = this.Answer.value.trim().replace('|','');
        s  = s.substr(0,i)+ '|' + s.substr(i);
        this.Answer.value=s;
        this.position=i;
    };
    this.deleteChar=function(e){
        this.IdleTime=0;
        cancelBubble(arguments[0]);
        if(this.position<0){
            this.position=this.Answer.value.trim().length-1;
        }
        //var s = this.Answer.value.trim().replace('|','');
        var s = (typeof(this.Answer)=="object")?this.Answer.value.trim().replace('|',''):'';
        if(arguments.length>1){
            s  = s.substr(0,this.position-1)+ '|' + s.substr(this.position);
        }else{
            s  = s.substr(0,this.position)+ '|' + s.substr(this.position+1);
        }
        this.Answer.value=s;
        this.refresh();
    }
    this.addChar=function(e,c){
        this.IdleTime=0;
        cancelBubble(arguments[0]);

        //var s = this.Answer.value.trim().replace('|','');
        var s = (typeof(this.Answer)=="object")?this.Answer.value.trim().replace('|',''):'';
        var sx="";

        if(s.length>0 && s.length>=this.position){
            sx=s.substr(this.position);
            s  = s.substr(0,this.position)+ c +'|'+sx;
            this.position++;
        }else{
            s=c+'|';
            this.position=1;
        }

        this.Answer.value=s;

        this.refresh();
    }
    this.submit=function(e){
        this.IdleTime=0;
        cancelBubble(arguments[0]);
        if(this.callbackfunction!=null){
            var v=this.Answer.value.replace('|','');
            this.Answer.value='';

            this.callbackfunction(v);
            this.Result.trigger({ type : 'change'  });
        }else{
            this.refresh();
            this.Result.trigger({ type : this.AnswerEvent , which : 13 });
        }

        //I don't like this but it works for now
        if(this.Result['selector'] == '#cmdCoupons') {
            shopCartUI.submitCouponCode();
        }
        this.hide();
    };
    this.moveLeft=function(){
        this.IdleTime=0;
        cancelBubble(arguments[0]);

        //var i =this.Answer.value.indexOf('|');
        var i = (typeof(this.Answer)=="object")?this.Answer.value.indexOf('|'):-1;
        if(i==-1){
            i=this.Answer.value.trim().length;
        }
        else if(i<=0){
                return;
        }
        i--;
        this.addCursor(i);
        this.refresh();
    };
    this.moveRight=function(){
        this.IdleTime=0;
        cancelBubble(arguments[0]);
        var i =this.Answer.value.indexOf('|');
        if(i<=-1){
            i=this.Answer.value.trim().length-1;
        }
        else if(i>=this.Answer.value.trim().length-1){
                return;
        }
        i++;

        this.addCursor(i);
        this.refresh();
    };
    this.refresh=function(){
        if(this.Answer!=null){
            var v=this.Answer.value.replace('|','');
            if(this.callbackfunction!=null){
                // do nothing
            }
            else if(typeof this.Result.val !='undefined'){
                this.Result.val(v);
            }
            if(this.position<0){
                this.position=this.Answer.value.length;
            }
            if(this.Answer.value.indexOf('|')>-1){
                this.position=this.Answer.value.indexOf('|');
            }
        }
    };
    this.show=function(){
        if($(this.keyPadDivId+':visible').length==0){
            if(this.AnswerInterval!=null){
                try{clearInterval(this.AnswerInterval);}catch(err){}
                this.AnswerInterval=null;
            }

            $(this.keyPadDivId).show();
            eval('$(document).ready(function(){ \
        ' + this.variableName + '.$Answer=$("#hidden_numerickeypadtext"); \
        ' + this.variableName + '.Answer=$("#hidden_numerickeypadtext")[0]; \
        if(' + this.variableName + '.useinitialvalue ){ \
        if(' + this.variableName + '.getInitialValue!=null){ \
        ' +  this.variableName + '.$Answer.val(' + this.getInitialValue + '); \
        }else{ \
        ' + this.variableName + '.$Answer.val(' + this.variableName + '.Result.val()); \
        } \
        }else{\
        ' + this.variableName + '.$Answer.val(\'\');\
        }\
});');
            if(this.AnswerInterval==null){
                this.AnswerInterval=setInterval(this.variableName+'.hideCheck();', 1000);
            }
        }
    };
    this.hide=function(){
        if($(this.keyPadDivId+':visible').length>0){
            $(this.keyPadDivId).hide();
            this.IdleTime=0;
            if(this.AnswerInterval!=null){
                try{clearInterval(this.AnswerInterval);}catch(err){}
                this.AnswerInterval=null;
            }
        }
    };
    //style="position:absolute;top:-100px;"
    this.keyPadScreen=
        '<div id="'+ keypaddivid + '" class="numericKeypad" style="display:none; z-index: 1000 !important;overflow: visible;'+cssMod+'">  \
            <input type="text" id="hidden_numerickeypadtext" readonly placeholder="'+this.title+'"/> \
            <table class="kpdnumberKeys" border=4 style="overflow: visible;margin:5px;"> \
                <tr><td nowrap> \
                                <input type="button" value="7" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'7\');"> \
                                <input type="button" value="8" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'8\');"> \
                                <input type="button" value="9" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'9\');"> \
                                <input type="button" value="&larr;" on'+ this.clickeventtouse + '="' + this.variableName + '.moveLeft(this);"> \
                </td></tr><tr><td nowrap> \
                                <input type="button" value="4" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'4\');"> \
                                <input type="button" value="5" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'5\');"> \
                                <input type="button" value="6" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'6\');"> \
                                <input type="button" value="&rarr;" on'+ this.clickeventtouse + '="' + this.variableName + '.moveRight(this);"> \
                </td></tr><tr><td nowrap> \
                                <input type="button" value="1" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'1\');"> \
                                <input type="button" value="2" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'2\');"> \
                                <input type="button" value="3" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'3\');"> \
                                 <input type="button" value="Del" on'+ this.clickeventtouse + '="' + this.variableName + '.deleteChar(this);"> \
                </td></tr><tr><td nowrap> \
                                <input type="button" value="0" on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'0\');"> \
                                <input type="button" value="." on'+ this.clickeventtouse + '="' + this.variableName + '.addChar(this,\'.\');"> \
                                <input type="button" value="Enter" on'+ this.clickeventtouse + '="' + this.variableName + '.submit(this);"> \
                                <input type="button" value="Back" on'+ this.clickeventtouse + '="' + this.variableName + '.deleteChar(this,-1);"> \
                </td></tr><tr><td nowrap> \
                </td></tr> </table> </div> \
<script>\
$(document).ready(function(){ \
if($.fn.nodoubletapzoom){  \
       $("' + this.keyPadDivId + ' input[type=button]").each(function(){$(this).nodoubletapzoom();}); \
}   \
});</script>';

    $(this.keyPadDivId).replaceWith(this.keyPadScreen);

}

function removeAllCookies() {
    var cookies = document.cookie.split(";");
    var foundstorecookie=false;
    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name="";
        if(eqPos == 1){name = '';}
        else{name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;}

        if(name=="STORE"){
            //skip the first storecookie
            if(!foundstorecookie){
                foundstorecookie=true;
            }else{
                document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
            }
        }else{
            document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
        }
    }
    location.reload();
}

function removeJSorCSSfile(filename, filetype,id){
    var searchvalue=filename;
    var targetelement=(filetype=="js")? "script" : (filetype=="css")? "link" : "none" //determine element type to create nodelist from
    var targetattr=(filetype=="js" && arguments.length==2)? "src" : (filetype=="css")? "href" : "none" //determine corresponding attribute to test for
    if(targetattr=="js" && arguments.length==3 && id!=null && id.length>0){
        targetattr="id";
        searchvalue=id;
    }
    var allsuspects=document.getElementsByTagName(targetelement)
    for (var i=allsuspects.length; i>=0; i--){ //search backwards within nodelist for matching elements to remove
        if (allsuspects[i] && allsuspects[i].getAttribute(targetattr)!=null && allsuspects[i].getAttribute(targetattr).indexOf(searchvalue)!=-1)
            allsuspects[i].parentNode.removeChild(allsuspects[i]) //remove element by calling parentNode.removeChild()
    }
}
