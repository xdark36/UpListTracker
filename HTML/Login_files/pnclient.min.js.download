async function pnSubscribe(){pnAvailable()&&("default"===window.Notification.permission&&await window.Notification.requestPermission(),"granted"===Notification.permission&&await pnRegisterSW())}async function pnUnsubscribe(){pnAvailable()&&await pnUnregisterSW()}async function pnUpdate(){pnAvailable()&&await pnUpdateSW()}async function pnSubscribed(){var e=void 0;return pnAvailable()&&(e=await navigator.serviceWorker.getRegistration()),null!=e}function pnAvailable(){var e=!1;return window.isSecureContext?e="serviceWorker"in navigator&&"PushManager"in window&&"Notification"in window:console.log("Site have to run in secure context!"),e}async function pnRegisterSW(){navigator.serviceWorker.register("/PNServiceWorker.js").then(e=>{console.log("Registration succeeded. Scope is "+e.scope)}).catch(e=>{console.log("Registration failed with "+e)})}async function pnUnregisterSW(){navigator.serviceWorker.getRegistration().then(function(e){e.unregister().then(function(e){e?console.log("Unregister service worker succeeded."):console.log("Unregister service worker failed.")})})}async function pnUpdateSW(){navigator.serviceWorker.getRegistration().then(function(e){e.update().then(function(e){e?console.log("update of service worker succeeded."):console.log("update of service worker failed.")})})}function resetSubscription(){pnSubscribed().then(function(e){e?(console.log("Service worker subscribed."),pnUnsubscribe().then(function(){pnSubscribe()})):(console.log("Service worker not subscribed."),pnSubscribe())})}